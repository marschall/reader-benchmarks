# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 128, transferSize = 128)

# Run progress: 0.00% complete, ETA 01:40:00
# Fork: 1 of 1
# Warmup Iteration   1: 5502.462 ops/ms
# Warmup Iteration   2: 5629.929 ops/ms
# Warmup Iteration   3: 5628.060 ops/ms
Iteration   1: 5618.958 ops/ms
                 ·gc.alloc.rate:                   1388.054 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1409.277 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     276.170 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         17.000 ms

Iteration   2: 5618.643 ops/ms
                 ·gc.alloc.rate:                   1387.979 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1352.983 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     265.152 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         18.000 ms

Iteration   3: 5621.089 ops/ms
                 ·gc.alloc.rate:                   1388.567 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1409.334 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     276.079 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         16.000 ms

Iteration   4: 5622.819 ops/ms
                 ·gc.alloc.rate:                   1388.994 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          1352.958 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     264.953 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         13.000 ms

Iteration   5: 5622.496 ops/ms
                 ·gc.alloc.rate:                   1388.930 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1409.346 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     276.009 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         21.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  5620.801 ±(99.9%) 7.477 ops/ms [Average]
  (min, avg, max) = (5618.643, 5620.801, 5622.819), stdev = 1.942
  CI (99.9%): [5613.324, 5628.278] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1388.505 ±(99.9%) 1.831 MB/sec [Average]
  (min, avg, max) = (1387.979, 1388.505, 1388.994), stdev = 0.475
  CI (99.9%): [1386.674, 1390.336] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  272.011 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (272.010, 272.011, 272.011), stdev = 0.001
  CI (99.9%): [272.009, 272.012] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1386.780 ±(99.9%) 118.845 MB/sec [Average]
  (min, avg, max) = (1352.958, 1386.780, 1409.346), stdev = 30.864
  CI (99.9%): [1267.935, 1505.625] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  271.673 ±(99.9%) 23.273 B/op [Average]
  (min, avg, max) = (264.953, 271.673, 276.170), stdev = 6.044
  CI (99.9%): [248.400, 294.946] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.004 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 0, 0.001] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  123.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (24.000, 24.600, 25.000), stdev = 0.548
  CI (99.9%): [123.000, 123.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  85.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (13.000, 17.000, 21.000), stdev = 2.915
  CI (99.9%): [85.000, 85.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 128, transferSize = 1024)

# Run progress: 1.33% complete, ETA 01:43:55
# Fork: 1 of 1
# Warmup Iteration   1: 6539.718 ops/ms
# Warmup Iteration   2: 6721.969 ops/ms
# Warmup Iteration   3: 6723.757 ops/ms
Iteration   1: 6725.381 ops/ms
                 ·gc.alloc.rate:                   2003.415 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          2029.444 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     332.275 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         24.000 ms

Iteration   2: 6729.319 ops/ms
                 ·gc.alloc.rate:                   2004.629 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1973.134 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     322.859 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         22.000 ms

Iteration   3: 6733.856 ops/ms
                 ·gc.alloc.rate:                   2005.941 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          2029.454 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     331.857 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         18.000 ms

Iteration   4: 6731.990 ops/ms
                 ·gc.alloc.rate:                   2005.400 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1973.079 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     322.726 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         22.000 ms

Iteration   5: 6719.985 ops/ms
                 ·gc.alloc.rate:                   2001.819 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          2029.461 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     332.542 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         25.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  6728.106 ±(99.9%) 21.353 ops/ms [Average]
  (min, avg, max) = (6719.985, 6728.106, 6733.856), stdev = 5.545
  CI (99.9%): [6706.754, 6749.459] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  2004.241 ±(99.9%) 6.367 MB/sec [Average]
  (min, avg, max) = (2001.819, 2004.241, 2005.941), stdev = 1.653
  CI (99.9%): [1997.874, 2010.607] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  328.013 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (328.012, 328.013, 328.013), stdev = 0.001
  CI (99.9%): [328.011, 328.014] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  2006.915 ±(99.9%) 118.840 MB/sec [Average]
  (min, avg, max) = (1973.079, 2006.915, 2029.461), stdev = 30.862
  CI (99.9%): [1888.075, 2125.754] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  328.452 ±(99.9%) 19.917 B/op [Average]
  (min, avg, max) = (322.726, 328.452, 332.542), stdev = 5.172
  CI (99.9%): [308.535, 348.369] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.001, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  178.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (35.000, 35.600, 36.000), stdev = 0.548
  CI (99.9%): [178.000, 178.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  111.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (18.000, 22.200, 25.000), stdev = 2.683
  CI (99.9%): [111.000, 111.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 128, transferSize = 1048576)

# Run progress: 2.67% complete, ETA 01:42:31
# Fork: 1 of 1
# Warmup Iteration   1: 6353.207 ops/ms
# Warmup Iteration   2: 6533.880 ops/ms
# Warmup Iteration   3: 6486.561 ops/ms
Iteration   1: 6486.423 ops/ms
                 ·gc.alloc.rate:                   1932.244 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1916.704 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     325.375 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         26.000 ms

Iteration   2: 6489.468 ops/ms
                 ·gc.alloc.rate:                   1933.149 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1916.729 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     325.227 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         19.000 ms

Iteration   3: 6464.410 ops/ms
                 ·gc.alloc.rate:                   1925.707 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1973.125 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     336.090 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 6481.280 ops/ms
                 ·gc.alloc.rate:                   1930.668 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1916.671 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     325.634 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         18.000 ms

Iteration   5: 6488.473 ops/ms
                 ·gc.alloc.rate:                   1932.785 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1916.652 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     325.274 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         18.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  6482.011 ±(99.9%) 39.791 ops/ms [Average]
  (min, avg, max) = (6464.410, 6482.011, 6489.468), stdev = 10.334
  CI (99.9%): [6442.219, 6521.802] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1930.911 ±(99.9%) 11.780 MB/sec [Average]
  (min, avg, max) = (1925.707, 1930.911, 1933.149), stdev = 3.059
  CI (99.9%): [1919.131, 1942.690] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  328.013 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (328.012, 328.013, 328.013), stdev = 0.001
  CI (99.9%): [328.011, 328.014] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1927.976 ±(99.9%) 97.187 MB/sec [Average]
  (min, avg, max) = (1916.652, 1927.976, 1973.125), stdev = 25.239
  CI (99.9%): [1830.789, 2025.163] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  327.520 ±(99.9%) 18.457 B/op [Average]
  (min, avg, max) = (325.227, 327.520, 336.090), stdev = 4.793
  CI (99.9%): [309.063, 345.977] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  171.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (34.000, 34.200, 35.000), stdev = 0.447
  CI (99.9%): [171.000, 171.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  101.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (18.000, 20.200, 26.000), stdev = 3.347
  CI (99.9%): [101.000, 101.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1024, transferSize = 128)

# Run progress: 4.00% complete, ETA 01:41:06
# Fork: 1 of 1
# Warmup Iteration   1: 886.433 ops/ms
# Warmup Iteration   2: 902.671 ops/ms
# Warmup Iteration   3: 903.015 ops/ms
Iteration   1: 903.039 ops/ms
                 ·gc.alloc.rate:                   1692.776 MB/sec
                 ·gc.alloc.rate.norm:              2064.083 B/op
                 ·gc.churn.G1_Eden_Space:          1691.211 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2062.174 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         19.000 ms

Iteration   2: 903.204 ops/ms
                 ·gc.alloc.rate:                   1693.104 MB/sec
                 ·gc.alloc.rate.norm:              2064.081 B/op
                 ·gc.churn.G1_Eden_Space:          1691.256 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2061.828 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         18.000 ms

Iteration   3: 902.379 ops/ms
                 ·gc.alloc.rate:                   1691.533 MB/sec
                 ·gc.alloc.rate.norm:              2064.080 B/op
                 ·gc.churn.G1_Eden_Space:          1691.220 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2063.698 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         27.000 ms

Iteration   4: 903.534 ops/ms
                 ·gc.alloc.rate:                   1693.673 MB/sec
                 ·gc.alloc.rate.norm:              2064.078 B/op
                 ·gc.churn.G1_Eden_Space:          1691.197 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2061.060 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         21.000 ms

Iteration   5: 903.869 ops/ms
                 ·gc.alloc.rate:                   1694.317 MB/sec
                 ·gc.alloc.rate.norm:              2064.078 B/op
                 ·gc.churn.G1_Eden_Space:          1691.206 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2060.288 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         18.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  903.205 ±(99.9%) 2.160 ops/ms [Average]
  (min, avg, max) = (902.379, 903.205, 903.869), stdev = 0.561
  CI (99.9%): [901.046, 905.365] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1693.081 ±(99.9%) 4.024 MB/sec [Average]
  (min, avg, max) = (1691.533, 1693.081, 1694.317), stdev = 1.045
  CI (99.9%): [1689.057, 1697.104] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2064.080 ±(99.9%) 0.008 B/op [Average]
  (min, avg, max) = (2064.078, 2064.080, 2064.083), stdev = 0.002
  CI (99.9%): [2064.072, 2064.088] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1691.218 ±(99.9%) 0.088 MB/sec [Average]
  (min, avg, max) = (1691.197, 1691.218, 1691.256), stdev = 0.023
  CI (99.9%): [1691.130, 1691.306] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2061.810 ±(99.9%) 4.936 B/op [Average]
  (min, avg, max) = (2060.288, 2061.810, 2063.698), stdev = 1.282
  CI (99.9%): [2056.873, 2066.746] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.003 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.002, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  150.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (30.000, 30.000, 30.000), stdev = 0.001
  CI (99.9%): [150.000, 150.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  103.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (18.000, 20.600, 27.000), stdev = 3.782
  CI (99.9%): [103.000, 103.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1024, transferSize = 1024)

# Run progress: 5.33% complete, ETA 01:39:42
# Fork: 1 of 1
# Warmup Iteration   1: 1339.117 ops/ms
# Warmup Iteration   2: 1363.359 ops/ms
# Warmup Iteration   3: 1364.896 ops/ms
Iteration   1: 1363.643 ops/ms
                 ·gc.alloc.rate:                   2556.201 MB/sec
                 ·gc.alloc.rate.norm:              2064.080 B/op
                 ·gc.churn.G1_Eden_Space:          2536.828 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2048.436 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         24.000 ms

Iteration   2: 1363.776 ops/ms
                 ·gc.alloc.rate:                   2556.465 MB/sec
                 ·gc.alloc.rate.norm:              2064.077 B/op
                 ·gc.churn.G1_Eden_Space:          2536.869 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2048.256 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         30.000 ms

Iteration   3: 1363.402 ops/ms
                 ·gc.alloc.rate:                   2555.742 MB/sec
                 ·gc.alloc.rate.norm:              2064.079 B/op
                 ·gc.churn.G1_Eden_Space:          2593.208 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2094.337 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         28.000 ms

Iteration   4: 1366.378 ops/ms
                 ·gc.alloc.rate:                   2561.269 MB/sec
                 ·gc.alloc.rate.norm:              2064.077 B/op
                 ·gc.churn.G1_Eden_Space:          2536.787 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2044.348 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         22.000 ms

Iteration   5: 1364.717 ops/ms
                 ·gc.alloc.rate:                   2558.110 MB/sec
                 ·gc.alloc.rate.norm:              2064.079 B/op
                 ·gc.churn.G1_Eden_Space:          2593.124 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2092.330 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         26.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1364.383 ±(99.9%) 4.703 ops/ms [Average]
  (min, avg, max) = (1363.402, 1364.383, 1366.378), stdev = 1.221
  CI (99.9%): [1359.680, 1369.087] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  2557.557 ±(99.9%) 8.698 MB/sec [Average]
  (min, avg, max) = (2555.742, 2557.557, 2561.269), stdev = 2.259
  CI (99.9%): [2548.860, 2566.255] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2064.078 ±(99.9%) 0.004 B/op [Average]
  (min, avg, max) = (2064.077, 2064.078, 2064.080), stdev = 0.001
  CI (99.9%): [2064.074, 2064.083] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  2559.363 ±(99.9%) 118.821 MB/sec [Average]
  (min, avg, max) = (2536.787, 2559.363, 2593.208), stdev = 30.857
  CI (99.9%): [2440.542, 2678.185] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2065.542 ±(99.9%) 97.934 B/op [Average]
  (min, avg, max) = (2044.348, 2065.542, 2094.337), stdev = 25.433
  CI (99.9%): [1967.608, 2163.476] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.007 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.006), stdev = 0.002
  CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.003 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  227.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (45.000, 45.400, 46.000), stdev = 0.548
  CI (99.9%): [227.000, 227.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  130.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (22.000, 26.000, 30.000), stdev = 3.162
  CI (99.9%): [130.000, 130.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 6.67% complete, ETA 01:38:18
# Fork: 1 of 1
# Warmup Iteration   1: 1455.961 ops/ms
# Warmup Iteration   2: 1479.618 ops/ms
# Warmup Iteration   3: 1483.716 ops/ms
Iteration   1: 1483.800 ops/ms
                 ·gc.alloc.rate:                   2781.490 MB/sec
                 ·gc.alloc.rate.norm:              2064.081 B/op
                 ·gc.churn.G1_Eden_Space:          2818.780 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2091.753 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         27.000 ms

Iteration   2: 1482.694 ops/ms
                 ·gc.alloc.rate:                   2779.411 MB/sec
                 ·gc.alloc.rate.norm:              2064.077 B/op
                 ·gc.churn.G1_Eden_Space:          2762.405 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2051.448 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         30.000 ms

Iteration   3: 1482.064 ops/ms
                 ·gc.alloc.rate:                   2778.164 MB/sec
                 ·gc.alloc.rate.norm:              2064.077 B/op
                 ·gc.churn.G1_Eden_Space:          2762.312 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2052.301 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 1481.210 ops/ms
                 ·gc.alloc.rate:                   2776.567 MB/sec
                 ·gc.alloc.rate.norm:              2064.079 B/op
                 ·gc.churn.G1_Eden_Space:          2818.688 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2095.392 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         31.000 ms

Iteration   5: 1483.385 ops/ms
                 ·gc.alloc.rate:                   2780.591 MB/sec
                 ·gc.alloc.rate.norm:              2064.076 B/op
                 ·gc.churn.G1_Eden_Space:          2762.269 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2050.476 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         26.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1482.631 ±(99.9%) 3.983 ops/ms [Average]
  (min, avg, max) = (1481.210, 1482.631, 1483.800), stdev = 1.034
  CI (99.9%): [1478.648, 1486.614] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  2779.244 ±(99.9%) 7.511 MB/sec [Average]
  (min, avg, max) = (2776.567, 2779.244, 2781.490), stdev = 1.951
  CI (99.9%): [2771.733, 2786.756] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2064.078 ±(99.9%) 0.007 B/op [Average]
  (min, avg, max) = (2064.076, 2064.078, 2064.081), stdev = 0.002
  CI (99.9%): [2064.071, 2064.085] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  2784.891 ±(99.9%) 118.964 MB/sec [Average]
  (min, avg, max) = (2762.269, 2784.891, 2818.780), stdev = 30.894
  CI (99.9%): [2665.927, 2903.854] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2068.274 ±(99.9%) 89.100 B/op [Average]
  (min, avg, max) = (2050.476, 2068.274, 2095.392), stdev = 23.139
  CI (99.9%): [1979.174, 2157.374] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 10⁻³, 0.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.002 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  247.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (49.000, 49.400, 50.000), stdev = 0.548
  CI (99.9%): [247.000, 247.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  143.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (26.000, 28.600, 31.000), stdev = 2.074
  CI (99.9%): [143.000, 143.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1048576, transferSize = 128)

# Run progress: 8.00% complete, ETA 01:36:53
# Fork: 1 of 1
# Warmup Iteration   1: 1.001 ops/ms
# Warmup Iteration   2: 1.005 ops/ms
# Warmup Iteration   3: 1.003 ops/ms
Iteration   1: 1.009 ops/ms
                 ·gc.alloc.rate:               21.607 MB/sec
                 ·gc.alloc.rate.norm:          23570.675 B/op
                 ·gc.churn.G1_Eden_Space:      56.369 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 61491.530 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 1.016 ops/ms
                 ·gc.alloc.rate:      21.745 MB/sec
                 ·gc.alloc.rate.norm: 23568.040 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.016 ops/ms
                 ·gc.alloc.rate:      21.753 MB/sec
                 ·gc.alloc.rate.norm: 23568.040 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.011 ops/ms
                 ·gc.alloc.rate:                   21.650 MB/sec
                 ·gc.alloc.rate.norm:              23570.672 B/op
                 ·gc.churn.G1_Eden_Space:          56.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     61369.945 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1.647 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         1.000 ms

Iteration   5: 1.011 ops/ms
                 ·gc.alloc.rate:      21.636 MB/sec
                 ·gc.alloc.rate.norm: 23568.044 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1.013 ±(99.9%) 0.012 ops/ms [Average]
  (min, avg, max) = (1.009, 1.013, 1.016), stdev = 0.003
  CI (99.9%): [1.001, 1.025] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  21.678 ±(99.9%) 0.256 MB/sec [Average]
  (min, avg, max) = (21.607, 21.678, 21.753), stdev = 0.067
  CI (99.9%): [21.422, 21.934] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23569.094 ±(99.9%) 5.552 B/op [Average]
  (min, avg, max) = (23568.040, 23569.094, 23570.675), stdev = 1.442
  CI (99.9%): [23563.542, 23574.647] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  22.548 ±(99.9%) 118.887 MB/sec [Average]
  (min, avg, max) = (≈ 0, 22.548, 56.370), stdev = 30.875
  CI (99.9%): [≈ 0, 141.435] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  24572.295 ±(99.9%) 129562.724 B/op [Average]
  (min, avg, max) = (≈ 0, 24572.295, 61491.530), stdev = 33647.028
  CI (99.9%): [≈ 0, 154135.019] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.329 ±(99.9%) 2.836 B/op [Average]
  (min, avg, max) = (≈ 0, 0.329, 1.647), stdev = 0.736
  CI (99.9%): [≈ 0, 3.165] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  3.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.600, 2.000), stdev = 0.894
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 9.33% complete, ETA 01:35:29
# Fork: 1 of 1
# Warmup Iteration   1: 1.158 ops/ms
# Warmup Iteration   2: 1.155 ops/ms
# Warmup Iteration   3: 1.153 ops/ms
Iteration   1: 1.150 ops/ms
                 ·gc.alloc.rate:               24.621 MB/sec
                 ·gc.alloc.rate.norm:          23570.348 B/op
                 ·gc.churn.G1_Eden_Space:      56.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 53964.791 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 1.158 ops/ms
                 ·gc.alloc.rate:      24.785 MB/sec
                 ·gc.alloc.rate.norm: 23568.035 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.158 ops/ms
                 ·gc.alloc.rate:               24.780 MB/sec
                 ·gc.alloc.rate.norm:          23570.336 B/op
                 ·gc.churn.G1_Eden_Space:      56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 53619.849 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   4: 1.160 ops/ms
                 ·gc.alloc.rate:      24.818 MB/sec
                 ·gc.alloc.rate.norm: 23568.038 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.159 ops/ms
                 ·gc.alloc.rate:                   24.809 MB/sec
                 ·gc.alloc.rate.norm:              23570.335 B/op
                 ·gc.churn.G1_Eden_Space:          56.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     53555.085 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 6.054 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1.157 ±(99.9%) 0.015 ops/ms [Average]
  (min, avg, max) = (1.150, 1.157, 1.160), stdev = 0.004
  CI (99.9%): [1.142, 1.172] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  24.763 ±(99.9%) 0.311 MB/sec [Average]
  (min, avg, max) = (24.621, 24.763, 24.818), stdev = 0.081
  CI (99.9%): [24.451, 25.074] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23569.418 ±(99.9%) 4.857 B/op [Average]
  (min, avg, max) = (23568.035, 23569.418, 23570.348), stdev = 1.261
  CI (99.9%): [23564.561, 23574.275] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  33.822 ±(99.9%) 118.890 MB/sec [Average]
  (min, avg, max) = (≈ 0, 33.822, 56.371), stdev = 30.875
  CI (99.9%): [≈ 0, 152.712] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  32227.945 ±(99.9%) 113287.355 B/op [Average]
  (min, avg, max) = (≈ 0, 32227.945, 53964.791), stdev = 29420.366
  CI (99.9%): [≈ 0, 145515.300] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.011 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.006), stdev = 0.003
  CI (99.9%): [≈ 0, 0.012] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  1.211 ±(99.9%) 10.426 B/op [Average]
  (min, avg, max) = (≈ 0, 1.211, 6.054), stdev = 2.708
  CI (99.9%): [≈ 0, 11.637] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  3.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 10.67% complete, ETA 01:34:04
# Fork: 1 of 1
# Warmup Iteration   1: 1.638 ops/ms
# Warmup Iteration   2: 1.636 ops/ms
# Warmup Iteration   3: 1.649 ops/ms
Iteration   1: 1.652 ops/ms
                 ·gc.alloc.rate:               35.355 MB/sec
                 ·gc.alloc.rate.norm:          23569.635 B/op
                 ·gc.churn.G1_Eden_Space:      56.372 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 37580.639 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 1.654 ops/ms
                 ·gc.alloc.rate:      35.397 MB/sec
                 ·gc.alloc.rate.norm: 23568.027 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.653 ops/ms
                 ·gc.alloc.rate:               35.374 MB/sec
                 ·gc.alloc.rate.norm:          23569.634 B/op
                 ·gc.churn.G1_Eden_Space:      56.372 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 37560.174 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   4: 1.650 ops/ms
                 ·gc.alloc.rate:                   35.325 MB/sec
                 ·gc.alloc.rate.norm:              23569.646 B/op
                 ·gc.churn.G1_Eden_Space:          56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     37612.518 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.934 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         1.000 ms

Iteration   5: 1.653 ops/ms
                 ·gc.alloc.rate:      35.382 MB/sec
                 ·gc.alloc.rate.norm: 23568.027 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1.652 ±(99.9%) 0.005 ops/ms [Average]
  (min, avg, max) = (1.650, 1.652, 1.654), stdev = 0.001
  CI (99.9%): [1.647, 1.657] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  35.367 ±(99.9%) 0.107 MB/sec [Average]
  (min, avg, max) = (35.325, 35.367, 35.397), stdev = 0.028
  CI (99.9%): [35.259, 35.474] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23568.994 ±(99.9%) 3.400 B/op [Average]
  (min, avg, max) = (23568.027, 23568.994, 23569.646), stdev = 0.883
  CI (99.9%): [23565.594, 23572.393] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  33.823 ±(99.9%) 118.893 MB/sec [Average]
  (min, avg, max) = (≈ 0, 33.823, 56.372), stdev = 30.876
  CI (99.9%): [≈ 0, 152.716] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  22550.666 ±(99.9%) 79268.801 B/op [Average]
  (min, avg, max) = (≈ 0, 22550.666, 37612.518), stdev = 20585.856
  CI (99.9%): [≈ 0, 101819.467] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.187 ±(99.9%) 1.609 B/op [Average]
  (min, avg, max) = (≈ 0, 0.187, 0.934), stdev = 0.418
  CI (99.9%): [≈ 0, 1.795] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  3.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 128, transferSize = 128)

# Run progress: 12.00% complete, ETA 01:32:40
# Fork: 1 of 1
# Warmup Iteration   1: 5645.493 ops/ms
# Warmup Iteration   2: 5954.942 ops/ms
# Warmup Iteration   3: 5741.667 ops/ms
Iteration   1: 5744.867 ops/ms
                 ·gc.alloc.rate:                   1711.350 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1691.218 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     324.154 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         19.000 ms

Iteration   2: 5750.348 ops/ms
                 ·gc.alloc.rate:                   1712.984 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1747.613 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     334.644 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         21.000 ms

Iteration   3: 5744.318 ops/ms
                 ·gc.alloc.rate:                   1711.158 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1691.196 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     324.186 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         17.000 ms

Iteration   4: 5736.621 ops/ms
                 ·gc.alloc.rate:                   1708.888 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1747.596 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     335.443 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         19.000 ms

Iteration   5: 5743.663 ops/ms
                 ·gc.alloc.rate:                   1710.979 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1691.216 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     324.223 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         24.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  5743.963 ±(99.9%) 18.835 ops/ms [Average]
  (min, avg, max) = (5736.621, 5743.963, 5750.348), stdev = 4.892
  CI (99.9%): [5725.128, 5762.799] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1711.072 ±(99.9%) 5.620 MB/sec [Average]
  (min, avg, max) = (1708.888, 1711.072, 1712.984), stdev = 1.459
  CI (99.9%): [1705.452, 1716.691] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  328.013 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (328.012, 328.013, 328.013), stdev = 0.001
  CI (99.9%): [328.011, 328.014] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1713.768 ±(99.9%) 118.940 MB/sec [Average]
  (min, avg, max) = (1691.196, 1713.768, 1747.613), stdev = 30.888
  CI (99.9%): [1594.828, 1832.708] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  328.530 ±(99.9%) 22.921 B/op [Average]
  (min, avg, max) = (324.154, 328.530, 335.443), stdev = 5.953
  CI (99.9%): [305.609, 351.451] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 0, 0.001] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  152.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (30.000, 30.400, 31.000), stdev = 0.548
  CI (99.9%): [152.000, 152.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  100.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (17.000, 20.000, 24.000), stdev = 2.646
  CI (99.9%): [100.000, 100.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 128, transferSize = 1024)

# Run progress: 13.33% complete, ETA 01:31:16
# Fork: 1 of 1
# Warmup Iteration   1: 6470.365 ops/ms
# Warmup Iteration   2: 6576.306 ops/ms
# Warmup Iteration   3: 6609.474 ops/ms
Iteration   1: 6611.615 ops/ms
                 ·gc.alloc.rate:                   1969.540 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1973.077 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.602 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         19.000 ms

Iteration   2: 6599.878 ops/ms
                 ·gc.alloc.rate:                   1966.040 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1973.099 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.191 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         28.000 ms

Iteration   3: 6602.117 ops/ms
                 ·gc.alloc.rate:                   1966.685 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1973.069 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.077 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         21.000 ms

Iteration   4: 6606.804 ops/ms
                 ·gc.alloc.rate:                   1968.111 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1973.105 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.845 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         19.000 ms

Iteration   5: 6609.310 ops/ms
                 ·gc.alloc.rate:                   1968.831 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1973.070 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.719 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         21.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  6605.945 ±(99.9%) 18.832 ops/ms [Average]
  (min, avg, max) = (6599.878, 6605.945, 6611.615), stdev = 4.891
  CI (99.9%): [6587.113, 6624.777] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1967.842 ±(99.9%) 5.621 MB/sec [Average]
  (min, avg, max) = (1966.040, 1967.842, 1969.540), stdev = 1.460
  CI (99.9%): [1962.221, 1973.462] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  328.013 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (328.012, 328.013, 328.013), stdev = 0.001
  CI (99.9%): [328.012, 328.014] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1973.084 ±(99.9%) 0.065 MB/sec [Average]
  (min, avg, max) = (1973.069, 1973.084, 1973.105), stdev = 0.017
  CI (99.9%): [1973.019, 1973.148] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  328.887 ±(99.9%) 0.943 B/op [Average]
  (min, avg, max) = (328.602, 328.887, 329.191), stdev = 0.245
  CI (99.9%): [327.944, 329.829] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  175.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (35.000, 35.000, 35.000), stdev = 0.001
  CI (99.9%): [175.000, 175.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  108.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (19.000, 21.600, 28.000), stdev = 3.715
  CI (99.9%): [108.000, 108.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 128, transferSize = 1048576)

# Run progress: 14.67% complete, ETA 01:29:52
# Fork: 1 of 1
# Warmup Iteration   1: 6526.036 ops/ms
# Warmup Iteration   2: 6574.496 ops/ms
# Warmup Iteration   3: 6707.191 ops/ms
Iteration   1: 6713.379 ops/ms
                 ·gc.alloc.rate:                   1658.406 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1691.198 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     277.390 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         17.000 ms

Iteration   2: 6709.593 ops/ms
                 ·gc.alloc.rate:                   1657.496 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1634.870 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     268.297 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         22.000 ms

Iteration   3: 6715.488 ops/ms
                 ·gc.alloc.rate:                   1658.944 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1691.153 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     277.292 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         19.000 ms

Iteration   4: 6712.138 ops/ms
                 ·gc.alloc.rate:                   1658.068 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          1634.815 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     268.195 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         21.000 ms

Iteration   5: 6712.590 ops/ms
                 ·gc.alloc.rate:                   1658.190 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          1634.818 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     268.176 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         18.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  6712.637 ±(99.9%) 8.214 ops/ms [Average]
  (min, avg, max) = (6709.593, 6712.637, 6715.488), stdev = 2.133
  CI (99.9%): [6704.424, 6720.851] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1658.221 ±(99.9%) 2.025 MB/sec [Average]
  (min, avg, max) = (1657.496, 1658.221, 1658.944), stdev = 0.526
  CI (99.9%): [1656.196, 1660.246] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  272.011 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (272.010, 272.011, 272.011), stdev = 0.001
  CI (99.9%): [272.009, 272.012] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1657.371 ±(99.9%) 118.828 MB/sec [Average]
  (min, avg, max) = (1634.815, 1657.371, 1691.198), stdev = 30.859
  CI (99.9%): [1538.543, 1776.199] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  271.870 ±(99.9%) 19.232 B/op [Average]
  (min, avg, max) = (268.176, 271.870, 277.390), stdev = 4.994
  CI (99.9%): [252.639, 291.102] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (0.003, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  147.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (29.000, 29.400, 30.000), stdev = 0.548
  CI (99.9%): [147.000, 147.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  97.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (17.000, 19.400, 22.000), stdev = 2.074
  CI (99.9%): [97.000, 97.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1024, transferSize = 128)

# Run progress: 16.00% complete, ETA 01:28:27
# Fork: 1 of 1
# Warmup Iteration   1: 829.391 ops/ms
# Warmup Iteration   2: 844.152 ops/ms
# Warmup Iteration   3: 845.105 ops/ms
Iteration   1: 844.795 ops/ms
                 ·gc.alloc.rate:                   1626.570 MB/sec
                 ·gc.alloc.rate.norm:              2120.086 B/op
                 ·gc.churn.G1_Eden_Space:          1634.850 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2130.877 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         23.000 ms

Iteration   2: 843.043 ops/ms
                 ·gc.alloc.rate:                   1623.203 MB/sec
                 ·gc.alloc.rate.norm:              2120.085 B/op
                 ·gc.churn.G1_Eden_Space:          1634.872 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2135.325 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         18.000 ms

Iteration   3: 843.222 ops/ms
                 ·gc.alloc.rate:                   1623.515 MB/sec
                 ·gc.alloc.rate.norm:              2120.083 B/op
                 ·gc.churn.G1_Eden_Space:          1634.832 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2134.862 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         21.000 ms

Iteration   4: 844.396 ops/ms
                 ·gc.alloc.rate:                   1625.785 MB/sec
                 ·gc.alloc.rate.norm:              2120.081 B/op
                 ·gc.churn.G1_Eden_Space:          1634.837 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2131.885 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         18.000 ms

Iteration   5: 844.528 ops/ms
                 ·gc.alloc.rate:                   1626.030 MB/sec
                 ·gc.alloc.rate.norm:              2120.081 B/op
                 ·gc.churn.G1_Eden_Space:          1634.835 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2131.560 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         23.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  843.997 ±(99.9%) 3.097 ops/ms [Average]
  (min, avg, max) = (843.043, 843.997, 844.795), stdev = 0.804
  CI (99.9%): [840.899, 847.094] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1625.021 ±(99.9%) 5.957 MB/sec [Average]
  (min, avg, max) = (1623.203, 1625.021, 1626.570), stdev = 1.547
  CI (99.9%): [1619.064, 1630.978] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2120.083 ±(99.9%) 0.008 B/op [Average]
  (min, avg, max) = (2120.081, 2120.083, 2120.086), stdev = 0.002
  CI (99.9%): [2120.075, 2120.091] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1634.845 ±(99.9%) 0.063 MB/sec [Average]
  (min, avg, max) = (1634.832, 1634.845, 1634.872), stdev = 0.016
  CI (99.9%): [1634.782, 1634.908] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2132.902 ±(99.9%) 7.855 B/op [Average]
  (min, avg, max) = (2130.877, 2132.902, 2135.325), stdev = 2.040
  CI (99.9%): [2125.047, 2140.757] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.005 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.004 ±(99.9%) 0.006 B/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.007), stdev = 0.002
  CI (99.9%): [≈ 0, 0.011] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  145.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (29.000, 29.000, 29.000), stdev = 0.001
  CI (99.9%): [145.000, 145.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  103.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (18.000, 20.600, 23.000), stdev = 2.510
  CI (99.9%): [103.000, 103.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1024, transferSize = 1024)

# Run progress: 17.33% complete, ETA 01:27:03
# Fork: 1 of 1
# Warmup Iteration   1: 1512.640 ops/ms
# Warmup Iteration   2: 1541.808 ops/ms
# Warmup Iteration   3: 1540.154 ops/ms
Iteration   1: 1543.277 ops/ms
                 ·gc.alloc.rate:                   2971.439 MB/sec
                 ·gc.alloc.rate.norm:              2120.082 B/op
                 ·gc.churn.G1_Eden_Space:          2987.872 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2131.806 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         30.000 ms

Iteration   2: 1544.144 ops/ms
                 ·gc.alloc.rate:                   2973.102 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          2987.869 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2130.611 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         31.000 ms

Iteration   3: 1545.054 ops/ms
                 ·gc.alloc.rate:                   2974.841 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          2987.825 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2129.334 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         30.000 ms

Iteration   4: 1542.002 ops/ms
                 ·gc.alloc.rate:                   2968.871 MB/sec
                 ·gc.alloc.rate.norm:              2120.079 B/op
                 ·gc.churn.G1_Eden_Space:          2931.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2093.301 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         30.000 ms

Iteration   5: 1544.904 ops/ms
                 ·gc.alloc.rate:                   2974.517 MB/sec
                 ·gc.alloc.rate.norm:              2120.079 B/op
                 ·gc.churn.G1_Eden_Space:          2987.815 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2129.557 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         27.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1543.876 ±(99.9%) 4.866 ops/ms [Average]
  (min, avg, max) = (1542.002, 1543.876, 1545.054), stdev = 1.264
  CI (99.9%): [1539.010, 1548.742] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  2972.554 ±(99.9%) 9.470 MB/sec [Average]
  (min, avg, max) = (2968.871, 2972.554, 2974.841), stdev = 2.459
  CI (99.9%): [2963.084, 2982.024] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2120.080 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (2120.079, 2120.080, 2120.082), stdev = 0.001
  CI (99.9%): [2120.075, 2120.085] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  2976.551 ±(99.9%) 97.249 MB/sec [Average]
  (min, avg, max) = (2931.373, 2976.551, 2987.872), stdev = 25.255
  CI (99.9%): [2879.302, 3073.800] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2122.922 ±(99.9%) 63.873 B/op [Average]
  (min, avg, max) = (2093.301, 2122.922, 2131.806), stdev = 16.588
  CI (99.9%): [2059.049, 2186.795] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.008 MB/sec [Average]
  (min, avg, max) = (0.002, 0.004, 0.006), stdev = 0.002
  CI (99.9%): [≈ 0, 0.012] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.003 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  264.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (52.000, 52.800, 53.000), stdev = 0.447
  CI (99.9%): [264.000, 264.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  148.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (27.000, 29.600, 31.000), stdev = 1.517
  CI (99.9%): [148.000, 148.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 18.67% complete, ETA 01:25:39
# Fork: 1 of 1
# Warmup Iteration   1: 1555.369 ops/ms
# Warmup Iteration   2: 1584.327 ops/ms
# Warmup Iteration   3: 1589.639 ops/ms
Iteration   1: 1588.320 ops/ms
                 ·gc.alloc.rate:                   3058.125 MB/sec
                 ·gc.alloc.rate.norm:              2120.081 B/op
                 ·gc.churn.G1_Eden_Space:          3044.184 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2110.416 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         31.000 ms

Iteration   2: 1588.621 ops/ms
                 ·gc.alloc.rate:                   3058.530 MB/sec
                 ·gc.alloc.rate.norm:              2120.081 B/op
                 ·gc.churn.G1_Eden_Space:          3100.395 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2149.101 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         31.000 ms

Iteration   3: 1584.991 ops/ms
                 ·gc.alloc.rate:                   3051.727 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          3044.201 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2114.852 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         31.000 ms

Iteration   4: 1583.474 ops/ms
                 ·gc.alloc.rate:                   3048.791 MB/sec
                 ·gc.alloc.rate.norm:              2120.079 B/op
                 ·gc.churn.G1_Eden_Space:          3044.180 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2116.873 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         29.000 ms

Iteration   5: 1584.447 ops/ms
                 ·gc.alloc.rate:                   3050.623 MB/sec
                 ·gc.alloc.rate.norm:              2120.079 B/op
                 ·gc.churn.G1_Eden_Space:          3044.148 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2115.579 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         28.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1585.971 ±(99.9%) 9.042 ops/ms [Average]
  (min, avg, max) = (1583.474, 1585.971, 1588.621), stdev = 2.348
  CI (99.9%): [1576.929, 1595.012] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  3053.559 ±(99.9%) 17.249 MB/sec [Average]
  (min, avg, max) = (3048.791, 3053.559, 3058.530), stdev = 4.480
  CI (99.9%): [3036.310, 3070.809] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2120.080 ±(99.9%) 0.004 B/op [Average]
  (min, avg, max) = (2120.079, 2120.080, 2120.081), stdev = 0.001
  CI (99.9%): [2120.076, 2120.084] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  3055.422 ±(99.9%) 96.808 MB/sec [Average]
  (min, avg, max) = (3044.148, 3055.422, 3100.395), stdev = 25.141
  CI (99.9%): [2958.613, 3152.230] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2121.364 ±(99.9%) 60.433 B/op [Average]
  (min, avg, max) = (2110.416, 2121.364, 2149.101), stdev = 15.694
  CI (99.9%): [2060.931, 2181.797] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (0.003, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.002 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  271.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (54.000, 54.200, 55.000), stdev = 0.447
  CI (99.9%): [271.000, 271.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  150.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (28.000, 30.000, 31.000), stdev = 1.414
  CI (99.9%): [150.000, 150.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1048576, transferSize = 128)

# Run progress: 20.00% complete, ETA 01:24:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.995 ops/ms
# Warmup Iteration   2: 0.992 ops/ms
# Warmup Iteration   3: 0.990 ops/ms
Iteration   1: 0.990 ops/ms
                 ·gc.alloc.rate:               21.186 MB/sec
                 ·gc.alloc.rate.norm:          23570.729 B/op
                 ·gc.churn.G1_Eden_Space:      56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 62715.396 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 0.989 ops/ms
                 ·gc.alloc.rate:      21.171 MB/sec
                 ·gc.alloc.rate.norm: 23568.041 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 0.990 ops/ms
                 ·gc.alloc.rate:      21.182 MB/sec
                 ·gc.alloc.rate.norm: 23568.041 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.008 ops/ms
                 ·gc.alloc.rate:                   21.577 MB/sec
                 ·gc.alloc.rate.norm:              23570.685 B/op
                 ·gc.churn.G1_Eden_Space:          56.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     61576.926 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.948 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         1.000 ms

Iteration   5: 1.012 ops/ms
                 ·gc.alloc.rate:      21.662 MB/sec
                 ·gc.alloc.rate.norm: 23568.043 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  0.998 ±(99.9%) 0.044 ops/ms [Average]
  (min, avg, max) = (0.989, 0.998, 1.012), stdev = 0.011
  CI (99.9%): [0.954, 1.041] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  21.356 ±(99.9%) 0.936 MB/sec [Average]
  (min, avg, max) = (21.171, 21.356, 21.662), stdev = 0.243
  CI (99.9%): [20.420, 22.291] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23569.108 ±(99.9%) 5.620 B/op [Average]
  (min, avg, max) = (23568.041, 23569.108, 23570.729), stdev = 1.460
  CI (99.9%): [23563.488, 23574.728] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  22.548 ±(99.9%) 118.890 MB/sec [Average]
  (min, avg, max) = (≈ 0, 22.548, 56.371), stdev = 30.875
  CI (99.9%): [≈ 0, 141.438] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  24858.464 ±(99.9%) 131080.671 B/op [Average]
  (min, avg, max) = (≈ 0, 24858.464, 62715.396), stdev = 34041.234
  CI (99.9%): [≈ 0, 155939.136] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.190 ±(99.9%) 1.632 B/op [Average]
  (min, avg, max) = (≈ 0, 0.190, 0.948), stdev = 0.424
  CI (99.9%): [≈ 0, 1.821] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  3.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.600, 2.000), stdev = 0.894
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 21.33% complete, ETA 01:22:50
# Fork: 1 of 1
# Warmup Iteration   1: 1.459 ops/ms
# Warmup Iteration   2: 1.461 ops/ms
# Warmup Iteration   3: 1.468 ops/ms
Iteration   1: 1.474 ops/ms
                 ·gc.alloc.rate:      31.547 MB/sec
                 ·gc.alloc.rate.norm: 23568.028 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.471 ops/ms
                 ·gc.alloc.rate:                   31.489 MB/sec
                 ·gc.alloc.rate.norm:              23569.837 B/op
                 ·gc.churn.G1_Eden_Space:          56.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     42193.923 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2.625 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   3: 1.470 ops/ms
                 ·gc.alloc.rate:               31.466 MB/sec
                 ·gc.alloc.rate.norm:          23569.837 B/op
                 ·gc.churn.G1_Eden_Space:      56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 42225.494 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   4: 1.467 ops/ms
                 ·gc.alloc.rate:      31.394 MB/sec
                 ·gc.alloc.rate.norm: 23568.037 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.465 ops/ms
                 ·gc.alloc.rate:                   31.364 MB/sec
                 ·gc.alloc.rate.norm:              23569.847 B/op
                 ·gc.churn.G1_Eden_Space:          56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     42363.816 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 3.040 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1.469 ±(99.9%) 0.013 ops/ms [Average]
  (min, avg, max) = (1.465, 1.469, 1.474), stdev = 0.003
  CI (99.9%): [1.456, 1.483] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  31.452 ±(99.9%) 0.284 MB/sec [Average]
  (min, avg, max) = (31.364, 31.452, 31.547), stdev = 0.074
  CI (99.9%): [31.168, 31.736] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23569.117 ±(99.9%) 3.814 B/op [Average]
  (min, avg, max) = (23568.028, 23569.117, 23569.847), stdev = 0.990
  CI (99.9%): [23565.304, 23572.931] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  33.823 ±(99.9%) 118.892 MB/sec [Average]
  (min, avg, max) = (≈ 0, 33.823, 56.373), stdev = 30.876
  CI (99.9%): [≈ 0, 152.715] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  25356.647 ±(99.9%) 89132.525 B/op [Average]
  (min, avg, max) = (≈ 0, 25356.647, 42363.816), stdev = 23147.434
  CI (99.9%): [≈ 0, 114489.172] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.008 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.002, 0.004), stdev = 0.002
  CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  1.133 ±(99.9%) 6.000 B/op [Average]
  (min, avg, max) = (≈ 0, 1.133, 3.040), stdev = 1.558
  CI (99.9%): [≈ 0, 7.133] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  3.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 22.67% complete, ETA 01:21:26
# Fork: 1 of 1
# Warmup Iteration   1: 2.207 ops/ms
# Warmup Iteration   2: 2.207 ops/ms
# Warmup Iteration   3: 2.208 ops/ms
Iteration   1: 2.230 ops/ms
                 ·gc.alloc.rate:                   33.215 MB/sec
                 ·gc.alloc.rate.norm:              16401.215 B/op
                 ·gc.churn.G1_Eden_Space:          56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     27836.636 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1.612 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   2: 2.215 ops/ms
                 ·gc.alloc.rate:      32.987 MB/sec
                 ·gc.alloc.rate.norm: 16400.023 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.217 ops/ms
                 ·gc.alloc.rate:               33.018 MB/sec
                 ·gc.alloc.rate.norm:          16401.217 B/op
                 ·gc.churn.G1_Eden_Space:      56.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 28001.127 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   4: 2.216 ops/ms
                 ·gc.alloc.rate:      33.009 MB/sec
                 ·gc.alloc.rate.norm: 16400.018 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.229 ops/ms
                 ·gc.alloc.rate:                   33.207 MB/sec
                 ·gc.alloc.rate.norm:              16401.214 B/op
                 ·gc.churn.G1_Eden_Space:          56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     27842.879 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.498 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  2.221 ±(99.9%) 0.029 ops/ms [Average]
  (min, avg, max) = (2.215, 2.221, 2.230), stdev = 0.008
  CI (99.9%): [2.192, 2.251] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  33.087 ±(99.9%) 0.438 MB/sec [Average]
  (min, avg, max) = (32.987, 33.087, 33.215), stdev = 0.114
  CI (99.9%): [32.650, 33.525] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  16400.737 ±(99.9%) 2.519 B/op [Average]
  (min, avg, max) = (16400.018, 16400.737, 16401.217), stdev = 0.654
  CI (99.9%): [16398.218, 16403.257] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  33.823 ±(99.9%) 118.893 MB/sec [Average]
  (min, avg, max) = (≈ 0, 33.823, 56.373), stdev = 30.876
  CI (99.9%): [≈ 0, 152.716] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  16736.129 ±(99.9%) 58830.398 B/op [Average]
  (min, avg, max) = (≈ 0, 16736.129, 28001.127), stdev = 15278.067
  CI (99.9%): [≈ 0, 75566.526] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.005 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.422 ±(99.9%) 2.693 B/op [Average]
  (min, avg, max) = (≈ 0, 0.422, 1.612), stdev = 0.699
  CI (99.9%): [≈ 0, 3.115] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  3.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 128, transferSize = 128)

# Run progress: 24.00% complete, ETA 01:20:02
# Fork: 1 of 1
# Warmup Iteration   1: 5809.430 ops/ms
# Warmup Iteration   2: 5820.908 ops/ms
# Warmup Iteration   3: 5875.623 ops/ms
Iteration   1: 5877.462 ops/ms
                 ·gc.alloc.rate:                   1750.848 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1747.589 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     327.403 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         21.000 ms

Iteration   2: 5879.941 ops/ms
                 ·gc.alloc.rate:                   1751.578 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1747.606 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     327.269 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         19.000 ms

Iteration   3: 5876.987 ops/ms
                 ·gc.alloc.rate:                   1750.687 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1747.595 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     327.433 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 5875.322 ops/ms
                 ·gc.alloc.rate:                   1750.216 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1747.616 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     327.525 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         21.000 ms

Iteration   5: 5881.501 ops/ms
                 ·gc.alloc.rate:                   1752.002 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1747.557 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     327.180 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         20.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  5878.243 ±(99.9%) 9.474 ops/ms [Average]
  (min, avg, max) = (5875.322, 5878.243, 5881.501), stdev = 2.460
  CI (99.9%): [5868.769, 5887.717] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1751.066 ±(99.9%) 2.758 MB/sec [Average]
  (min, avg, max) = (1750.216, 1751.066, 1752.002), stdev = 0.716
  CI (99.9%): [1748.308, 1753.824] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  328.013 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (328.012, 328.013, 328.013), stdev = 0.001
  CI (99.9%): [328.011, 328.014] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1747.592 ±(99.9%) 0.086 MB/sec [Average]
  (min, avg, max) = (1747.557, 1747.592, 1747.616), stdev = 0.022
  CI (99.9%): [1747.506, 1747.679] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  327.362 ±(99.9%) 0.528 B/op [Average]
  (min, avg, max) = (327.180, 327.362, 327.525), stdev = 0.137
  CI (99.9%): [326.834, 327.890] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [≈ 10⁻³, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  155.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (31.000, 31.000, 31.000), stdev = 0.001
  CI (99.9%): [155.000, 155.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  101.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (19.000, 20.200, 21.000), stdev = 0.837
  CI (99.9%): [101.000, 101.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 128, transferSize = 1024)

# Run progress: 25.33% complete, ETA 01:18:38
# Fork: 1 of 1
# Warmup Iteration   1: 6290.526 ops/ms
# Warmup Iteration   2: 6403.171 ops/ms
# Warmup Iteration   3: 6375.782 ops/ms
Iteration   1: 6371.255 ops/ms
                 ·gc.alloc.rate:                   1897.927 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1916.693 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     331.256 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         23.000 ms

Iteration   2: 6378.604 ops/ms
                 ·gc.alloc.rate:                   1900.149 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1916.752 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     330.879 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         22.000 ms

Iteration   3: 6378.221 ops/ms
                 ·gc.alloc.rate:                   1900.011 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1860.349 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     321.165 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         25.000 ms

Iteration   4: 6383.877 ops/ms
                 ·gc.alloc.rate:                   1901.692 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1916.710 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     330.603 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         20.000 ms

Iteration   5: 6366.231 ops/ms
                 ·gc.alloc.rate:                   1896.451 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1916.725 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     331.519 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         30.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  6375.638 ±(99.9%) 26.611 ops/ms [Average]
  (min, avg, max) = (6366.231, 6375.638, 6383.877), stdev = 6.911
  CI (99.9%): [6349.026, 6402.249] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1899.246 ±(99.9%) 7.922 MB/sec [Average]
  (min, avg, max) = (1896.451, 1899.246, 1901.692), stdev = 2.057
  CI (99.9%): [1891.324, 1907.168] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  328.013 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (328.012, 328.013, 328.013), stdev = 0.001
  CI (99.9%): [328.011, 328.014] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1905.446 ±(99.9%) 97.074 MB/sec [Average]
  (min, avg, max) = (1860.349, 1905.446, 1916.752), stdev = 25.210
  CI (99.9%): [1808.372, 2002.520] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  329.085 ±(99.9%) 17.100 B/op [Average]
  (min, avg, max) = (321.165, 329.085, 331.519), stdev = 4.441
  CI (99.9%): [311.984, 346.185] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.001, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  169.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (33.000, 33.800, 34.000), stdev = 0.447
  CI (99.9%): [169.000, 169.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  120.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (20.000, 24.000, 30.000), stdev = 3.808
  CI (99.9%): [120.000, 120.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 128, transferSize = 1048576)

# Run progress: 26.67% complete, ETA 01:17:13
# Fork: 1 of 1
# Warmup Iteration   1: 6222.838 ops/ms
# Warmup Iteration   2: 6265.936 ops/ms
# Warmup Iteration   3: 6273.470 ops/ms
Iteration   1: 6259.003 ops/ms
                 ·gc.alloc.rate:                   1864.487 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1860.318 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     327.280 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         18.000 ms

Iteration   2: 6270.763 ops/ms
                 ·gc.alloc.rate:                   1868.012 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1860.361 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     326.669 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         23.000 ms

Iteration   3: 6270.368 ops/ms
                 ·gc.alloc.rate:                   1867.871 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1860.328 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     326.688 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         22.000 ms

Iteration   4: 6264.591 ops/ms
                 ·gc.alloc.rate:                   1866.160 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1860.340 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     326.989 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         26.000 ms

Iteration   5: 6267.899 ops/ms
                 ·gc.alloc.rate:                   1867.140 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1860.333 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     326.816 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         19.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  6266.525 ±(99.9%) 18.760 ops/ms [Average]
  (min, avg, max) = (6259.003, 6266.525, 6270.763), stdev = 4.872
  CI (99.9%): [6247.764, 6285.285] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1866.734 ±(99.9%) 5.603 MB/sec [Average]
  (min, avg, max) = (1864.487, 1866.734, 1868.012), stdev = 1.455
  CI (99.9%): [1861.131, 1872.337] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  328.013 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (328.012, 328.013, 328.013), stdev = 0.001
  CI (99.9%): [328.011, 328.014] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1860.336 ±(99.9%) 0.062 MB/sec [Average]
  (min, avg, max) = (1860.318, 1860.336, 1860.361), stdev = 0.016
  CI (99.9%): [1860.274, 1860.398] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  326.889 ±(99.9%) 0.975 B/op [Average]
  (min, avg, max) = (326.669, 326.889, 327.280), stdev = 0.253
  CI (99.9%): [325.913, 327.864] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  165.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (33.000, 33.000, 33.000), stdev = 0.001
  CI (99.9%): [165.000, 165.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  108.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (18.000, 21.600, 26.000), stdev = 3.209
  CI (99.9%): [108.000, 108.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1024, transferSize = 128)

# Run progress: 28.00% complete, ETA 01:15:49
# Fork: 1 of 1
# Warmup Iteration   1: 1088.112 ops/ms
# Warmup Iteration   2: 1110.290 ops/ms
# Warmup Iteration   3: 1113.239 ops/ms
Iteration   1: 1109.847 ops/ms
                 ·gc.alloc.rate:                   2136.884 MB/sec
                 ·gc.alloc.rate.norm:              2120.082 B/op
                 ·gc.churn.G1_Eden_Space:          2085.829 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2069.428 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         31.000 ms

Iteration   2: 1113.555 ops/ms
                 ·gc.alloc.rate:                   2143.911 MB/sec
                 ·gc.alloc.rate.norm:              2120.084 B/op
                 ·gc.churn.G1_Eden_Space:          2198.481 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2174.047 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        39.000 counts
                 ·gc.time:                         24.000 ms

Iteration   3: 1112.976 ops/ms
                 ·gc.alloc.rate:                   2142.919 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          2142.218 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2119.386 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         23.000 ms

Iteration   4: 1112.624 ops/ms
                 ·gc.alloc.rate:                   2142.234 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          2142.210 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2120.056 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         31.000 ms

Iteration   5: 1113.593 ops/ms
                 ·gc.alloc.rate:                   2144.100 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          2142.208 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2118.209 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         21.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1112.519 ±(99.9%) 5.962 ops/ms [Average]
  (min, avg, max) = (1109.847, 1112.519, 1113.593), stdev = 1.548
  CI (99.9%): [1106.557, 1118.481] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  2142.010 ±(99.9%) 11.413 MB/sec [Average]
  (min, avg, max) = (2136.884, 2142.010, 2144.100), stdev = 2.964
  CI (99.9%): [2130.597, 2153.422] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2120.081 ±(99.9%) 0.007 B/op [Average]
  (min, avg, max) = (2120.080, 2120.081, 2120.084), stdev = 0.002
  CI (99.9%): [2120.074, 2120.088] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  2142.189 ±(99.9%) 153.366 MB/sec [Average]
  (min, avg, max) = (2085.829, 2142.189, 2198.481), stdev = 39.829
  CI (99.9%): [1988.824, 2295.555] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2120.226 ±(99.9%) 142.551 B/op [Average]
  (min, avg, max) = (2069.428, 2120.226, 2174.047), stdev = 37.020
  CI (99.9%): [1977.674, 2262.777] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.003 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  190.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (37.000, 38.000, 39.000), stdev = 0.707
  CI (99.9%): [190.000, 190.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  130.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (21.000, 26.000, 31.000), stdev = 4.690
  CI (99.9%): [130.000, 130.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1024, transferSize = 1024)

# Run progress: 29.33% complete, ETA 01:14:25
# Fork: 1 of 1
# Warmup Iteration   1: 1446.306 ops/ms
# Warmup Iteration   2: 1467.975 ops/ms
# Warmup Iteration   3: 1476.091 ops/ms
Iteration   1: 1474.325 ops/ms
                 ·gc.alloc.rate:                   2838.676 MB/sec
                 ·gc.alloc.rate.norm:              2120.083 B/op
                 ·gc.churn.G1_Eden_Space:          2875.100 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2147.286 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         30.000 ms

Iteration   2: 1475.882 ops/ms
                 ·gc.alloc.rate:                   2841.669 MB/sec
                 ·gc.alloc.rate.norm:              2120.079 B/op
                 ·gc.churn.G1_Eden_Space:          2818.748 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2102.979 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         29.000 ms

Iteration   3: 1474.004 ops/ms
                 ·gc.alloc.rate:                   2838.073 MB/sec
                 ·gc.alloc.rate.norm:              2120.081 B/op
                 ·gc.churn.G1_Eden_Space:          2875.145 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2147.775 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         27.000 ms

Iteration   4: 1470.198 ops/ms
                 ·gc.alloc.rate:                   2830.708 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          2818.715 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2111.097 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         32.000 ms

Iteration   5: 1475.118 ops/ms
                 ·gc.alloc.rate:                   2840.184 MB/sec
                 ·gc.alloc.rate.norm:              2120.078 B/op
                 ·gc.churn.G1_Eden_Space:          2818.720 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2104.056 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         29.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1473.905 ±(99.9%) 8.460 ops/ms [Average]
  (min, avg, max) = (1470.198, 1473.905, 1475.882), stdev = 2.197
  CI (99.9%): [1465.445, 1482.366] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  2837.862 ±(99.9%) 16.311 MB/sec [Average]
  (min, avg, max) = (2830.708, 2837.862, 2841.669), stdev = 4.236
  CI (99.9%): [2821.551, 2854.173] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2120.080 ±(99.9%) 0.007 B/op [Average]
  (min, avg, max) = (2120.078, 2120.080, 2120.083), stdev = 0.002
  CI (99.9%): [2120.073, 2120.087] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  2841.285 ±(99.9%) 118.942 MB/sec [Average]
  (min, avg, max) = (2818.715, 2841.285, 2875.145), stdev = 30.889
  CI (99.9%): [2722.344, 2960.227] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2122.639 ±(99.9%) 88.321 B/op [Average]
  (min, avg, max) = (2102.979, 2122.639, 2147.775), stdev = 22.937
  CI (99.9%): [2034.318, 2210.959] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.004 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.003 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  252.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (50.000, 50.400, 51.000), stdev = 0.548
  CI (99.9%): [252.000, 252.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  147.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (27.000, 29.400, 32.000), stdev = 1.817
  CI (99.9%): [147.000, 147.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 30.67% complete, ETA 01:13:00
# Fork: 1 of 1
# Warmup Iteration   1: 1408.569 ops/ms
# Warmup Iteration   2: 1433.407 ops/ms
# Warmup Iteration   3: 1434.311 ops/ms
Iteration   1: 1435.856 ops/ms
                 ·gc.alloc.rate:                   2764.594 MB/sec
                 ·gc.alloc.rate.norm:              2120.083 B/op
                 ·gc.churn.G1_Eden_Space:          2818.706 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2161.581 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         31.000 ms

Iteration   2: 1437.423 ops/ms
                 ·gc.alloc.rate:                   2767.601 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          2762.341 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2116.051 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         27.000 ms

Iteration   3: 1436.650 ops/ms
                 ·gc.alloc.rate:                   2766.106 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          2762.316 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2117.175 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         28.000 ms

Iteration   4: 1432.660 ops/ms
                 ·gc.alloc.rate:                   2758.377 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          2762.271 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2123.073 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         28.000 ms

Iteration   5: 1432.602 ops/ms
                 ·gc.alloc.rate:                   2758.319 MB/sec
                 ·gc.alloc.rate.norm:              2120.079 B/op
                 ·gc.churn.G1_Eden_Space:          2762.345 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2123.174 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         28.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1435.038 ±(99.9%) 8.727 ops/ms [Average]
  (min, avg, max) = (1432.602, 1435.038, 1437.423), stdev = 2.266
  CI (99.9%): [1426.311, 1443.765] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  2762.999 ±(99.9%) 16.855 MB/sec [Average]
  (min, avg, max) = (2758.319, 2762.999, 2767.601), stdev = 4.377
  CI (99.9%): [2746.144, 2779.855] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2120.080 ±(99.9%) 0.007 B/op [Average]
  (min, avg, max) = (2120.079, 2120.080, 2120.083), stdev = 0.002
  CI (99.9%): [2120.074, 2120.087] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  2773.596 ±(99.9%) 97.103 MB/sec [Average]
  (min, avg, max) = (2762.271, 2773.596, 2818.706), stdev = 25.217
  CI (99.9%): [2676.493, 2870.699] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2128.211 ±(99.9%) 72.933 B/op [Average]
  (min, avg, max) = (2116.051, 2128.211, 2161.581), stdev = 18.940
  CI (99.9%): [2055.278, 2201.144] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.004 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.002 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  246.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (49.000, 49.200, 50.000), stdev = 0.447
  CI (99.9%): [246.000, 246.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  142.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (27.000, 28.400, 31.000), stdev = 1.517
  CI (99.9%): [142.000, 142.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1048576, transferSize = 128)

# Run progress: 32.00% complete, ETA 01:11:36
# Fork: 1 of 1
# Warmup Iteration   1: 1.389 ops/ms
# Warmup Iteration   2: 1.391 ops/ms
# Warmup Iteration   3: 1.393 ops/ms
Iteration   1: 1.398 ops/ms
                 ·gc.alloc.rate:      29.913 MB/sec
                 ·gc.alloc.rate.norm: 23568.031 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.397 ops/ms
                 ·gc.alloc.rate:                   29.899 MB/sec
                 ·gc.alloc.rate.norm:              23569.935 B/op
                 ·gc.churn.G1_Eden_Space:          56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     44438.184 B/op
                 ·gc.churn.G1_Survivor_Space:      0.012 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 9.690 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   3: 1.397 ops/ms
                 ·gc.alloc.rate:      29.894 MB/sec
                 ·gc.alloc.rate.norm: 23568.029 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.397 ops/ms
                 ·gc.alloc.rate:               29.898 MB/sec
                 ·gc.alloc.rate.norm:          23569.934 B/op
                 ·gc.churn.G1_Eden_Space:      56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 44441.365 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   5: 1.399 ops/ms
                 ·gc.alloc.rate:      29.942 MB/sec
                 ·gc.alloc.rate.norm: 23568.039 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1.397 ±(99.9%) 0.004 ops/ms [Average]
  (min, avg, max) = (1.397, 1.397, 1.399), stdev = 0.001
  CI (99.9%): [1.394, 1.401] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  29.909 ±(99.9%) 0.076 MB/sec [Average]
  (min, avg, max) = (29.894, 29.909, 29.942), stdev = 0.020
  CI (99.9%): [29.833, 29.985] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23568.794 ±(99.9%) 4.010 B/op [Average]
  (min, avg, max) = (23568.029, 23568.794, 23569.935), stdev = 1.041
  CI (99.9%): [23564.784, 23572.803] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  22.549 ±(99.9%) 118.893 MB/sec [Average]
  (min, avg, max) = (≈ 0, 22.549, 56.373), stdev = 30.876
  CI (99.9%): [≈ 0, 141.442] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  17775.910 ±(99.9%) 93727.242 B/op [Average]
  (min, avg, max) = (≈ 0, 17775.910, 44441.365), stdev = 24340.667
  CI (99.9%): [≈ 0, 111503.152] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.021 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.002, 0.012), stdev = 0.005
  CI (99.9%): [≈ 0, 0.024] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  1.938 ±(99.9%) 16.687 B/op [Average]
  (min, avg, max) = (≈ 0, 1.938, 9.690), stdev = 4.334
  CI (99.9%): [≈ 0, 18.625] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  4.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 1.095
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 33.33% complete, ETA 01:10:12
# Fork: 1 of 1
# Warmup Iteration   1: 1.963 ops/ms
# Warmup Iteration   2: 1.969 ops/ms
# Warmup Iteration   3: 1.990 ops/ms
Iteration   1: 1.984 ops/ms
                 ·gc.alloc.rate:               42.476 MB/sec
                 ·gc.alloc.rate.norm:          23569.359 B/op
                 ·gc.churn.G1_Eden_Space:      56.372 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 31280.272 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 1.987 ops/ms
                 ·gc.alloc.rate:               42.532 MB/sec
                 ·gc.alloc.rate.norm:          23569.359 B/op
                 ·gc.churn.G1_Eden_Space:      56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 31239.343 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   3: 1.988 ops/ms
                 ·gc.alloc.rate:               42.547 MB/sec
                 ·gc.alloc.rate.norm:          23569.365 B/op
                 ·gc.churn.G1_Eden_Space:      56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 31226.772 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   4: 1.981 ops/ms
                 ·gc.alloc.rate:      42.395 MB/sec
                 ·gc.alloc.rate.norm: 23568.022 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.983 ops/ms
                 ·gc.alloc.rate:               42.446 MB/sec
                 ·gc.alloc.rate.norm:          23569.362 B/op
                 ·gc.churn.G1_Eden_Space:      56.372 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 31302.354 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1.985 ±(99.9%) 0.011 ops/ms [Average]
  (min, avg, max) = (1.981, 1.985, 1.988), stdev = 0.003
  CI (99.9%): [1.974, 1.996] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  42.479 ±(99.9%) 0.241 MB/sec [Average]
  (min, avg, max) = (42.395, 42.479, 42.547), stdev = 0.063
  CI (99.9%): [42.238, 42.721] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23569.094 ±(99.9%) 2.306 B/op [Average]
  (min, avg, max) = (23568.022, 23569.094, 23569.365), stdev = 0.599
  CI (99.9%): [23566.787, 23571.400] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  45.098 ±(99.9%) 97.076 MB/sec [Average]
  (min, avg, max) = (≈ 0, 45.098, 56.373), stdev = 25.210
  CI (99.9%): [≈ 0, 142.174] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  25009.748 ±(99.9%) 53835.497 B/op [Average]
  (min, avg, max) = (≈ 0, 25009.748, 31302.354), stdev = 13980.908
  CI (99.9%): [≈ 0, 78845.245] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  4.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  7.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
  CI (99.9%): [7.000, 7.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 34.67% complete, ETA 01:08:48
# Fork: 1 of 1
# Warmup Iteration   1: 1.889 ops/ms
# Warmup Iteration   2: 1.886 ops/ms
# Warmup Iteration   3: 1.907 ops/ms
Iteration   1: 1.912 ops/ms
                 ·gc.alloc.rate:                   40.918 MB/sec
                 ·gc.alloc.rate.norm:              23569.416 B/op
                 ·gc.churn.G1_Eden_Space:          56.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     32469.766 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.192 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   2: 1.912 ops/ms
                 ·gc.alloc.rate:               40.924 MB/sec
                 ·gc.alloc.rate.norm:          23569.413 B/op
                 ·gc.churn.G1_Eden_Space:      56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 32466.370 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   3: 1.913 ops/ms
                 ·gc.alloc.rate:                   40.945 MB/sec
                 ·gc.alloc.rate.norm:              23569.420 B/op
                 ·gc.churn.G1_Eden_Space:          56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     32449.398 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.977 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         1.000 ms

Iteration   4: 1.906 ops/ms
                 ·gc.alloc.rate:      40.801 MB/sec
                 ·gc.alloc.rate.norm: 23568.023 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.904 ops/ms
                 ·gc.alloc.rate:                   40.751 MB/sec
                 ·gc.alloc.rate.norm:              23569.421 B/op
                 ·gc.churn.G1_Eden_Space:          56.369 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     32602.783 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1.902 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1.909 ±(99.9%) 0.015 ops/ms [Average]
  (min, avg, max) = (1.904, 1.909, 1.913), stdev = 0.004
  CI (99.9%): [1.894, 1.925] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  40.868 ±(99.9%) 0.332 MB/sec [Average]
  (min, avg, max) = (40.751, 40.868, 40.945), stdev = 0.086
  CI (99.9%): [40.536, 41.200] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23569.139 ±(99.9%) 2.401 B/op [Average]
  (min, avg, max) = (23568.023, 23569.139, 23569.421), stdev = 0.624
  CI (99.9%): [23566.737, 23571.540] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  45.096 ±(99.9%) 97.073 MB/sec [Average]
  (min, avg, max) = (≈ 0, 45.096, 56.371), stdev = 25.210
  CI (99.9%): [≈ 0, 142.169] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  25997.664 ±(99.9%) 55962.432 B/op [Average]
  (min, avg, max) = (≈ 0, 25997.664, 32602.783), stdev = 14533.266
  CI (99.9%): [≈ 0, 81960.096] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.005 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.614 ±(99.9%) 3.177 B/op [Average]
  (min, avg, max) = (≈ 0, 0.614, 1.902), stdev = 0.825
  CI (99.9%): [≈ 0, 3.791] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  4.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  7.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
  CI (99.9%): [7.000, 7.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 128, transferSize = 128)

# Run progress: 36.00% complete, ETA 01:07:23
# Fork: 1 of 1
# Warmup Iteration   1: 9384.494 ops/ms
# Warmup Iteration   2: 9007.171 ops/ms
# Warmup Iteration   3: 8992.263 ops/ms
Iteration   1: 9005.353 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 9001.658 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 8998.775 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 9001.807 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 9008.984 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  9003.315 ±(99.9%) 15.152 ops/ms [Average]
  (min, avg, max) = (8998.775, 9003.315, 9008.984), stdev = 3.935
  CI (99.9%): [8988.164, 9018.467] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 128, transferSize = 1024)

# Run progress: 37.33% complete, ETA 01:05:59
# Fork: 1 of 1
# Warmup Iteration   1: 10933.200 ops/ms
# Warmup Iteration   2: 11257.091 ops/ms
# Warmup Iteration   3: 11660.361 ops/ms
Iteration   1: 11622.279 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 11632.751 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 11638.405 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 11640.100 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 11638.547 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  11634.417 ±(99.9%) 28.256 ops/ms [Average]
  (min, avg, max) = (11622.279, 11634.417, 11640.100), stdev = 7.338
  CI (99.9%): [11606.161, 11662.672] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 128, transferSize = 1048576)

# Run progress: 38.67% complete, ETA 01:04:35
# Fork: 1 of 1
# Warmup Iteration   1: 11287.518 ops/ms
# Warmup Iteration   2: 11130.299 ops/ms
# Warmup Iteration   3: 11001.081 ops/ms
Iteration   1: 10986.655 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 10997.633 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 10990.429 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 11028.240 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 10995.779 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  10999.747 ±(99.9%) 63.573 ops/ms [Average]
  (min, avg, max) = (10986.655, 10999.747, 11028.240), stdev = 16.510
  CI (99.9%): [10936.175, 11063.320] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1024, transferSize = 128)

# Run progress: 40.00% complete, ETA 01:03:11
# Fork: 1 of 1
# Warmup Iteration   1: 990.960 ops/ms
# Warmup Iteration   2: 984.887 ops/ms
# Warmup Iteration   3: 999.437 ops/ms
Iteration   1: 994.734 ops/ms
                 ·gc.alloc.rate:               50.592 MB/sec
                 ·gc.alloc.rate.norm:          56.003 B/op
                 ·gc.churn.G1_Eden_Space:      56.374 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 62.403 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 987.933 ops/ms
                 ·gc.alloc.rate:                   50.245 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     62.833 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.009 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   3: 982.666 ops/ms
                 ·gc.alloc.rate:               49.977 MB/sec
                 ·gc.alloc.rate.norm:          56.003 B/op
                 ·gc.churn.G1_Eden_Space:      56.374 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 63.170 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   4: 952.670 ops/ms
                 ·gc.alloc.rate:                   48.453 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          56.375 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     65.159 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   5: 998.756 ops/ms
                 ·gc.alloc.rate:               50.796 MB/sec
                 ·gc.alloc.rate.norm:          56.003 B/op
                 ·gc.churn.G1_Eden_Space:      56.374 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 62.152 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  983.352 ±(99.9%) 70.206 ops/ms [Average]
  (min, avg, max) = (952.670, 983.352, 998.756), stdev = 18.232
  CI (99.9%): [913.145, 1053.558] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  50.013 ±(99.9%) 3.569 MB/sec [Average]
  (min, avg, max) = (48.453, 50.013, 50.796), stdev = 0.927
  CI (99.9%): [46.443, 53.582] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.003 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (56.003, 56.003, 56.003), stdev = 0.001
  CI (99.9%): [56.003, 56.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  56.374 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (56.373, 56.374, 56.375), stdev = 0.001
  CI (99.9%): [56.371, 56.376] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  63.144 ±(99.9%) 4.592 B/op [Average]
  (min, avg, max) = (62.152, 63.144, 65.159), stdev = 1.193
  CI (99.9%): [58.551, 67.736] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.013 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.002, 0.008), stdev = 0.003
  CI (99.9%): [≈ 0, 0.015] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.002 ±(99.9%) 0.014 B/op [Average]
  (min, avg, max) = (≈ 0, 0.002, 0.009), stdev = 0.004
  CI (99.9%): [≈ 0, 0.017] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  5.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  8.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
  CI (99.9%): [8.000, 8.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1024, transferSize = 1024)

# Run progress: 41.33% complete, ETA 01:01:46
# Fork: 1 of 1
# Warmup Iteration   1: 1755.591 ops/ms
# Warmup Iteration   2: 1810.145 ops/ms
# Warmup Iteration   3: 1824.444 ops/ms
Iteration   1: 1832.810 ops/ms
                 ·gc.alloc.rate:               93.217 MB/sec
                 ·gc.alloc.rate.norm:          56.003 B/op
                 ·gc.churn.G1_Eden_Space:      112.749 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 67.737 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     3.000 ms

Iteration   2: 1829.589 ops/ms
                 ·gc.alloc.rate:                   93.054 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          112.750 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     67.857 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         4.000 ms

Iteration   3: 1825.042 ops/ms
                 ·gc.alloc.rate:               92.819 MB/sec
                 ·gc.alloc.rate.norm:          56.001 B/op
                 ·gc.churn.G1_Eden_Space:      56.374 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 34.013 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   4: 1641.879 ops/ms
                 ·gc.alloc.rate:                   83.505 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          112.746 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     75.614 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   5: 1693.341 ops/ms
                 ·gc.alloc.rate:               86.120 MB/sec
                 ·gc.alloc.rate.norm:          56.002 B/op
                 ·gc.churn.G1_Eden_Space:      56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 36.658 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1764.532 ±(99.9%) 347.986 ops/ms [Average]
  (min, avg, max) = (1641.879, 1764.532, 1832.810), stdev = 90.371
  CI (99.9%): [1416.546, 2112.518] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  89.743 ±(99.9%) 17.702 MB/sec [Average]
  (min, avg, max) = (83.505, 89.743, 93.217), stdev = 4.597
  CI (99.9%): [72.041, 107.445] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.002 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (56.001, 56.002, 56.003), stdev = 0.001
  CI (99.9%): [55.999, 56.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  90.198 ±(99.9%) 118.900 MB/sec [Average]
  (min, avg, max) = (56.373, 90.198, 112.750), stdev = 30.878
  CI (99.9%): [≈ 0, 209.098] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  56.376 ±(99.9%) 75.061 B/op [Average]
  (min, avg, max) = (34.013, 56.376, 75.614), stdev = 19.493
  CI (99.9%): [≈ 0, 131.436] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.011 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.002, 0.005), stdev = 0.003
  CI (99.9%): [≈ 0, 0.013] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.007 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
  CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  8.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
  CI (99.9%): [8.000, 8.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  13.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1.000, 2.600, 4.000), stdev = 1.140
  CI (99.9%): [13.000, 13.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 42.67% complete, ETA 01:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 2220.650 ops/ms
# Warmup Iteration   2: 1976.132 ops/ms
# Warmup Iteration   3: 1973.801 ops/ms
Iteration   1: 1973.759 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1973.016 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1973.544 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1974.402 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1975.104 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1973.965 ±(99.9%) 3.109 ops/ms [Average]
  (min, avg, max) = (1973.016, 1973.965, 1975.104), stdev = 0.807
  CI (99.9%): [1970.856, 1977.074] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1048576, transferSize = 128)

# Run progress: 44.00% complete, ETA 00:58:58
# Fork: 1 of 1
# Warmup Iteration   1: 1.076 ops/ms
# Warmup Iteration   2: 1.078 ops/ms
# Warmup Iteration   3: 1.078 ops/ms
Iteration   1: 1.078 ops/ms
                 ·gc.alloc.rate:      0.055 MB/sec
                 ·gc.alloc.rate.norm: 56.041 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.079 ops/ms
                 ·gc.alloc.rate:      0.055 MB/sec
                 ·gc.alloc.rate.norm: 56.041 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.078 ops/ms
                 ·gc.alloc.rate:      0.055 MB/sec
                 ·gc.alloc.rate.norm: 56.041 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.079 ops/ms
                 ·gc.alloc.rate:      0.055 MB/sec
                 ·gc.alloc.rate.norm: 56.041 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.078 ops/ms
                 ·gc.alloc.rate:      0.055 MB/sec
                 ·gc.alloc.rate.norm: 56.041 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1.079 ±(99.9%) 0.002 ops/ms [Average]
  (min, avg, max) = (1.078, 1.079, 1.079), stdev = 0.001
  CI (99.9%): [1.076, 1.081] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.055 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.055, 0.055, 0.055), stdev = 0.001
  CI (99.9%): [0.055, 0.055] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.041 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (56.041, 56.041, 56.041), stdev = 0.001
  CI (99.9%): [56.041, 56.041] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 45.33% complete, ETA 00:57:34
# Fork: 1 of 1
# Warmup Iteration   1: 1.145 ops/ms
# Warmup Iteration   2: 1.148 ops/ms
# Warmup Iteration   3: 1.145 ops/ms
Iteration   1: 1.148 ops/ms
                 ·gc.alloc.rate:      0.058 MB/sec
                 ·gc.alloc.rate.norm: 56.038 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.148 ops/ms
                 ·gc.alloc.rate:      0.058 MB/sec
                 ·gc.alloc.rate.norm: 56.038 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.147 ops/ms
                 ·gc.alloc.rate:      0.058 MB/sec
                 ·gc.alloc.rate.norm: 56.036 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.148 ops/ms
                 ·gc.alloc.rate:      0.058 MB/sec
                 ·gc.alloc.rate.norm: 56.038 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.147 ops/ms
                 ·gc.alloc.rate:      0.058 MB/sec
                 ·gc.alloc.rate.norm: 56.038 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1.148 ±(99.9%) 0.002 ops/ms [Average]
  (min, avg, max) = (1.147, 1.148, 1.148), stdev = 0.001
  CI (99.9%): [1.146, 1.149] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.058 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.058, 0.058, 0.058), stdev = 0.001
  CI (99.9%): [0.058, 0.058] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.038 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (56.036, 56.038, 56.038), stdev = 0.001
  CI (99.9%): [56.033, 56.043] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 46.67% complete, ETA 00:56:09
# Fork: 1 of 1
# Warmup Iteration   1: 1.552 ops/ms
# Warmup Iteration   2: 1.558 ops/ms
# Warmup Iteration   3: 1.557 ops/ms
Iteration   1: 1.555 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.026 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.556 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.028 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.556 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.026 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.556 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.033 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.556 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.028 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1.556 ±(99.9%) 0.002 ops/ms [Average]
  (min, avg, max) = (1.555, 1.556, 1.556), stdev = 0.001
  CI (99.9%): [1.553, 1.558] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.079 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.079, 0.079, 0.079), stdev = 0.001
  CI (99.9%): [0.079, 0.079] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.028 ±(99.9%) 0.010 B/op [Average]
  (min, avg, max) = (56.026, 56.028, 56.033), stdev = 0.003
  CI (99.9%): [56.018, 56.039] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 128, transferSize = 128)

# Run progress: 48.00% complete, ETA 00:54:45
# Fork: 1 of 1
# Warmup Iteration   1: 9489.449 ops/ms
# Warmup Iteration   2: 9957.067 ops/ms
# Warmup Iteration   3: 10259.505 ops/ms
Iteration   1: 10370.411 ops/ms
                 ·gc.alloc.rate:                   527.433 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.362 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     53.871 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         6.000 ms

Iteration   2: 10370.789 ops/ms
                 ·gc.alloc.rate:                   527.453 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     53.870 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         5.000 ms

Iteration   3: 10364.698 ops/ms
                 ·gc.alloc.rate:                   527.144 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          563.739 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     59.890 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         8.000 ms

Iteration   4: 10367.201 ops/ms
                 ·gc.alloc.rate:                   527.259 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.354 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     53.888 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         7.000 ms

Iteration   5: 10360.397 ops/ms
                 ·gc.alloc.rate:                   526.922 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.362 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     53.923 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         8.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  10366.699 ±(99.9%) 16.616 ops/ms [Average]
  (min, avg, max) = (10360.397, 10366.699, 10370.789), stdev = 4.315
  CI (99.9%): [10350.084, 10383.315] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  527.242 ±(99.9%) 0.847 MB/sec [Average]
  (min, avg, max) = (526.922, 527.242, 527.453), stdev = 0.220
  CI (99.9%): [526.395, 528.089] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.002 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (56.002, 56.002, 56.003), stdev = 0.001
  CI (99.9%): [56.002, 56.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  518.638 ±(99.9%) 97.085 MB/sec [Average]
  (min, avg, max) = (507.354, 518.638, 563.739), stdev = 25.213
  CI (99.9%): [421.553, 615.723] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  55.089 ±(99.9%) 10.336 B/op [Average]
  (min, avg, max) = (53.870, 55.089, 59.890), stdev = 2.684
  CI (99.9%): [44.752, 65.425] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.002] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  46.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (9.000, 9.200, 10.000), stdev = 0.447
  CI (99.9%): [46.000, 46.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  34.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (5.000, 6.800, 8.000), stdev = 1.304
  CI (99.9%): [34.000, 34.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 128, transferSize = 1024)

# Run progress: 49.33% complete, ETA 00:53:21
# Fork: 1 of 1
# Warmup Iteration   1: 12833.945 ops/ms
# Warmup Iteration   2: 13125.643 ops/ms
# Warmup Iteration   3: 13237.677 ops/ms
Iteration   1: 13244.277 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 13229.601 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 13225.640 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 13231.554 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 13238.805 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  13233.975 ±(99.9%) 28.811 ops/ms [Average]
  (min, avg, max) = (13225.640, 13233.975, 13244.277), stdev = 7.482
  CI (99.9%): [13205.165, 13262.786] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 128, transferSize = 1048576)

# Run progress: 50.67% complete, ETA 00:51:57
# Fork: 1 of 1
# Warmup Iteration   1: 12471.884 ops/ms
# Warmup Iteration   2: 12844.953 ops/ms
# Warmup Iteration   3: 13455.470 ops/ms
Iteration   1: 13461.340 ops/ms
                 ·gc.alloc.rate:                   684.629 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          732.847 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     59.947 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         10.000 ms

Iteration   2: 13480.606 ops/ms
                 ·gc.alloc.rate:                   685.618 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          676.492 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     55.257 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         10.000 ms

Iteration   3: 13479.769 ops/ms
                 ·gc.alloc.rate:                   685.558 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          676.471 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     55.260 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         8.000 ms

Iteration   4: 13483.032 ops/ms
                 ·gc.alloc.rate:                   685.717 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          676.474 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     55.247 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         9.000 ms

Iteration   5: 13485.770 ops/ms
                 ·gc.alloc.rate:                   685.876 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          676.491 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     55.236 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         8.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  13478.103 ±(99.9%) 37.189 ops/ms [Average]
  (min, avg, max) = (13461.340, 13478.103, 13485.770), stdev = 9.658
  CI (99.9%): [13440.914, 13515.293] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  685.480 ±(99.9%) 1.889 MB/sec [Average]
  (min, avg, max) = (684.629, 685.480, 685.876), stdev = 0.491
  CI (99.9%): [683.591, 687.369] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.002 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (56.002, 56.002, 56.003), stdev = 0.001
  CI (99.9%): [56.002, 56.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  687.755 ±(99.9%) 97.064 MB/sec [Average]
  (min, avg, max) = (676.471, 687.755, 732.847), stdev = 25.207
  CI (99.9%): [590.691, 784.819] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  56.189 ±(99.9%) 8.088 B/op [Average]
  (min, avg, max) = (55.236, 56.189, 59.947), stdev = 2.100
  CI (99.9%): [48.101, 64.278] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (0.001, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  61.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (12.000, 12.200, 13.000), stdev = 0.447
  CI (99.9%): [61.000, 61.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  45.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (8.000, 9.000, 10.000), stdev = 1.000
  CI (99.9%): [45.000, 45.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1024, transferSize = 128)

# Run progress: 52.00% complete, ETA 00:50:32
# Fork: 1 of 1
# Warmup Iteration   1: 1018.540 ops/ms
# Warmup Iteration   2: 1020.262 ops/ms
# Warmup Iteration   3: 1021.638 ops/ms
Iteration   1: 1021.433 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1020.276 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1021.131 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1020.764 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1020.089 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1020.739 ±(99.9%) 2.172 ops/ms [Average]
  (min, avg, max) = (1020.089, 1020.739, 1021.433), stdev = 0.564
  CI (99.9%): [1018.567, 1022.910] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1024, transferSize = 1024)

# Run progress: 53.33% complete, ETA 00:49:08
# Fork: 1 of 1
# Warmup Iteration   1: 2444.681 ops/ms
# Warmup Iteration   2: 2463.220 ops/ms
# Warmup Iteration   3: 2486.136 ops/ms
Iteration   1: 2484.745 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2487.182 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2487.535 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2486.917 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2487.307 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  2486.737 ±(99.9%) 4.374 ops/ms [Average]
  (min, avg, max) = (2484.745, 2486.737, 2487.535), stdev = 1.136
  CI (99.9%): [2482.363, 2491.111] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 54.67% complete, ETA 00:47:44
# Fork: 1 of 1
# Warmup Iteration   1: 2578.741 ops/ms
# Warmup Iteration   2: 2603.978 ops/ms
# Warmup Iteration   3: 2611.239 ops/ms
Iteration   1: 2612.981 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2612.558 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2613.005 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2611.576 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2612.385 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  2612.501 ±(99.9%) 2.243 ops/ms [Average]
  (min, avg, max) = (2611.576, 2612.501, 2613.005), stdev = 0.583
  CI (99.9%): [2610.258, 2614.744] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1048576, transferSize = 128)

# Run progress: 56.00% complete, ETA 00:46:20
# Fork: 1 of 1
# Warmup Iteration   1: 1.189 ops/ms
# Warmup Iteration   2: 1.193 ops/ms
# Warmup Iteration   3: 1.193 ops/ms
Iteration   1: 1.193 ops/ms
                 ·gc.alloc.rate:      0.061 MB/sec
                 ·gc.alloc.rate.norm: 56.034 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.193 ops/ms
                 ·gc.alloc.rate:      0.061 MB/sec
                 ·gc.alloc.rate.norm: 56.037 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.194 ops/ms
                 ·gc.alloc.rate:      0.061 MB/sec
                 ·gc.alloc.rate.norm: 56.034 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.194 ops/ms
                 ·gc.alloc.rate:      0.061 MB/sec
                 ·gc.alloc.rate.norm: 56.040 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.194 ops/ms
                 ·gc.alloc.rate:      0.061 MB/sec
                 ·gc.alloc.rate.norm: 56.037 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1.194 ±(99.9%) 0.003 ops/ms [Average]
  (min, avg, max) = (1.193, 1.194, 1.194), stdev = 0.001
  CI (99.9%): [1.191, 1.196] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.061 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.061, 0.061, 0.061), stdev = 0.001
  CI (99.9%): [0.061, 0.061] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.036 ±(99.9%) 0.009 B/op [Average]
  (min, avg, max) = (56.034, 56.036, 56.040), stdev = 0.002
  CI (99.9%): [56.028, 56.045] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 57.33% complete, ETA 00:44:55
# Fork: 1 of 1
# Warmup Iteration   1: 1.484 ops/ms
# Warmup Iteration   2: 1.497 ops/ms
# Warmup Iteration   3: 1.495 ops/ms
Iteration   1: 1.496 ops/ms
                 ·gc.alloc.rate:      0.076 MB/sec
                 ·gc.alloc.rate.norm: 56.027 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.496 ops/ms
                 ·gc.alloc.rate:      0.076 MB/sec
                 ·gc.alloc.rate.norm: 56.027 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.495 ops/ms
                 ·gc.alloc.rate:      0.076 MB/sec
                 ·gc.alloc.rate.norm: 56.027 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.495 ops/ms
                 ·gc.alloc.rate:      0.076 MB/sec
                 ·gc.alloc.rate.norm: 56.034 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.495 ops/ms
                 ·gc.alloc.rate:      0.076 MB/sec
                 ·gc.alloc.rate.norm: 56.029 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1.496 ±(99.9%) 0.002 ops/ms [Average]
  (min, avg, max) = (1.495, 1.496, 1.496), stdev = 0.001
  CI (99.9%): [1.494, 1.498] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.076 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.076, 0.076, 0.076), stdev = 0.001
  CI (99.9%): [0.076, 0.076] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.029 ±(99.9%) 0.012 B/op [Average]
  (min, avg, max) = (56.027, 56.029, 56.034), stdev = 0.003
  CI (99.9%): [56.017, 56.041] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 58.67% complete, ETA 00:43:31
# Fork: 1 of 1
# Warmup Iteration   1: 1.544 ops/ms
# Warmup Iteration   2: 1.550 ops/ms
# Warmup Iteration   3: 1.549 ops/ms
Iteration   1: 1.550 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.028 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.551 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.030 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.549 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.026 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.550 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.035 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.550 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.028 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1.550 ±(99.9%) 0.002 ops/ms [Average]
  (min, avg, max) = (1.549, 1.550, 1.551), stdev = 0.001
  CI (99.9%): [1.547, 1.552] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.079 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.079, 0.079, 0.079), stdev = 0.001
  CI (99.9%): [0.079, 0.079] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.030 ±(99.9%) 0.013 B/op [Average]
  (min, avg, max) = (56.026, 56.030, 56.035), stdev = 0.003
  CI (99.9%): [56.017, 56.043] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 128, transferSize = 128)

# Run progress: 60.00% complete, ETA 00:42:07
# Fork: 1 of 1
# Warmup Iteration   1: 9339.304 ops/ms
# Warmup Iteration   2: 9578.567 ops/ms
# Warmup Iteration   3: 9666.996 ops/ms
Iteration   1: 9654.220 ops/ms
                 ·gc.alloc.rate:                   491.008 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.361 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     57.868 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         7.000 ms

Iteration   2: 9662.754 ops/ms
                 ·gc.alloc.rate:                   491.445 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     57.817 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         7.000 ms

Iteration   3: 9664.556 ops/ms
                 ·gc.alloc.rate:                   491.521 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          450.980 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     51.383 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         6.000 ms

Iteration   4: 9663.896 ops/ms
                 ·gc.alloc.rate:                   491.490 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.355 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     57.810 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         8.000 ms

Iteration   5: 9658.488 ops/ms
                 ·gc.alloc.rate:                   491.220 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.358 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     57.842 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         10.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  9660.783 ±(99.9%) 16.801 ops/ms [Average]
  (min, avg, max) = (9654.220, 9660.783, 9664.556), stdev = 4.363
  CI (99.9%): [9643.982, 9677.583] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  491.337 ±(99.9%) 0.842 MB/sec [Average]
  (min, avg, max) = (491.008, 491.337, 491.521), stdev = 0.219
  CI (99.9%): [490.495, 492.179] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.002 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (56.002, 56.002, 56.002), stdev = 0.001
  CI (99.9%): [56.002, 56.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  496.085 ±(99.9%) 97.091 MB/sec [Average]
  (min, avg, max) = (450.980, 496.085, 507.370), stdev = 25.214
  CI (99.9%): [398.994, 593.176] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  56.544 ±(99.9%) 11.110 B/op [Average]
  (min, avg, max) = (51.383, 56.544, 57.868), stdev = 2.885
  CI (99.9%): [45.434, 67.654] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  44.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (8.000, 8.800, 9.000), stdev = 0.447
  CI (99.9%): [44.000, 44.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  38.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (6.000, 7.600, 10.000), stdev = 1.517
  CI (99.9%): [38.000, 38.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 128, transferSize = 1024)

# Run progress: 61.33% complete, ETA 00:40:43
# Fork: 1 of 1
# Warmup Iteration   1: 10719.988 ops/ms
# Warmup Iteration   2: 11192.153 ops/ms
# Warmup Iteration   3: 11308.000 ops/ms
Iteration   1: 11309.930 ops/ms
                 ·gc.alloc.rate:                   575.209 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          620.099 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     60.373 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         7.000 ms

Iteration   2: 11308.801 ops/ms
                 ·gc.alloc.rate:                   575.158 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          563.740 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     54.891 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         7.000 ms

Iteration   3: 11305.917 ops/ms
                 ·gc.alloc.rate:                   575.009 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          563.735 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     54.904 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         9.000 ms

Iteration   4: 11301.839 ops/ms
                 ·gc.alloc.rate:                   574.792 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          563.727 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     54.924 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         6.000 ms

Iteration   5: 11317.610 ops/ms
                 ·gc.alloc.rate:                   575.594 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          563.729 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     54.848 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         5.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  11308.819 ±(99.9%) 22.424 ops/ms [Average]
  (min, avg, max) = (11301.839, 11308.819, 11317.610), stdev = 5.824
  CI (99.9%): [11286.395, 11331.244] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  575.153 ±(99.9%) 1.137 MB/sec [Average]
  (min, avg, max) = (574.792, 575.153, 575.594), stdev = 0.295
  CI (99.9%): [574.016, 576.289] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.002 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (56.002, 56.002, 56.003), stdev = 0.001
  CI (99.9%): [56.002, 56.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  575.006 ±(99.9%) 97.066 MB/sec [Average]
  (min, avg, max) = (563.727, 575.006, 620.099), stdev = 25.208
  CI (99.9%): [477.940, 672.072] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  55.988 ±(99.9%) 9.440 B/op [Average]
  (min, avg, max) = (54.848, 55.988, 60.373), stdev = 2.451
  CI (99.9%): [46.548, 65.428] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  51.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (10.000, 10.200, 11.000), stdev = 0.447
  CI (99.9%): [51.000, 51.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  34.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (5.000, 6.800, 9.000), stdev = 1.483
  CI (99.9%): [34.000, 34.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 128, transferSize = 1048576)

# Run progress: 62.67% complete, ETA 00:39:18
# Fork: 1 of 1
# Warmup Iteration   1: 10417.135 ops/ms
# Warmup Iteration   2: 10597.052 ops/ms
# Warmup Iteration   3: 10658.762 ops/ms
Iteration   1: 10669.638 ops/ms
                 ·gc.alloc.rate:                   542.643 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          563.730 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     58.179 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         6.000 ms

Iteration   2: 10658.691 ops/ms
                 ·gc.alloc.rate:                   542.096 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     52.415 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         7.000 ms

Iteration   3: 10657.023 ops/ms
                 ·gc.alloc.rate:                   542.005 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          563.731 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     58.247 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         10.000 ms

Iteration   4: 10665.683 ops/ms
                 ·gc.alloc.rate:                   542.450 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.368 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     52.380 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         5.000 ms

Iteration   5: 10673.589 ops/ms
                 ·gc.alloc.rate:                   542.852 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          563.738 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     58.157 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         5.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  10664.925 ±(99.9%) 27.171 ops/ms [Average]
  (min, avg, max) = (10657.023, 10664.925, 10673.589), stdev = 7.056
  CI (99.9%): [10637.754, 10692.096] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  542.409 ±(99.9%) 1.380 MB/sec [Average]
  (min, avg, max) = (542.005, 542.409, 542.852), stdev = 0.358
  CI (99.9%): [541.029, 543.789] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.002 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (56.002, 56.002, 56.002), stdev = 0.001
  CI (99.9%): [56.002, 56.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  541.187 ±(99.9%) 118.877 MB/sec [Average]
  (min, avg, max) = (507.368, 541.187, 563.738), stdev = 30.872
  CI (99.9%): [422.310, 660.065] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  55.876 ±(99.9%) 12.227 B/op [Average]
  (min, avg, max) = (52.380, 55.876, 58.247), stdev = 3.175
  CI (99.9%): [43.649, 68.102] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  48.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
  CI (99.9%): [48.000, 48.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  33.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (5.000, 6.600, 10.000), stdev = 2.074
  CI (99.9%): [33.000, 33.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1024, transferSize = 128)

# Run progress: 64.00% complete, ETA 00:37:54
# Fork: 1 of 1
# Warmup Iteration   1: 1528.134 ops/ms
# Warmup Iteration   2: 1550.026 ops/ms
# Warmup Iteration   3: 1514.993 ops/ms
Iteration   1: 1513.486 ops/ms
                 ·gc.alloc.rate:               76.973 MB/sec
                 ·gc.alloc.rate.norm:          56.002 B/op
                 ·gc.churn.G1_Eden_Space:      56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 41.014 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 1553.567 ops/ms
                 ·gc.alloc.rate:                   79.012 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     39.956 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         1.000 ms

Iteration   3: 1554.740 ops/ms
                 ·gc.alloc.rate:                   79.075 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          112.749 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     79.852 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         4.000 ms

Iteration   4: 1558.311 ops/ms
                 ·gc.alloc.rate:               79.252 MB/sec
                 ·gc.alloc.rate.norm:          56.002 B/op
                 ·gc.churn.G1_Eden_Space:      56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 39.834 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   5: 1561.174 ops/ms
                 ·gc.alloc.rate:                   79.402 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          112.747 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     79.523 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1548.256 ±(99.9%) 75.731 ops/ms [Average]
  (min, avg, max) = (1513.486, 1548.256, 1561.174), stdev = 19.667
  CI (99.9%): [1472.525, 1623.986] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  78.743 ±(99.9%) 3.854 MB/sec [Average]
  (min, avg, max) = (76.973, 78.743, 79.402), stdev = 1.001
  CI (99.9%): [74.888, 82.597] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.002 ±(99.9%) 0.004 B/op [Average]
  (min, avg, max) = (56.002, 56.002, 56.003), stdev = 0.001
  CI (99.9%): [55.999, 56.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  78.923 ±(99.9%) 118.900 MB/sec [Average]
  (min, avg, max) = (56.373, 78.923, 112.749), stdev = 30.878
  CI (99.9%): [≈ 0, 197.823] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  56.036 ±(99.9%) 83.159 B/op [Average]
  (min, avg, max) = (39.834, 56.036, 79.852), stdev = 21.596
  CI (99.9%): [≈ 0, 139.195] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.010 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.002, 0.006), stdev = 0.003
  CI (99.9%): [≈ 0, 0.012] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.007 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.005), stdev = 0.002
  CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  7.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
  CI (99.9%): [7.000, 7.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  12.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
  CI (99.9%): [12.000, 12.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1024, transferSize = 1024)

# Run progress: 65.33% complete, ETA 00:36:30
# Fork: 1 of 1
# Warmup Iteration   1: 2334.339 ops/ms
# Warmup Iteration   2: 2371.028 ops/ms
# Warmup Iteration   3: 2375.540 ops/ms
Iteration   1: 2368.729 ops/ms
                 ·gc.alloc.rate:               120.472 MB/sec
                 ·gc.alloc.rate.norm:          56.002 B/op
                 ·gc.churn.G1_Eden_Space:      112.749 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 52.412 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     3.000 ms

Iteration   2: 2375.879 ops/ms
                 ·gc.alloc.rate:                   120.836 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          112.749 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     52.254 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         4.000 ms

Iteration   3: 2373.392 ops/ms
                 ·gc.alloc.rate:                   120.708 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          112.747 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     52.309 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   4: 2366.661 ops/ms
                 ·gc.alloc.rate:                   120.365 MB/sec
                 ·gc.alloc.rate.norm:              56.004 B/op
                 ·gc.churn.G1_Eden_Space:          112.743 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     52.457 B/op
                 ·gc.churn.G1_Survivor_Space:      0.134 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.062 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   5: 2360.212 ops/ms
                 ·gc.alloc.rate:                   120.037 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          112.746 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     52.601 B/op
                 ·gc.churn.G1_Survivor_Space:      0.019 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.009 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         2.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  2368.975 ±(99.9%) 23.532 ops/ms [Average]
  (min, avg, max) = (2360.212, 2368.975, 2375.879), stdev = 6.111
  CI (99.9%): [2345.443, 2392.506] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  120.484 ±(99.9%) 1.199 MB/sec [Average]
  (min, avg, max) = (120.037, 120.484, 120.836), stdev = 0.311
  CI (99.9%): [119.285, 121.683] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.003 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (56.002, 56.003, 56.004), stdev = 0.001
  CI (99.9%): [56.000, 56.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  112.747 ±(99.9%) 0.009 MB/sec [Average]
  (min, avg, max) = (112.743, 112.747, 112.749), stdev = 0.002
  CI (99.9%): [112.738, 112.756] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  52.407 ±(99.9%) 0.520 B/op [Average]
  (min, avg, max) = (52.254, 52.407, 52.601), stdev = 0.135
  CI (99.9%): [51.886, 52.927] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.034 ±(99.9%) 0.217 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.034, 0.134), stdev = 0.056
  CI (99.9%): [≈ 0, 0.251] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.016 ±(99.9%) 0.101 B/op [Average]
  (min, avg, max) = (≈ 0, 0.016, 0.062), stdev = 0.026
  CI (99.9%): [≈ 0, 0.117] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  10.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
  CI (99.9%): [10.000, 10.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  15.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
  CI (99.9%): [15.000, 15.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 66.67% complete, ETA 00:35:06
# Fork: 1 of 1
# Warmup Iteration   1: 2140.146 ops/ms
# Warmup Iteration   2: 2175.613 ops/ms
# Warmup Iteration   3: 2184.170 ops/ms
Iteration   1: 2179.840 ops/ms
                 ·gc.alloc.rate:                   110.866 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          112.748 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     56.954 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   2: 2183.639 ops/ms
                 ·gc.alloc.rate:               111.060 MB/sec
                 ·gc.alloc.rate.norm:          56.002 B/op
                 ·gc.churn.G1_Eden_Space:      112.750 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 56.855 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     4.000 ms

Iteration   3: 2180.822 ops/ms
                 ·gc.alloc.rate:                   110.914 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          112.746 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     56.928 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   4: 2179.632 ops/ms
                 ·gc.alloc.rate:               110.852 MB/sec
                 ·gc.alloc.rate.norm:          56.002 B/op
                 ·gc.churn.G1_Eden_Space:      112.745 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 56.959 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     3.000 ms

Iteration   5: 2182.781 ops/ms
                 ·gc.alloc.rate:                   111.017 MB/sec
                 ·gc.alloc.rate.norm:              56.004 B/op
                 ·gc.churn.G1_Eden_Space:          112.746 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     56.876 B/op
                 ·gc.churn.G1_Survivor_Space:      0.154 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.078 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         2.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  2181.342 ±(99.9%) 6.887 ops/ms [Average]
  (min, avg, max) = (2179.632, 2181.342, 2183.639), stdev = 1.789
  CI (99.9%): [2174.455, 2188.230] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  110.942 ±(99.9%) 0.357 MB/sec [Average]
  (min, avg, max) = (110.852, 110.942, 111.060), stdev = 0.093
  CI (99.9%): [110.585, 111.298] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.003 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (56.002, 56.003, 56.004), stdev = 0.001
  CI (99.9%): [56.000, 56.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  112.747 ±(99.9%) 0.008 MB/sec [Average]
  (min, avg, max) = (112.745, 112.747, 112.750), stdev = 0.002
  CI (99.9%): [112.739, 112.755] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  56.914 ±(99.9%) 0.179 B/op [Average]
  (min, avg, max) = (56.855, 56.914, 56.959), stdev = 0.047
  CI (99.9%): [56.735, 57.094] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.033 ±(99.9%) 0.261 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.033, 0.154), stdev = 0.068
  CI (99.9%): [≈ 0, 0.294] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.016 ±(99.9%) 0.132 B/op [Average]
  (min, avg, max) = (≈ 0, 0.016, 0.078), stdev = 0.034
  CI (99.9%): [≈ 0, 0.148] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  10.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
  CI (99.9%): [10.000, 10.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  15.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
  CI (99.9%): [15.000, 15.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1048576, transferSize = 128)

# Run progress: 68.00% complete, ETA 00:33:41
# Fork: 1 of 1
# Warmup Iteration   1: 1.610 ops/ms
# Warmup Iteration   2: 1.621 ops/ms
# Warmup Iteration   3: 1.620 ops/ms
Iteration   1: 1.622 ops/ms
                 ·gc.alloc.rate:      0.083 MB/sec
                 ·gc.alloc.rate.norm: 56.027 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.622 ops/ms
                 ·gc.alloc.rate:      0.083 MB/sec
                 ·gc.alloc.rate.norm: 56.029 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.622 ops/ms
                 ·gc.alloc.rate:      0.083 MB/sec
                 ·gc.alloc.rate.norm: 56.025 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.618 ops/ms
                 ·gc.alloc.rate:      0.082 MB/sec
                 ·gc.alloc.rate.norm: 56.034 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.620 ops/ms
                 ·gc.alloc.rate:      0.082 MB/sec
                 ·gc.alloc.rate.norm: 56.027 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1.621 ±(99.9%) 0.007 ops/ms [Average]
  (min, avg, max) = (1.618, 1.621, 1.622), stdev = 0.002
  CI (99.9%): [1.614, 1.627] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.082 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.082, 0.082, 0.083), stdev = 0.001
  CI (99.9%): [0.082, 0.083] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.028 ±(99.9%) 0.012 B/op [Average]
  (min, avg, max) = (56.025, 56.028, 56.034), stdev = 0.003
  CI (99.9%): [56.016, 56.041] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 69.33% complete, ETA 00:32:17
# Fork: 1 of 1
# Warmup Iteration   1: 2.448 ops/ms
# Warmup Iteration   2: 2.456 ops/ms
# Warmup Iteration   3: 2.450 ops/ms
Iteration   1: 2.446 ops/ms
                 ·gc.alloc.rate:      0.124 MB/sec
                 ·gc.alloc.rate.norm: 56.019 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.451 ops/ms
                 ·gc.alloc.rate:      0.125 MB/sec
                 ·gc.alloc.rate.norm: 56.022 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.447 ops/ms
                 ·gc.alloc.rate:      0.124 MB/sec
                 ·gc.alloc.rate.norm: 56.018 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.448 ops/ms
                 ·gc.alloc.rate:      0.125 MB/sec
                 ·gc.alloc.rate.norm: 56.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.446 ops/ms
                 ·gc.alloc.rate:      0.124 MB/sec
                 ·gc.alloc.rate.norm: 56.018 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  2.448 ±(99.9%) 0.008 ops/ms [Average]
  (min, avg, max) = (2.446, 2.448, 2.451), stdev = 0.002
  CI (99.9%): [2.440, 2.455] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.125 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.124, 0.125, 0.125), stdev = 0.001
  CI (99.9%): [0.124, 0.125] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.019 ±(99.9%) 0.008 B/op [Average]
  (min, avg, max) = (56.017, 56.019, 56.022), stdev = 0.002
  CI (99.9%): [56.011, 56.027] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 70.67% complete, ETA 00:30:53
# Fork: 1 of 1
# Warmup Iteration   1: 2.034 ops/ms
# Warmup Iteration   2: 2.041 ops/ms
# Warmup Iteration   3: 2.036 ops/ms
Iteration   1: 2.041 ops/ms
                 ·gc.alloc.rate:      0.104 MB/sec
                 ·gc.alloc.rate.norm: 56.022 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.041 ops/ms
                 ·gc.alloc.rate:      0.104 MB/sec
                 ·gc.alloc.rate.norm: 56.028 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.042 ops/ms
                 ·gc.alloc.rate:      0.104 MB/sec
                 ·gc.alloc.rate.norm: 56.020 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.040 ops/ms
                 ·gc.alloc.rate:      0.104 MB/sec
                 ·gc.alloc.rate.norm: 56.022 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.038 ops/ms
                 ·gc.alloc.rate:      0.104 MB/sec
                 ·gc.alloc.rate.norm: 56.022 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  2.040 ±(99.9%) 0.006 ops/ms [Average]
  (min, avg, max) = (2.038, 2.040, 2.042), stdev = 0.002
  CI (99.9%): [2.035, 2.046] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.104 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.104, 0.104, 0.104), stdev = 0.001
  CI (99.9%): [0.104, 0.104] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.023 ±(99.9%) 0.012 B/op [Average]
  (min, avg, max) = (56.020, 56.023, 56.028), stdev = 0.003
  CI (99.9%): [56.010, 56.035] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 128, transferSize = 128)

# Run progress: 72.00% complete, ETA 00:29:29
# Fork: 1 of 1
# Warmup Iteration   1: 12959.990 ops/ms
# Warmup Iteration   2: 13166.636 ops/ms
# Warmup Iteration   3: 13254.012 ops/ms
Iteration   1: 13255.614 ops/ms
                 ·gc.alloc.rate:                   3274.577 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3269.702 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.605 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         35.000 ms

Iteration   2: 13255.601 ops/ms
                 ·gc.alloc.rate:                   3274.571 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3269.745 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.609 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         33.000 ms

Iteration   3: 13251.253 ops/ms
                 ·gc.alloc.rate:                   3273.463 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3269.679 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.696 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         33.000 ms

Iteration   4: 13269.567 ops/ms
                 ·gc.alloc.rate:                   3278.011 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3269.707 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.321 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         32.000 ms

Iteration   5: 13266.241 ops/ms
                 ·gc.alloc.rate:                   3277.159 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3326.045 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     276.068 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        59.000 counts
                 ·gc.time:                         32.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  13259.655 ±(99.9%) 30.135 ops/ms [Average]
  (min, avg, max) = (13251.253, 13259.655, 13269.567), stdev = 7.826
  CI (99.9%): [13229.520, 13289.790] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  3275.556 ±(99.9%) 7.434 MB/sec [Average]
  (min, avg, max) = (3273.463, 3275.556, 3278.011), stdev = 1.931
  CI (99.9%): [3268.122, 3282.990] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  272.010 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (272.010, 272.010, 272.010), stdev = 0.001
  CI (99.9%): [272.010, 272.011] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  3280.975 ±(99.9%) 97.015 MB/sec [Average]
  (min, avg, max) = (3269.679, 3280.975, 3326.045), stdev = 25.194
  CI (99.9%): [3183.960, 3377.990] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  272.460 ±(99.9%) 7.786 B/op [Average]
  (min, avg, max) = (271.321, 272.460, 276.068), stdev = 2.022
  CI (99.9%): [264.674, 280.245] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.006 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.006), stdev = 0.002
  CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  291.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (58.000, 58.200, 59.000), stdev = 0.447
  CI (99.9%): [291.000, 291.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  165.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (32.000, 33.000, 35.000), stdev = 1.225
  CI (99.9%): [165.000, 165.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 128, transferSize = 1024)

# Run progress: 73.33% complete, ETA 00:28:04
# Fork: 1 of 1
# Warmup Iteration   1: 13027.856 ops/ms
# Warmup Iteration   2: 13410.270 ops/ms
# Warmup Iteration   3: 12529.521 ops/ms
Iteration   1: 12513.969 ops/ms
                 ·gc.alloc.rate:                   3091.353 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3100.563 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     272.821 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         32.000 ms

Iteration   2: 12512.244 ops/ms
                 ·gc.alloc.rate:                   3090.926 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3100.599 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     272.862 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         46.000 ms

Iteration   3: 13078.745 ops/ms
                 ·gc.alloc.rate:                   3230.914 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3213.407 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     270.536 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        57.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 13076.275 ops/ms
                 ·gc.alloc.rate:                   3230.206 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3269.665 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     275.333 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         27.000 ms

Iteration   5: 13078.732 ops/ms
                 ·gc.alloc.rate:                   3230.900 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3213.394 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     270.536 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        57.000 counts
                 ·gc.time:                         31.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  12851.993 ±(99.9%) 1191.242 ops/ms [Average]
  (min, avg, max) = (12512.244, 12851.993, 13078.745), stdev = 309.362
  CI (99.9%): [11660.751, 14043.235] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  3174.860 ±(99.9%) 294.292 MB/sec [Average]
  (min, avg, max) = (3090.926, 3174.860, 3230.914), stdev = 76.427
  CI (99.9%): [2880.568, 3469.152] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  272.010 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (272.010, 272.010, 272.010), stdev = 0.001
  CI (99.9%): [272.010, 272.011] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  3179.526 ±(99.9%) 291.256 MB/sec [Average]
  (min, avg, max) = (3100.563, 3179.526, 3269.665), stdev = 75.638
  CI (99.9%): [2888.270, 3470.781] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  272.418 ±(99.9%) 7.686 B/op [Average]
  (min, avg, max) = (270.536, 272.418, 275.333), stdev = 1.996
  CI (99.9%): [264.731, 280.104] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.001, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  282.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (55.000, 56.400, 58.000), stdev = 1.342
  CI (99.9%): [282.000, 282.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  165.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (27.000, 33.000, 46.000), stdev = 7.517
  CI (99.9%): [165.000, 165.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 128, transferSize = 1048576)

# Run progress: 74.67% complete, ETA 00:26:40
# Fork: 1 of 1
# Warmup Iteration   1: 13017.442 ops/ms
# Warmup Iteration   2: 13170.896 ops/ms
# Warmup Iteration   3: 13274.889 ops/ms
Iteration   1: 13269.833 ops/ms
                 ·gc.alloc.rate:                   3278.111 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3326.102 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     275.993 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        59.000 counts
                 ·gc.time:                         34.000 ms

Iteration   2: 13285.193 ops/ms
                 ·gc.alloc.rate:                   3281.882 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3269.739 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.004 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         33.000 ms

Iteration   3: 13275.625 ops/ms
                 ·gc.alloc.rate:                   3279.475 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3269.702 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.200 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 13264.409 ops/ms
                 ·gc.alloc.rate:                   3276.701 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3269.674 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.427 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         28.000 ms

Iteration   5: 13275.317 ops/ms
                 ·gc.alloc.rate:                   3279.423 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3269.705 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.204 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         29.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  13274.075 ±(99.9%) 29.763 ops/ms [Average]
  (min, avg, max) = (13264.409, 13274.075, 13285.193), stdev = 7.729
  CI (99.9%): [13244.312, 13303.838] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  3279.118 ±(99.9%) 7.385 MB/sec [Average]
  (min, avg, max) = (3276.701, 3279.118, 3281.882), stdev = 1.918
  CI (99.9%): [3271.733, 3286.503] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  272.010 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (272.010, 272.010, 272.010), stdev = 0.001
  CI (99.9%): [272.010, 272.011] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  3280.984 ±(99.9%) 97.119 MB/sec [Average]
  (min, avg, max) = (3269.674, 3280.984, 3326.102), stdev = 25.221
  CI (99.9%): [3183.866, 3378.103] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  272.165 ±(99.9%) 8.259 B/op [Average]
  (min, avg, max) = (271.004, 272.165, 275.993), stdev = 2.145
  CI (99.9%): [263.907, 280.424] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.004 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁵, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  291.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (58.000, 58.200, 59.000), stdev = 0.447
  CI (99.9%): [291.000, 291.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  153.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (28.000, 30.600, 34.000), stdev = 2.702
  CI (99.9%): [153.000, 153.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 1024, transferSize = 128)

# Run progress: 76.00% complete, ETA 00:25:16
# Fork: 1 of 1
# Warmup Iteration   1: 1623.287 ops/ms
# Warmup Iteration   2: 1657.590 ops/ms
# Warmup Iteration   3: 1653.210 ops/ms
Iteration   1: 1645.923 ops/ms
                 ·gc.alloc.rate:                   3085.322 MB/sec
                 ·gc.alloc.rate.norm:              2064.078 B/op
                 ·gc.churn.G1_Eden_Space:          3044.178 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2036.552 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         30.000 ms

Iteration   2: 1653.148 ops/ms
                 ·gc.alloc.rate:                   3098.906 MB/sec
                 ·gc.alloc.rate.norm:              2064.078 B/op
                 ·gc.churn.G1_Eden_Space:          3100.617 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2065.218 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         32.000 ms

Iteration   3: 1652.827 ops/ms
                 ·gc.alloc.rate:                   3098.271 MB/sec
                 ·gc.alloc.rate.norm:              2064.078 B/op
                 ·gc.churn.G1_Eden_Space:          3100.561 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2065.604 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         41.000 ms

Iteration   4: 1655.030 ops/ms
                 ·gc.alloc.rate:                   3102.401 MB/sec
                 ·gc.alloc.rate.norm:              2064.077 B/op
                 ·gc.churn.G1_Eden_Space:          3100.562 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2062.854 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         32.000 ms

Iteration   5: 1655.265 ops/ms
                 ·gc.alloc.rate:                   3102.835 MB/sec
                 ·gc.alloc.rate.norm:              2064.077 B/op
                 ·gc.churn.G1_Eden_Space:          3100.561 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2062.563 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         30.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  1652.439 ±(99.9%) 14.640 ops/ms [Average]
  (min, avg, max) = (1645.923, 1652.439, 1655.265), stdev = 3.802
  CI (99.9%): [1637.799, 1667.078] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  3097.547 ±(99.9%) 27.455 MB/sec [Average]
  (min, avg, max) = (3085.322, 3097.547, 3102.835), stdev = 7.130
  CI (99.9%): [3070.092, 3125.002] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2064.077 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (2064.077, 2064.077, 2064.078), stdev = 0.001
  CI (99.9%): [2064.075, 2064.080] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  3089.296 ±(99.9%) 97.119 MB/sec [Average]
  (min, avg, max) = (3044.178, 3089.296, 3100.617), stdev = 25.221
  CI (99.9%): [2992.177, 3186.415] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2058.558 ±(99.9%) 47.658 B/op [Average]
  (min, avg, max) = (2036.552, 2058.558, 2065.604), stdev = 12.377
  CI (99.9%): [2010.900, 2106.216] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.004 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.002 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  274.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (54.000, 54.800, 55.000), stdev = 0.447
  CI (99.9%): [274.000, 274.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  165.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (30.000, 33.000, 41.000), stdev = 4.583
  CI (99.9%): [165.000, 165.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 1024, transferSize = 1024)

# Run progress: 77.33% complete, ETA 00:23:52
# Fork: 1 of 1
# Warmup Iteration   1: 3692.356 ops/ms
# Warmup Iteration   2: 3771.337 ops/ms
# Warmup Iteration   3: 3782.256 ops/ms
Iteration   1: 3779.188 ops/ms
                 ·gc.alloc.rate:                   7084.176 MB/sec
                 ·gc.alloc.rate.norm:              2064.050 B/op
                 ·gc.churn.G1_Eden_Space:          7034.591 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2049.603 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        81.000 counts
                 ·gc.time:                         47.000 ms

Iteration   2: 3789.549 ops/ms
                 ·gc.alloc.rate:                   7103.541 MB/sec
                 ·gc.alloc.rate.norm:              2064.050 B/op
                 ·gc.churn.G1_Eden_Space:          7121.476 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2069.261 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         47.000 ms

Iteration   3: 3789.563 ops/ms
                 ·gc.alloc.rate:                   7103.551 MB/sec
                 ·gc.alloc.rate.norm:              2064.050 B/op
                 ·gc.churn.G1_Eden_Space:          7121.387 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2069.232 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         43.000 ms

Iteration   4: 3791.714 ops/ms
                 ·gc.alloc.rate:                   7107.375 MB/sec
                 ·gc.alloc.rate.norm:              2064.050 B/op
                 ·gc.churn.G1_Eden_Space:          7121.185 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2068.060 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         44.000 ms

Iteration   5: 3794.821 ops/ms
                 ·gc.alloc.rate:                   7113.450 MB/sec
                 ·gc.alloc.rate.norm:              2064.050 B/op
                 ·gc.churn.G1_Eden_Space:          7121.508 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2066.388 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         43.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  3788.967 ±(99.9%) 22.629 ops/ms [Average]
  (min, avg, max) = (3779.188, 3788.967, 3794.821), stdev = 5.877
  CI (99.9%): [3766.338, 3811.596] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  7102.419 ±(99.9%) 42.251 MB/sec [Average]
  (min, avg, max) = (7084.176, 7102.419, 7113.450), stdev = 10.972
  CI (99.9%): [7060.168, 7144.670] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2064.050 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (2064.050, 2064.050, 2064.050), stdev = 0.001
  CI (99.9%): [2064.049, 2064.051] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  7104.029 ±(99.9%) 149.472 MB/sec [Average]
  (min, avg, max) = (7034.591, 7104.029, 7121.508), stdev = 38.817
  CI (99.9%): [6954.558, 7253.501] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2064.509 ±(99.9%) 32.402 B/op [Average]
  (min, avg, max) = (2049.603, 2064.509, 2069.261), stdev = 8.415
  CI (99.9%): [2032.107, 2096.911] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.005 ±(99.9%) 0.009 MB/sec [Average]
  (min, avg, max) = (0.003, 0.005, 0.009), stdev = 0.002
  CI (99.9%): [≈ 0, 0.014] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  409.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (81.000, 81.800, 82.000), stdev = 0.447
  CI (99.9%): [409.000, 409.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  224.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (43.000, 44.800, 47.000), stdev = 2.049
  CI (99.9%): [224.000, 224.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 78.67% complete, ETA 00:22:27
# Fork: 1 of 1
# Warmup Iteration   1: 3740.857 ops/ms
# Warmup Iteration   2: 3837.866 ops/ms
# Warmup Iteration   3: 3822.581 ops/ms
Iteration   1: 3821.808 ops/ms
                 ·gc.alloc.rate:                   7164.055 MB/sec
                 ·gc.alloc.rate.norm:              2064.052 B/op
                 ·gc.churn.G1_Eden_Space:          7122.941 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2052.207 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         49.000 ms

Iteration   2: 3822.253 ops/ms
                 ·gc.alloc.rate:                   7164.920 MB/sec
                 ·gc.alloc.rate.norm:              2064.052 B/op
                 ·gc.churn.G1_Eden_Space:          7206.852 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2076.132 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        86.000 counts
                 ·gc.time:                         47.000 ms

Iteration   3: 3825.096 ops/ms
                 ·gc.alloc.rate:                   7170.169 MB/sec
                 ·gc.alloc.rate.norm:              2064.052 B/op
                 ·gc.churn.G1_Eden_Space:          7206.722 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2074.574 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        86.000 counts
                 ·gc.time:                         48.000 ms

Iteration   4: 3826.748 ops/ms
                 ·gc.alloc.rate:                   7173.241 MB/sec
                 ·gc.alloc.rate.norm:              2064.051 B/op
                 ·gc.churn.G1_Eden_Space:          7122.897 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2049.565 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         45.000 ms

Iteration   5: 3824.635 ops/ms
                 ·gc.alloc.rate:                   7169.241 MB/sec
                 ·gc.alloc.rate.norm:              2064.052 B/op
                 ·gc.churn.G1_Eden_Space:          7206.653 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2074.823 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        86.000 counts
                 ·gc.time:                         47.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  3824.108 ±(99.9%) 7.928 ops/ms [Average]
  (min, avg, max) = (3821.808, 3824.108, 3826.748), stdev = 2.059
  CI (99.9%): [3816.179, 3832.036] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  7168.325 ±(99.9%) 14.694 MB/sec [Average]
  (min, avg, max) = (7164.055, 7168.325, 7173.241), stdev = 3.816
  CI (99.9%): [7153.632, 7183.019] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2064.052 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (2064.051, 2064.052, 2064.052), stdev = 0.001
  CI (99.9%): [2064.050, 2064.053] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  7173.213 ±(99.9%) 176.791 MB/sec [Average]
  (min, avg, max) = (7122.897, 7173.213, 7206.852), stdev = 45.912
  CI (99.9%): [6996.422, 7350.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2065.460 ±(99.9%) 51.407 B/op [Average]
  (min, avg, max) = (2049.565, 2065.460, 2076.132), stdev = 13.350
  CI (99.9%): [2014.053, 2116.867] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.005 ±(99.9%) 0.010 MB/sec [Average]
  (min, avg, max) = (0.002, 0.005, 0.008), stdev = 0.003
  CI (99.9%): [≈ 0, 0.014] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  428.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (85.000, 85.600, 86.000), stdev = 0.548
  CI (99.9%): [428.000, 428.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  236.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (45.000, 47.200, 49.000), stdev = 1.483
  CI (99.9%): [236.000, 236.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 1048576, transferSize = 128)

# Run progress: 80.00% complete, ETA 00:21:03
# Fork: 1 of 1
# Warmup Iteration   1: 2.243 ops/ms
# Warmup Iteration   2: 2.250 ops/ms
# Warmup Iteration   3: 2.259 ops/ms
Iteration   1: 2.263 ops/ms
                 ·gc.alloc.rate:               33.705 MB/sec
                 ·gc.alloc.rate.norm:          16401.193 B/op
                 ·gc.churn.G1_Eden_Space:      56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 27430.711 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 2.264 ops/ms
                 ·gc.alloc.rate:      33.715 MB/sec
                 ·gc.alloc.rate.norm: 16400.024 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.274 ops/ms
                 ·gc.alloc.rate:               33.870 MB/sec
                 ·gc.alloc.rate.norm:          16401.186 B/op
                 ·gc.churn.G1_Eden_Space:      56.372 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 27298.021 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   4: 2.274 ops/ms
                 ·gc.alloc.rate:      33.872 MB/sec
                 ·gc.alloc.rate.norm: 16400.019 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.271 ops/ms
                 ·gc.alloc.rate:                   33.831 MB/sec
                 ·gc.alloc.rate.norm:              16401.192 B/op
                 ·gc.churn.G1_Eden_Space:          56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     27329.268 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 3.906 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  2.269 ±(99.9%) 0.021 ops/ms [Average]
  (min, avg, max) = (2.263, 2.269, 2.274), stdev = 0.006
  CI (99.9%): [2.248, 2.291] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  33.799 ±(99.9%) 0.318 MB/sec [Average]
  (min, avg, max) = (33.705, 33.799, 33.872), stdev = 0.083
  CI (99.9%): [33.480, 34.117] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  16400.723 ±(99.9%) 2.465 B/op [Average]
  (min, avg, max) = (16400.019, 16400.723, 16401.193), stdev = 0.640
  CI (99.9%): [16398.258, 16403.188] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  33.823 ±(99.9%) 118.893 MB/sec [Average]
  (min, avg, max) = (≈ 0, 33.823, 56.373), stdev = 30.876
  CI (99.9%): [≈ 0, 152.716] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  16411.600 ±(99.9%) 57689.395 B/op [Average]
  (min, avg, max) = (≈ 0, 16411.600, 27430.711), stdev = 14981.753
  CI (99.9%): [≈ 0, 74100.995] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.014 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.002, 0.008), stdev = 0.004
  CI (99.9%): [≈ 0, 0.015] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.781 ±(99.9%) 6.726 B/op [Average]
  (min, avg, max) = (≈ 0, 0.781, 3.906), stdev = 1.747
  CI (99.9%): [≈ 0, 7.507] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  3.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 81.33% complete, ETA 00:19:39
# Fork: 1 of 1
# Warmup Iteration   1: 7.060 ops/ms
# Warmup Iteration   2: 7.158 ops/ms
# Warmup Iteration   3: 7.166 ops/ms
Iteration   1: 7.157 ops/ms
                 ·gc.alloc.rate:                   106.596 MB/sec
                 ·gc.alloc.rate.norm:              16400.746 B/op
                 ·gc.churn.G1_Eden_Space:          112.744 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     17346.607 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.384 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   2: 7.147 ops/ms
                 ·gc.alloc.rate:               106.446 MB/sec
                 ·gc.alloc.rate.norm:          16400.746 B/op
                 ·gc.churn.G1_Eden_Space:      112.748 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 17371.607 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     3.000 ms

Iteration   3: 7.150 ops/ms
                 ·gc.alloc.rate:                   106.497 MB/sec
                 ·gc.alloc.rate.norm:              16400.746 B/op
                 ·gc.churn.G1_Eden_Space:          112.745 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     17362.861 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.626 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   4: 7.143 ops/ms
                 ·gc.alloc.rate:                   106.388 MB/sec
                 ·gc.alloc.rate.norm:              16400.379 B/op
                 ·gc.churn.G1_Eden_Space:          56.374 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     8690.424 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.223 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   5: 7.133 ops/ms
                 ·gc.alloc.rate:                   106.242 MB/sec
                 ·gc.alloc.rate.norm:              16401.232 B/op
                 ·gc.churn.G1_Eden_Space:          112.745 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     17405.215 B/op
                 ·gc.churn.G1_Survivor_Space:      0.339 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 52.276 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  7.146 ±(99.9%) 0.034 ops/ms [Average]
  (min, avg, max) = (7.133, 7.146, 7.157), stdev = 0.009
  CI (99.9%): [7.111, 7.180] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  106.434 ±(99.9%) 0.508 MB/sec [Average]
  (min, avg, max) = (106.242, 106.434, 106.596), stdev = 0.132
  CI (99.9%): [105.926, 106.942] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  16400.770 ±(99.9%) 1.168 B/op [Average]
  (min, avg, max) = (16400.379, 16400.770, 16401.232), stdev = 0.303
  CI (99.9%): [16399.601, 16401.938] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  101.471 ±(99.9%) 97.075 MB/sec [Average]
  (min, avg, max) = (56.374, 101.471, 112.748), stdev = 25.210
  CI (99.9%): [4.396, 198.546] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  15635.343 ±(99.9%) 14949.688 B/op [Average]
  (min, avg, max) = (8690.424, 15635.343, 17405.215), stdev = 3882.386
  CI (99.9%): [685.655, 30585.030] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.069 ±(99.9%) 0.580 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.069, 0.339), stdev = 0.151
  CI (99.9%): [≈ 0, 0.649] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  10.702 ±(99.9%) 89.495 B/op [Average]
  (min, avg, max) = (≈ 0, 10.702, 52.276), stdev = 23.242
  CI (99.9%): [≈ 0, 100.197] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  9.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
  CI (99.9%): [9.000, 9.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  14.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
  CI (99.9%): [14.000, 14.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 82.67% complete, ETA 00:18:15
# Fork: 1 of 1
# Warmup Iteration   1: 9.161 ops/ms
# Warmup Iteration   2: 9.360 ops/ms
# Warmup Iteration   3: 9.314 ops/ms
Iteration   1: 9.358 ops/ms
                 ·gc.alloc.rate:               139.382 MB/sec
                 ·gc.alloc.rate.norm:          16400.578 B/op
                 ·gc.churn.G1_Eden_Space:      112.748 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 13266.590 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     3.000 ms

Iteration   2: 9.333 ops/ms
                 ·gc.alloc.rate:                   139.010 MB/sec
                 ·gc.alloc.rate.norm:              16400.853 B/op
                 ·gc.churn.G1_Eden_Space:          169.122 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     19953.616 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.265 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         5.000 ms

Iteration   3: 9.350 ops/ms
                 ·gc.alloc.rate:                   139.258 MB/sec
                 ·gc.alloc.rate.norm:              16400.940 B/op
                 ·gc.churn.G1_Eden_Space:          112.746 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     13278.508 B/op
                 ·gc.churn.G1_Survivor_Space:      0.340 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 39.998 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   4: 9.369 ops/ms
                 ·gc.alloc.rate:                   139.540 MB/sec
                 ·gc.alloc.rate.norm:              16400.850 B/op
                 ·gc.churn.G1_Eden_Space:          169.104 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     19875.672 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.225 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         3.000 ms

Iteration   5: 9.381 ops/ms
                 ·gc.alloc.rate:                   139.716 MB/sec
                 ·gc.alloc.rate.norm:              16400.569 B/op
                 ·gc.churn.G1_Eden_Space:          112.744 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     13234.487 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.659 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         2.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  9.358 ±(99.9%) 0.071 ops/ms [Average]
  (min, avg, max) = (9.333, 9.358, 9.381), stdev = 0.018
  CI (99.9%): [9.287, 9.429] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  139.381 ±(99.9%) 1.037 MB/sec [Average]
  (min, avg, max) = (139.010, 139.381, 139.716), stdev = 0.269
  CI (99.9%): [138.344, 140.419] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  16400.758 ±(99.9%) 0.664 B/op [Average]
  (min, avg, max) = (16400.569, 16400.758, 16400.940), stdev = 0.172
  CI (99.9%): [16400.094, 16401.422] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  135.293 ±(99.9%) 118.883 MB/sec [Average]
  (min, avg, max) = (112.744, 135.293, 169.122), stdev = 30.873
  CI (99.9%): [16.410, 254.176] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  15921.775 ±(99.9%) 14036.037 B/op [Average]
  (min, avg, max) = (13234.487, 15921.775, 19953.616), stdev = 3645.114
  CI (99.9%): [1885.738, 29957.811] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.070 ±(99.9%) 0.581 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.070, 0.340), stdev = 0.151
  CI (99.9%): [≈ 0, 0.651] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  8.229 ±(99.9%) 68.390 B/op [Average]
  (min, avg, max) = (≈ 0, 8.229, 39.998), stdev = 17.761
  CI (99.9%): [≈ 0, 76.619] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  12.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
  CI (99.9%): [12.000, 12.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  16.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.095
  CI (99.9%): [16.000, 16.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 128, transferSize = 128)

# Run progress: 84.00% complete, ETA 00:16:50
# Fork: 1 of 1
# Warmup Iteration   1: 72586.808 ops/ms
# Warmup Iteration   2: 73769.370 ops/ms
# Warmup Iteration   3: 77005.983 ops/ms
Iteration   1: 77038.839 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 77087.224 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 76930.456 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 77044.801 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 76832.756 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  76986.815 ±(99.9%) 399.528 ops/ms [Average]
  (min, avg, max) = (76832.756, 76986.815, 77087.224), stdev = 103.756
  CI (99.9%): [76587.287, 77386.343] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 128, transferSize = 1024)

# Run progress: 85.33% complete, ETA 00:15:26
# Fork: 1 of 1
# Warmup Iteration   1: 72665.995 ops/ms
# Warmup Iteration   2: 73785.875 ops/ms
# Warmup Iteration   3: 76978.144 ops/ms
Iteration   1: 76960.464 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 76858.410 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 76746.606 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 76692.534 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 76949.333 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  76841.469 ±(99.9%) 460.719 ops/ms [Average]
  (min, avg, max) = (76692.534, 76841.469, 76960.464), stdev = 119.647
  CI (99.9%): [76380.750, 77302.189] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 128, transferSize = 1048576)

# Run progress: 86.67% complete, ETA 00:14:02
# Fork: 1 of 1
# Warmup Iteration   1: 72598.288 ops/ms
# Warmup Iteration   2: 73674.438 ops/ms
# Warmup Iteration   3: 77047.886 ops/ms
Iteration   1: 76997.308 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 77063.897 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 76977.678 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 77092.321 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 77043.932 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  77035.027 ±(99.9%) 181.705 ops/ms [Average]
  (min, avg, max) = (76977.678, 77035.027, 77092.321), stdev = 47.188
  CI (99.9%): [76853.322, 77216.732] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 1024, transferSize = 128)

# Run progress: 88.00% complete, ETA 00:12:38
# Fork: 1 of 1
# Warmup Iteration   1: 9131.325 ops/ms
# Warmup Iteration   2: 8226.841 ops/ms
# Warmup Iteration   3: 9221.395 ops/ms
Iteration   1: 9224.434 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 9228.861 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 9229.594 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 9237.100 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 9248.414 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  9233.681 ±(99.9%) 36.234 ops/ms [Average]
  (min, avg, max) = (9224.434, 9233.681, 9248.414), stdev = 9.410
  CI (99.9%): [9197.447, 9269.915] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 1024, transferSize = 1024)

# Run progress: 89.33% complete, ETA 00:11:13
# Fork: 1 of 1
# Warmup Iteration   1: 37273.407 ops/ms
# Warmup Iteration   2: 37151.480 ops/ms
# Warmup Iteration   3: 36846.512 ops/ms
Iteration   1: 36910.165 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 36878.910 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 36880.822 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 36957.543 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 36880.663 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  36901.621 ±(99.9%) 130.410 ops/ms [Average]
  (min, avg, max) = (36878.910, 36901.621, 36957.543), stdev = 33.867
  CI (99.9%): [36771.211, 37032.031] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 90.67% complete, ETA 00:09:49
# Fork: 1 of 1
# Warmup Iteration   1: 37429.216 ops/ms
# Warmup Iteration   2: 37114.976 ops/ms
# Warmup Iteration   3: 37093.697 ops/ms
Iteration   1: 37228.805 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 37108.943 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 37081.836 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 37217.715 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 37067.181 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  37140.896 ±(99.9%) 295.599 ops/ms [Average]
  (min, avg, max) = (37067.181, 37140.896, 37228.805), stdev = 76.766
  CI (99.9%): [36845.297, 37436.495] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 1048576, transferSize = 128)

# Run progress: 92.00% complete, ETA 00:08:25
# Fork: 1 of 1
# Warmup Iteration   1: 9.568 ops/ms
# Warmup Iteration   2: 9.500 ops/ms
# Warmup Iteration   3: 9.567 ops/ms
Iteration   1: 9.569 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 9.571 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 9.560 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 9.568 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 9.568 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  9.567 ±(99.9%) 0.015 ops/ms [Average]
  (min, avg, max) = (9.560, 9.567, 9.571), stdev = 0.004
  CI (99.9%): [9.552, 9.583] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  0.004 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.004, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 93.33% complete, ETA 00:07:01
# Fork: 1 of 1
# Warmup Iteration   1: 16.519 ops/ms
# Warmup Iteration   2: 16.545 ops/ms
# Warmup Iteration   3: 16.566 ops/ms
Iteration   1: 16.582 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 16.583 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 16.577 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 16.584 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 16.585 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  16.582 ±(99.9%) 0.013 ops/ms [Average]
  (min, avg, max) = (16.577, 16.582, 16.585), stdev = 0.003
  CI (99.9%): [16.570, 16.595] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  0.003 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 94.67% complete, ETA 00:05:36
# Fork: 1 of 1
# Warmup Iteration   1: 18.706 ops/ms
# Warmup Iteration   2: 18.736 ops/ms
# Warmup Iteration   3: 18.735 ops/ms
Iteration   1: 18.745 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 18.758 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 18.746 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 18.731 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 18.747 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  18.746 ±(99.9%) 0.037 ops/ms [Average]
  (min, avg, max) = (18.731, 18.746, 18.758), stdev = 0.010
  CI (99.9%): [18.709, 18.783] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  0.002 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan
# Parameters: (transferSize = 128)

# Run progress: 96.00% complete, ETA 00:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 4735.543 ops/ms
# Warmup Iteration   2: 4674.853 ops/ms
# Warmup Iteration   3: 4636.653 ops/ms
Iteration   1: 4632.706 ops/ms
                 ·gc.alloc.rate:                   1835.356 MB/sec
                 ·gc.alloc.rate.norm:              436.233 B/op
                 ·gc.churn.G1_Eden_Space:          1860.343 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     442.172 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         20.000 ms

Iteration   2: 4633.875 ops/ms
                 ·gc.alloc.rate:                   1835.829 MB/sec
                 ·gc.alloc.rate.norm:              436.232 B/op
                 ·gc.churn.G1_Eden_Space:          1804.001 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     428.669 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         21.000 ms

Iteration   3: 4631.690 ops/ms
                 ·gc.alloc.rate:                   1834.926 MB/sec
                 ·gc.alloc.rate.norm:              436.232 B/op
                 ·gc.churn.G1_Eden_Space:          1860.319 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     442.269 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 4631.743 ops/ms
                 ·gc.alloc.rate:                   1834.972 MB/sec
                 ·gc.alloc.rate.norm:              436.231 B/op
                 ·gc.churn.G1_Eden_Space:          1803.978 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     428.863 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         24.000 ms

Iteration   5: 4634.433 ops/ms
                 ·gc.alloc.rate:                   1836.043 MB/sec
                 ·gc.alloc.rate.norm:              436.232 B/op
                 ·gc.churn.G1_Eden_Space:          1860.361 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     442.009 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         26.000 ms



Result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan":
  4632.890 ±(99.9%) 4.770 ops/ms [Average]
  (min, avg, max) = (4631.690, 4632.890, 4634.433), stdev = 1.239
  CI (99.9%): [4628.119, 4637.660] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.alloc.rate":
  1835.425 ±(99.9%) 1.930 MB/sec [Average]
  (min, avg, max) = (1834.926, 1835.425, 1836.043), stdev = 0.501
  CI (99.9%): [1833.496, 1837.355] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.alloc.rate.norm":
  436.232 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (436.231, 436.232, 436.233), stdev = 0.001
  CI (99.9%): [436.230, 436.234] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space":
  1837.800 ±(99.9%) 118.850 MB/sec [Average]
  (min, avg, max) = (1803.978, 1837.800, 1860.361), stdev = 30.865
  CI (99.9%): [1718.950, 1956.650] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space.norm":
  436.796 ±(99.9%) 28.232 B/op [Average]
  (min, avg, max) = (428.669, 436.796, 442.269), stdev = 7.332
  CI (99.9%): [408.565, 465.028] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [≈ 10⁻³, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.002] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.count":
  163.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (32.000, 32.600, 33.000), stdev = 0.548
  CI (99.9%): [163.000, 163.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.time":
  111.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (20.000, 22.200, 26.000), stdev = 2.683
  CI (99.9%): [111.000, 111.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan
# Parameters: (transferSize = 1024)

# Run progress: 97.33% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: 4734.623 ops/ms
# Warmup Iteration   2: 4617.488 ops/ms
# Warmup Iteration   3: 4614.872 ops/ms
Iteration   1: 4615.601 ops/ms
                 ·gc.alloc.rate:                   1814.846 MB/sec
                 ·gc.alloc.rate.norm:              432.955 B/op
                 ·gc.churn.G1_Eden_Space:          1803.974 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     430.361 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         17.000 ms

Iteration   2: 4616.491 ops/ms
                 ·gc.alloc.rate:                   1815.199 MB/sec
                 ·gc.alloc.rate.norm:              432.954 B/op
                 ·gc.churn.G1_Eden_Space:          1804.000 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     430.283 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         20.000 ms

Iteration   3: 4616.705 ops/ms
                 ·gc.alloc.rate:                   1815.262 MB/sec
                 ·gc.alloc.rate.norm:              432.954 B/op
                 ·gc.churn.G1_Eden_Space:          1803.963 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     430.259 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         18.000 ms

Iteration   4: 4613.191 ops/ms
                 ·gc.alloc.rate:                   1813.886 MB/sec
                 ·gc.alloc.rate.norm:              432.954 B/op
                 ·gc.churn.G1_Eden_Space:          1860.340 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     444.042 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         20.000 ms

Iteration   5: 4610.066 ops/ms
                 ·gc.alloc.rate:                   1812.610 MB/sec
                 ·gc.alloc.rate.norm:              432.954 B/op
                 ·gc.churn.G1_Eden_Space:          1803.922 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     430.879 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         17.000 ms



Result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan":
  4614.411 ±(99.9%) 10.784 ops/ms [Average]
  (min, avg, max) = (4610.066, 4614.411, 4616.705), stdev = 2.801
  CI (99.9%): [4603.627, 4625.195] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.alloc.rate":
  1814.360 ±(99.9%) 4.322 MB/sec [Average]
  (min, avg, max) = (1812.610, 1814.360, 1815.262), stdev = 1.122
  CI (99.9%): [1810.039, 1818.682] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.alloc.rate.norm":
  432.954 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (432.954, 432.954, 432.955), stdev = 0.001
  CI (99.9%): [432.953, 432.956] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space":
  1815.240 ±(99.9%) 97.081 MB/sec [Average]
  (min, avg, max) = (1803.922, 1815.240, 1860.340), stdev = 25.212
  CI (99.9%): [1718.159, 1912.320] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space.norm":
  433.165 ±(99.9%) 23.435 B/op [Average]
  (min, avg, max) = (430.259, 433.165, 444.042), stdev = 6.086
  CI (99.9%): [409.730, 456.600] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.count":
  161.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (32.000, 32.200, 33.000), stdev = 0.447
  CI (99.9%): [161.000, 161.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.time":
  92.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (17.000, 18.400, 20.000), stdev = 1.517
  CI (99.9%): [92.000, 92.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan
# Parameters: (transferSize = 1048576)

# Run progress: 98.67% complete, ETA 00:01:24
# Fork: 1 of 1
# Warmup Iteration   1: 5251.118 ops/ms
# Warmup Iteration   2: 5150.813 ops/ms
# Warmup Iteration   3: 5106.394 ops/ms
Iteration   1: 5105.633 ops/ms
                 ·gc.alloc.rate:                   2005.649 MB/sec
                 ·gc.alloc.rate.norm:              432.545 B/op
                 ·gc.churn.G1_Eden_Space:          1973.142 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     425.534 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         19.000 ms

Iteration   2: 5106.561 ops/ms
                 ·gc.alloc.rate:                   2006.001 MB/sec
                 ·gc.alloc.rate.norm:              432.545 B/op
                 ·gc.churn.G1_Eden_Space:          2029.500 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     437.612 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         21.000 ms

Iteration   3: 5096.314 ops/ms
                 ·gc.alloc.rate:                   2001.948 MB/sec
                 ·gc.alloc.rate.norm:              432.544 B/op
                 ·gc.churn.G1_Eden_Space:          1973.087 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     426.308 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         21.000 ms

Iteration   4: 5103.023 ops/ms
                 ·gc.alloc.rate:                   2004.575 MB/sec
                 ·gc.alloc.rate.norm:              432.544 B/op
                 ·gc.churn.G1_Eden_Space:          2029.453 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     437.912 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         20.000 ms

Iteration   5: 5102.191 ops/ms
                 ·gc.alloc.rate:                   2004.261 MB/sec
                 ·gc.alloc.rate.norm:              432.544 B/op
                 ·gc.churn.G1_Eden_Space:          1973.093 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     425.817 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         26.000 ms



Result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan":
  5102.744 ±(99.9%) 15.480 ops/ms [Average]
  (min, avg, max) = (5096.314, 5102.744, 5106.561), stdev = 4.020
  CI (99.9%): [5087.264, 5118.224] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.alloc.rate":
  2004.487 ±(99.9%) 6.133 MB/sec [Average]
  (min, avg, max) = (2001.948, 2004.487, 2006.001), stdev = 1.593
  CI (99.9%): [1998.354, 2010.619] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.alloc.rate.norm":
  432.544 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (432.544, 432.544, 432.545), stdev = 0.001
  CI (99.9%): [432.543, 432.546] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space":
  1995.655 ±(99.9%) 118.888 MB/sec [Average]
  (min, avg, max) = (1973.087, 1995.655, 2029.500), stdev = 30.875
  CI (99.9%): [1876.767, 2114.543] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space.norm":
  430.637 ±(99.9%) 25.073 B/op [Average]
  (min, avg, max) = (425.534, 430.637, 437.912), stdev = 6.511
  CI (99.9%): [405.564, 455.709] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.004 MB/sec [Average]
  (min, avg, max) = (0.001, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 0, 0.001] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.count":
  177.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (35.000, 35.400, 36.000), stdev = 0.548
  CI (99.9%): [177.000, 177.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.time":
  107.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (19.000, 21.400, 26.000), stdev = 2.702
  CI (99.9%): [107.000, 107.000] (assumes normal distribution)


# Run complete. Total time: 01:45:18

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                      (charsetName)  (targetBufferSize)  (transferSize)   Mode  Cnt      Score        Error   Units
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII                 128             128  thrpt    5   5620.801 ±      7.477  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII                 128             128  thrpt    5   1388.505 ±      1.831  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII                 128             128  thrpt    5    272.011 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII                 128             128  thrpt    5   1386.780 ±    118.845  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII                 128             128  thrpt    5    271.673 ±     23.273    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII                 128             128  thrpt    5      0.003 ±      0.004  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII                 128             128  thrpt    5      0.001 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII                 128             128  thrpt    5    123.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII                 128             128  thrpt    5     85.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII                 128            1024  thrpt    5   6728.106 ±     21.353  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII                 128            1024  thrpt    5   2004.241 ±      6.367  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII                 128            1024  thrpt    5    328.013 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII                 128            1024  thrpt    5   2006.915 ±    118.840  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII                 128            1024  thrpt    5    328.452 ±     19.917    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII                 128            1024  thrpt    5      0.003 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII                 128            1024  thrpt    5     ≈ 10⁻³                 B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII                 128            1024  thrpt    5    178.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII                 128            1024  thrpt    5    111.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII                 128         1048576  thrpt    5   6482.011 ±     39.791  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII                 128         1048576  thrpt    5   1930.911 ±     11.780  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII                 128         1048576  thrpt    5    328.013 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII                 128         1048576  thrpt    5   1927.976 ±     97.187  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII                 128         1048576  thrpt    5    327.520 ±     18.457    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII                 128         1048576  thrpt    5      0.002 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII                 128         1048576  thrpt    5     ≈ 10⁻³                 B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII                 128         1048576  thrpt    5    171.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII                 128         1048576  thrpt    5    101.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII                1024             128  thrpt    5    903.205 ±      2.160  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII                1024             128  thrpt    5   1693.081 ±      4.024  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII                1024             128  thrpt    5   2064.080 ±      0.008    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII                1024             128  thrpt    5   1691.218 ±      0.088  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII                1024             128  thrpt    5   2061.810 ±      4.936    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII                1024             128  thrpt    5      0.003 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII                1024             128  thrpt    5      0.003 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII                1024             128  thrpt    5    150.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII                1024             128  thrpt    5    103.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII                1024            1024  thrpt    5   1364.383 ±      4.703  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII                1024            1024  thrpt    5   2557.557 ±      8.698  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII                1024            1024  thrpt    5   2064.078 ±      0.004    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII                1024            1024  thrpt    5   2559.363 ±    118.821  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII                1024            1024  thrpt    5   2065.542 ±     97.934    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII                1024            1024  thrpt    5      0.003 ±      0.007  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII                1024            1024  thrpt    5      0.003 ±      0.005    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII                1024            1024  thrpt    5    227.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII                1024            1024  thrpt    5    130.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII                1024         1048576  thrpt    5   1482.631 ±      3.983  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII                1024         1048576  thrpt    5   2779.244 ±      7.511  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII                1024         1048576  thrpt    5   2064.078 ±      0.007    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII                1024         1048576  thrpt    5   2784.891 ±    118.964  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII                1024         1048576  thrpt    5   2068.274 ±     89.100    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII                1024         1048576  thrpt    5      0.003 ±      0.003  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII                1024         1048576  thrpt    5      0.002 ±      0.002    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII                1024         1048576  thrpt    5    247.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII                1024         1048576  thrpt    5    143.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII             1048576             128  thrpt    5      1.013 ±      0.012  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII             1048576             128  thrpt    5     21.678 ±      0.256  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII             1048576             128  thrpt    5  23569.094 ±      5.552    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII             1048576             128  thrpt    5     22.548 ±    118.887  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII             1048576             128  thrpt    5  24572.295 ± 129562.724    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII             1048576             128  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII             1048576             128  thrpt    5      0.329 ±      2.836    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII             1048576             128  thrpt    5      2.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII             1048576             128  thrpt    5      3.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII             1048576            1024  thrpt    5      1.157 ±      0.015  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII             1048576            1024  thrpt    5     24.763 ±      0.311  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII             1048576            1024  thrpt    5  23569.418 ±      4.857    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII             1048576            1024  thrpt    5     33.822 ±    118.890  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII             1048576            1024  thrpt    5  32227.945 ± 113287.355    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII             1048576            1024  thrpt    5      0.001 ±      0.011  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII             1048576            1024  thrpt    5      1.211 ±     10.426    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII             1048576            1024  thrpt    5      3.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII             1048576            1024  thrpt    5      5.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII             1048576         1048576  thrpt    5      1.652 ±      0.005  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII             1048576         1048576  thrpt    5     35.367 ±      0.107  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII             1048576         1048576  thrpt    5  23568.994 ±      3.400    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII             1048576         1048576  thrpt    5     33.823 ±    118.893  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII             1048576         1048576  thrpt    5  22550.666 ±  79268.801    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII             1048576         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII             1048576         1048576  thrpt    5      0.187 ±      1.609    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII             1048576         1048576  thrpt    5      3.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII             1048576         1048576  thrpt    5      5.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1                 128             128  thrpt    5   5743.963 ±     18.835  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1                 128             128  thrpt    5   1711.072 ±      5.620  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1                 128             128  thrpt    5    328.013 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1                 128             128  thrpt    5   1713.768 ±    118.940  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1                 128             128  thrpt    5    328.530 ±     22.921    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1                 128             128  thrpt    5      0.003 ±      0.003  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1                 128             128  thrpt    5      0.001 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1                 128             128  thrpt    5    152.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1                 128             128  thrpt    5    100.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1                 128            1024  thrpt    5   6605.945 ±     18.832  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1                 128            1024  thrpt    5   1967.842 ±      5.621  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1                 128            1024  thrpt    5    328.013 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1                 128            1024  thrpt    5   1973.084 ±      0.065  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1                 128            1024  thrpt    5    328.887 ±      0.943    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1                 128            1024  thrpt    5      0.003 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1                 128            1024  thrpt    5     ≈ 10⁻³                 B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1                 128            1024  thrpt    5    175.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1                 128            1024  thrpt    5    108.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1                 128         1048576  thrpt    5   6712.637 ±      8.214  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1                 128         1048576  thrpt    5   1658.221 ±      2.025  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1                 128         1048576  thrpt    5    272.011 ±      0.002    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1                 128         1048576  thrpt    5   1657.371 ±    118.828  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1                 128         1048576  thrpt    5    271.870 ±     19.232    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1                 128         1048576  thrpt    5      0.003 ±      0.003  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1                 128         1048576  thrpt    5      0.001 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1                 128         1048576  thrpt    5    147.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1                 128         1048576  thrpt    5     97.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1                1024             128  thrpt    5    843.997 ±      3.097  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1                1024             128  thrpt    5   1625.021 ±      5.957  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1                1024             128  thrpt    5   2120.083 ±      0.008    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1                1024             128  thrpt    5   1634.845 ±      0.063  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1                1024             128  thrpt    5   2132.902 ±      7.855    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1                1024             128  thrpt    5      0.003 ±      0.005  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1                1024             128  thrpt    5      0.004 ±      0.006    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1                1024             128  thrpt    5    145.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1                1024             128  thrpt    5    103.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1                1024            1024  thrpt    5   1543.876 ±      4.866  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1                1024            1024  thrpt    5   2972.554 ±      9.470  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1                1024            1024  thrpt    5   2120.080 ±      0.005    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1                1024            1024  thrpt    5   2976.551 ±     97.249  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1                1024            1024  thrpt    5   2122.922 ±     63.873    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1                1024            1024  thrpt    5      0.004 ±      0.008  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1                1024            1024  thrpt    5      0.003 ±      0.005    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1                1024            1024  thrpt    5    264.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1                1024            1024  thrpt    5    148.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1                1024         1048576  thrpt    5   1585.971 ±      9.042  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1                1024         1048576  thrpt    5   3053.559 ±     17.249  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1                1024         1048576  thrpt    5   2120.080 ±      0.004    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1                1024         1048576  thrpt    5   3055.422 ±     96.808  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1                1024         1048576  thrpt    5   2121.364 ±     60.433    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1                1024         1048576  thrpt    5      0.003 ±      0.003  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1                1024         1048576  thrpt    5      0.002 ±      0.002    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1                1024         1048576  thrpt    5    271.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1                1024         1048576  thrpt    5    150.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1             1048576             128  thrpt    5      0.998 ±      0.044  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1             1048576             128  thrpt    5     21.356 ±      0.936  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1             1048576             128  thrpt    5  23569.108 ±      5.620    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1             1048576             128  thrpt    5     22.548 ±    118.890  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1             1048576             128  thrpt    5  24858.464 ± 131080.671    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1             1048576             128  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1             1048576             128  thrpt    5      0.190 ±      1.632    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1             1048576             128  thrpt    5      2.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1             1048576             128  thrpt    5      3.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1             1048576            1024  thrpt    5      1.469 ±      0.013  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1             1048576            1024  thrpt    5     31.452 ±      0.284  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1             1048576            1024  thrpt    5  23569.117 ±      3.814    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1             1048576            1024  thrpt    5     33.823 ±    118.892  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1             1048576            1024  thrpt    5  25356.647 ±  89132.525    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1             1048576            1024  thrpt    5      0.002 ±      0.008  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1             1048576            1024  thrpt    5      1.133 ±      6.000    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1             1048576            1024  thrpt    5      3.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1             1048576            1024  thrpt    5      5.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1             1048576         1048576  thrpt    5      2.221 ±      0.029  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1             1048576         1048576  thrpt    5     33.087 ±      0.438  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1             1048576         1048576  thrpt    5  16400.737 ±      2.519    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1             1048576         1048576  thrpt    5     33.823 ±    118.893  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1             1048576         1048576  thrpt    5  16736.129 ±  58830.398    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1             1048576         1048576  thrpt    5      0.001 ±      0.005  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1             1048576         1048576  thrpt    5      0.422 ±      2.693    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1             1048576         1048576  thrpt    5      3.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1             1048576         1048576  thrpt    5      5.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8                 128             128  thrpt    5   5878.243 ±      9.474  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8                 128             128  thrpt    5   1751.066 ±      2.758  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8                 128             128  thrpt    5    328.013 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8                 128             128  thrpt    5   1747.592 ±      0.086  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8                 128             128  thrpt    5    327.362 ±      0.528    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8                 128             128  thrpt    5      0.002 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8                 128             128  thrpt    5     ≈ 10⁻³                 B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8                 128             128  thrpt    5    155.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8                 128             128  thrpt    5    101.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8                 128            1024  thrpt    5   6375.638 ±     26.611  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8                 128            1024  thrpt    5   1899.246 ±      7.922  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8                 128            1024  thrpt    5    328.013 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8                 128            1024  thrpt    5   1905.446 ±     97.074  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8                 128            1024  thrpt    5    329.085 ±     17.100    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8                 128            1024  thrpt    5      0.003 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8                 128            1024  thrpt    5      0.001 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8                 128            1024  thrpt    5    169.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8                 128            1024  thrpt    5    120.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8                 128         1048576  thrpt    5   6266.525 ±     18.760  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8                 128         1048576  thrpt    5   1866.734 ±      5.603  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8                 128         1048576  thrpt    5    328.013 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8                 128         1048576  thrpt    5   1860.336 ±      0.062  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8                 128         1048576  thrpt    5    326.889 ±      0.975    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8                 128         1048576  thrpt    5      0.003 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8                 128         1048576  thrpt    5     ≈ 10⁻³                 B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8                 128         1048576  thrpt    5    165.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8                 128         1048576  thrpt    5    108.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8                1024             128  thrpt    5   1112.519 ±      5.962  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8                1024             128  thrpt    5   2142.010 ±     11.413  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8                1024             128  thrpt    5   2120.081 ±      0.007    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8                1024             128  thrpt    5   2142.189 ±    153.366  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8                1024             128  thrpt    5   2120.226 ±    142.551    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8                1024             128  thrpt    5      0.003 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8                1024             128  thrpt    5      0.003 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8                1024             128  thrpt    5    190.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8                1024             128  thrpt    5    130.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8                1024            1024  thrpt    5   1473.905 ±      8.460  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8                1024            1024  thrpt    5   2837.862 ±     16.311  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8                1024            1024  thrpt    5   2120.080 ±      0.007    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8                1024            1024  thrpt    5   2841.285 ±    118.942  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8                1024            1024  thrpt    5   2122.639 ±     88.321    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8                1024            1024  thrpt    5      0.003 ±      0.004  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8                1024            1024  thrpt    5      0.003 ±      0.003    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8                1024            1024  thrpt    5    252.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8                1024            1024  thrpt    5    147.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8                1024         1048576  thrpt    5   1435.038 ±      8.727  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8                1024         1048576  thrpt    5   2762.999 ±     16.855  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8                1024         1048576  thrpt    5   2120.080 ±      0.007    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8                1024         1048576  thrpt    5   2773.596 ±     97.103  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8                1024         1048576  thrpt    5   2128.211 ±     72.933    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8                1024         1048576  thrpt    5      0.003 ±      0.004  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8                1024         1048576  thrpt    5      0.002 ±      0.003    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8                1024         1048576  thrpt    5    246.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8                1024         1048576  thrpt    5    142.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8             1048576             128  thrpt    5      1.397 ±      0.004  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8             1048576             128  thrpt    5     29.909 ±      0.076  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8             1048576             128  thrpt    5  23568.794 ±      4.010    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8             1048576             128  thrpt    5     22.549 ±    118.893  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8             1048576             128  thrpt    5  17775.910 ±  93727.242    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8             1048576             128  thrpt    5      0.002 ±      0.021  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8             1048576             128  thrpt    5      1.938 ±     16.687    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8             1048576             128  thrpt    5      2.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8             1048576             128  thrpt    5      4.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8             1048576            1024  thrpt    5      1.985 ±      0.011  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8             1048576            1024  thrpt    5     42.479 ±      0.241  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8             1048576            1024  thrpt    5  23569.094 ±      2.306    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8             1048576            1024  thrpt    5     45.098 ±     97.076  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8             1048576            1024  thrpt    5  25009.748 ±  53835.497    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8             1048576            1024  thrpt    5      4.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8             1048576            1024  thrpt    5      7.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8             1048576         1048576  thrpt    5      1.909 ±      0.015  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8             1048576         1048576  thrpt    5     40.868 ±      0.332  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8             1048576         1048576  thrpt    5  23569.139 ±      2.401    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8             1048576         1048576  thrpt    5     45.096 ±     97.073  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8             1048576         1048576  thrpt    5  25997.664 ±  55962.432    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8             1048576         1048576  thrpt    5      0.001 ±      0.005  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8             1048576         1048576  thrpt    5      0.614 ±      3.177    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8             1048576         1048576  thrpt    5      4.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8             1048576         1048576  thrpt    5      7.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII                 128             128  thrpt    5   9003.315 ±     15.152  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII                 128             128  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII                 128             128  thrpt    5     ≈ 10⁻⁵                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII                 128             128  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII                 128            1024  thrpt    5  11634.417 ±     28.256  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII                 128            1024  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII                 128            1024  thrpt    5     ≈ 10⁻⁵                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII                 128            1024  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII                 128         1048576  thrpt    5  10999.747 ±     63.573  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII                 128         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII                 128         1048576  thrpt    5     ≈ 10⁻⁵                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII                 128         1048576  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII                1024             128  thrpt    5    983.352 ±     70.206  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII                1024             128  thrpt    5     50.013 ±      3.569  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII                1024             128  thrpt    5     56.003 ±      0.001    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                  US-ASCII                1024             128  thrpt    5     56.374 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm             US-ASCII                1024             128  thrpt    5     63.144 ±      4.592    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space              US-ASCII                1024             128  thrpt    5      0.002 ±      0.013  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm         US-ASCII                1024             128  thrpt    5      0.002 ±      0.014    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII                1024             128  thrpt    5      5.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                 US-ASCII                1024             128  thrpt    5      8.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII                1024            1024  thrpt    5   1764.532 ±    347.986  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII                1024            1024  thrpt    5     89.743 ±     17.702  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII                1024            1024  thrpt    5     56.002 ±      0.003    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                  US-ASCII                1024            1024  thrpt    5     90.198 ±    118.900  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm             US-ASCII                1024            1024  thrpt    5     56.376 ±     75.061    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space              US-ASCII                1024            1024  thrpt    5      0.002 ±      0.011  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm         US-ASCII                1024            1024  thrpt    5      0.001 ±      0.007    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII                1024            1024  thrpt    5      8.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                 US-ASCII                1024            1024  thrpt    5     13.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII                1024         1048576  thrpt    5   1973.965 ±      3.109  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII                1024         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII                1024         1048576  thrpt    5     ≈ 10⁻⁵                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII                1024         1048576  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII             1048576             128  thrpt    5      1.079 ±      0.002  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII             1048576             128  thrpt    5      0.055 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII             1048576             128  thrpt    5     56.041 ±      0.001    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII             1048576             128  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII             1048576            1024  thrpt    5      1.148 ±      0.002  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII             1048576            1024  thrpt    5      0.058 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII             1048576            1024  thrpt    5     56.038 ±      0.005    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII             1048576            1024  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII             1048576         1048576  thrpt    5      1.556 ±      0.002  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII             1048576         1048576  thrpt    5      0.079 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII             1048576         1048576  thrpt    5     56.028 ±      0.010    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII             1048576         1048576  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1                 128             128  thrpt    5  10366.699 ±     16.616  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1                 128             128  thrpt    5    527.242 ±      0.847  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1                 128             128  thrpt    5     56.002 ±      0.001    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                ISO-8859-1                 128             128  thrpt    5    518.638 ±     97.085  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm           ISO-8859-1                 128             128  thrpt    5     55.089 ±     10.336    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space            ISO-8859-1                 128             128  thrpt    5      0.001 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm       ISO-8859-1                 128             128  thrpt    5     ≈ 10⁻⁴                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1                 128             128  thrpt    5     46.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                               ISO-8859-1                 128             128  thrpt    5     34.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1                 128            1024  thrpt    5  13233.975 ±     28.811  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1                 128            1024  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1                 128            1024  thrpt    5     ≈ 10⁻⁵                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1                 128            1024  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1                 128         1048576  thrpt    5  13478.103 ±     37.189  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1                 128         1048576  thrpt    5    685.480 ±      1.889  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1                 128         1048576  thrpt    5     56.002 ±      0.001    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                ISO-8859-1                 128         1048576  thrpt    5    687.755 ±     97.064  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm           ISO-8859-1                 128         1048576  thrpt    5     56.189 ±      8.088    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space            ISO-8859-1                 128         1048576  thrpt    5      0.002 ±      0.003  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm       ISO-8859-1                 128         1048576  thrpt    5     ≈ 10⁻⁴                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1                 128         1048576  thrpt    5     61.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                               ISO-8859-1                 128         1048576  thrpt    5     45.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1                1024             128  thrpt    5   1020.739 ±      2.172  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1                1024             128  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1                1024             128  thrpt    5     ≈ 10⁻⁴                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1                1024             128  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1                1024            1024  thrpt    5   2486.737 ±      4.374  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1                1024            1024  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1                1024            1024  thrpt    5     ≈ 10⁻⁵                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1                1024            1024  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1                1024         1048576  thrpt    5   2612.501 ±      2.243  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1                1024         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1                1024         1048576  thrpt    5     ≈ 10⁻⁵                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1                1024         1048576  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1             1048576             128  thrpt    5      1.194 ±      0.003  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1             1048576             128  thrpt    5      0.061 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1             1048576             128  thrpt    5     56.036 ±      0.009    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1             1048576             128  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1             1048576            1024  thrpt    5      1.496 ±      0.002  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1             1048576            1024  thrpt    5      0.076 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1             1048576            1024  thrpt    5     56.029 ±      0.012    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1             1048576            1024  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1             1048576         1048576  thrpt    5      1.550 ±      0.002  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1             1048576         1048576  thrpt    5      0.079 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1             1048576         1048576  thrpt    5     56.030 ±      0.013    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1             1048576         1048576  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8                 128             128  thrpt    5   9660.783 ±     16.801  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8                 128             128  thrpt    5    491.337 ±      0.842  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8                 128             128  thrpt    5     56.002 ±      0.001    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                     UTF-8                 128             128  thrpt    5    496.085 ±     97.091  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm                UTF-8                 128             128  thrpt    5     56.544 ±     11.110    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space                 UTF-8                 128             128  thrpt    5      0.001 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm            UTF-8                 128             128  thrpt    5     ≈ 10⁻⁴                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8                 128             128  thrpt    5     44.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                    UTF-8                 128             128  thrpt    5     38.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8                 128            1024  thrpt    5  11308.819 ±     22.424  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8                 128            1024  thrpt    5    575.153 ±      1.137  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8                 128            1024  thrpt    5     56.002 ±      0.001    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                     UTF-8                 128            1024  thrpt    5    575.006 ±     97.066  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm                UTF-8                 128            1024  thrpt    5     55.988 ±      9.440    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space                 UTF-8                 128            1024  thrpt    5      0.001 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm            UTF-8                 128            1024  thrpt    5     ≈ 10⁻⁴                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8                 128            1024  thrpt    5     51.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                    UTF-8                 128            1024  thrpt    5     34.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8                 128         1048576  thrpt    5  10664.925 ±     27.171  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8                 128         1048576  thrpt    5    542.409 ±      1.380  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8                 128         1048576  thrpt    5     56.002 ±      0.001    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                     UTF-8                 128         1048576  thrpt    5    541.187 ±    118.877  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm                UTF-8                 128         1048576  thrpt    5     55.876 ±     12.227    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space                 UTF-8                 128         1048576  thrpt    5      0.001 ±      0.003  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm            UTF-8                 128         1048576  thrpt    5     ≈ 10⁻⁴                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8                 128         1048576  thrpt    5     48.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                    UTF-8                 128         1048576  thrpt    5     33.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8                1024             128  thrpt    5   1548.256 ±     75.731  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8                1024             128  thrpt    5     78.743 ±      3.854  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8                1024             128  thrpt    5     56.002 ±      0.004    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                     UTF-8                1024             128  thrpt    5     78.923 ±    118.900  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm                UTF-8                1024             128  thrpt    5     56.036 ±     83.159    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space                 UTF-8                1024             128  thrpt    5      0.002 ±      0.010  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm            UTF-8                1024             128  thrpt    5      0.001 ±      0.007    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8                1024             128  thrpt    5      7.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                    UTF-8                1024             128  thrpt    5     12.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8                1024            1024  thrpt    5   2368.975 ±     23.532  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8                1024            1024  thrpt    5    120.484 ±      1.199  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8                1024            1024  thrpt    5     56.003 ±      0.003    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                     UTF-8                1024            1024  thrpt    5    112.747 ±      0.009  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm                UTF-8                1024            1024  thrpt    5     52.407 ±      0.520    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space                 UTF-8                1024            1024  thrpt    5      0.034 ±      0.217  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm            UTF-8                1024            1024  thrpt    5      0.016 ±      0.101    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8                1024            1024  thrpt    5     10.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                    UTF-8                1024            1024  thrpt    5     15.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8                1024         1048576  thrpt    5   2181.342 ±      6.887  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8                1024         1048576  thrpt    5    110.942 ±      0.357  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8                1024         1048576  thrpt    5     56.003 ±      0.003    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                     UTF-8                1024         1048576  thrpt    5    112.747 ±      0.008  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm                UTF-8                1024         1048576  thrpt    5     56.914 ±      0.179    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space                 UTF-8                1024         1048576  thrpt    5      0.033 ±      0.261  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm            UTF-8                1024         1048576  thrpt    5      0.016 ±      0.132    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8                1024         1048576  thrpt    5     10.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                    UTF-8                1024         1048576  thrpt    5     15.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8             1048576             128  thrpt    5      1.621 ±      0.007  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8             1048576             128  thrpt    5      0.082 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8             1048576             128  thrpt    5     56.028 ±      0.012    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8             1048576             128  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8             1048576            1024  thrpt    5      2.448 ±      0.008  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8             1048576            1024  thrpt    5      0.125 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8             1048576            1024  thrpt    5     56.019 ±      0.008    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8             1048576            1024  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8             1048576         1048576  thrpt    5      2.040 ±      0.006  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8             1048576         1048576  thrpt    5      0.104 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8             1048576         1048576  thrpt    5     56.023 ±      0.012    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8             1048576         1048576  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readDirectBuffer                                                        N/A                 128             128  thrpt    5  13259.655 ±     30.135  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A                 128             128  thrpt    5   3275.556 ±      7.434  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A                 128             128  thrpt    5    272.010 ±      0.001    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A                 128             128  thrpt    5   3280.975 ±     97.015  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A                 128             128  thrpt    5    272.460 ±      7.786    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A                 128             128  thrpt    5      0.004 ±      0.006  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A                 128             128  thrpt    5     ≈ 10⁻³                 B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A                 128             128  thrpt    5    291.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A                 128             128  thrpt    5    165.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A                 128            1024  thrpt    5  12851.993 ±   1191.242  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A                 128            1024  thrpt    5   3174.860 ±    294.292  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A                 128            1024  thrpt    5    272.010 ±      0.001    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A                 128            1024  thrpt    5   3179.526 ±    291.256  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A                 128            1024  thrpt    5    272.418 ±      7.686    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A                 128            1024  thrpt    5      0.003 ±      0.002  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A                 128            1024  thrpt    5     ≈ 10⁻⁴                 B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A                 128            1024  thrpt    5    282.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A                 128            1024  thrpt    5    165.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A                 128         1048576  thrpt    5  13274.075 ±     29.763  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A                 128         1048576  thrpt    5   3279.118 ±      7.385  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A                 128         1048576  thrpt    5    272.010 ±      0.001    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A                 128         1048576  thrpt    5   3280.984 ±     97.119  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A                 128         1048576  thrpt    5    272.165 ±      8.259    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A                 128         1048576  thrpt    5      0.004 ±      0.004  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A                 128         1048576  thrpt    5     ≈ 10⁻⁴                 B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A                 128         1048576  thrpt    5    291.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A                 128         1048576  thrpt    5    153.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A                1024             128  thrpt    5   1652.439 ±     14.640  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A                1024             128  thrpt    5   3097.547 ±     27.455  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A                1024             128  thrpt    5   2064.077 ±      0.002    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A                1024             128  thrpt    5   3089.296 ±     97.119  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A                1024             128  thrpt    5   2058.558 ±     47.658    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A                1024             128  thrpt    5      0.003 ±      0.004  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A                1024             128  thrpt    5      0.002 ±      0.003    B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A                1024             128  thrpt    5    274.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A                1024             128  thrpt    5    165.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A                1024            1024  thrpt    5   3788.967 ±     22.629  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A                1024            1024  thrpt    5   7102.419 ±     42.251  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A                1024            1024  thrpt    5   2064.050 ±      0.001    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A                1024            1024  thrpt    5   7104.029 ±    149.472  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A                1024            1024  thrpt    5   2064.509 ±     32.402    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A                1024            1024  thrpt    5      0.005 ±      0.009  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A                1024            1024  thrpt    5      0.001 ±      0.003    B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A                1024            1024  thrpt    5    409.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A                1024            1024  thrpt    5    224.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A                1024         1048576  thrpt    5   3824.108 ±      7.928  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A                1024         1048576  thrpt    5   7168.325 ±     14.694  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A                1024         1048576  thrpt    5   2064.052 ±      0.001    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A                1024         1048576  thrpt    5   7173.213 ±    176.791  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A                1024         1048576  thrpt    5   2065.460 ±     51.407    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A                1024         1048576  thrpt    5      0.005 ±      0.010  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A                1024         1048576  thrpt    5      0.001 ±      0.003    B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A                1024         1048576  thrpt    5    428.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A                1024         1048576  thrpt    5    236.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A             1048576             128  thrpt    5      2.269 ±      0.021  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A             1048576             128  thrpt    5     33.799 ±      0.318  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A             1048576             128  thrpt    5  16400.723 ±      2.465    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A             1048576             128  thrpt    5     33.823 ±    118.893  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A             1048576             128  thrpt    5  16411.600 ±  57689.395    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A             1048576             128  thrpt    5      0.002 ±      0.014  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A             1048576             128  thrpt    5      0.781 ±      6.726    B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A             1048576             128  thrpt    5      3.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A             1048576             128  thrpt    5      5.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A             1048576            1024  thrpt    5      7.146 ±      0.034  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A             1048576            1024  thrpt    5    106.434 ±      0.508  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A             1048576            1024  thrpt    5  16400.770 ±      1.168    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A             1048576            1024  thrpt    5    101.471 ±     97.075  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A             1048576            1024  thrpt    5  15635.343 ±  14949.688    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A             1048576            1024  thrpt    5      0.069 ±      0.580  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A             1048576            1024  thrpt    5     10.702 ±     89.495    B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A             1048576            1024  thrpt    5      9.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A             1048576            1024  thrpt    5     14.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A             1048576         1048576  thrpt    5      9.358 ±      0.071  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A             1048576         1048576  thrpt    5    139.381 ±      1.037  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A             1048576         1048576  thrpt    5  16400.758 ±      0.664    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A             1048576         1048576  thrpt    5    135.293 ±    118.883  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A             1048576         1048576  thrpt    5  15921.775 ±  14036.037    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A             1048576         1048576  thrpt    5      0.070 ±      0.581  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A             1048576         1048576  thrpt    5      8.229 ±     68.390    B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A             1048576         1048576  thrpt    5     12.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A             1048576         1048576  thrpt    5     16.000                   ms
ReaderBenchmarks.readHeapBuffer                                                          N/A                 128             128  thrpt    5  76986.815 ±    399.528  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A                 128             128  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A                 128             128  thrpt    5     ≈ 10⁻⁶                 B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A                 128             128  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A                 128            1024  thrpt    5  76841.469 ±    460.719  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A                 128            1024  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A                 128            1024  thrpt    5     ≈ 10⁻⁶                 B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A                 128            1024  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A                 128         1048576  thrpt    5  77035.027 ±    181.705  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A                 128         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A                 128         1048576  thrpt    5     ≈ 10⁻⁶                 B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A                 128         1048576  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A                1024             128  thrpt    5   9233.681 ±     36.234  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A                1024             128  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A                1024             128  thrpt    5     ≈ 10⁻⁵                 B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A                1024             128  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A                1024            1024  thrpt    5  36901.621 ±    130.410  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A                1024            1024  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A                1024            1024  thrpt    5     ≈ 10⁻⁶                 B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A                1024            1024  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A                1024         1048576  thrpt    5  37140.896 ±    295.599  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A                1024         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A                1024         1048576  thrpt    5     ≈ 10⁻⁶                 B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A                1024         1048576  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A             1048576             128  thrpt    5      9.567 ±      0.015  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A             1048576             128  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A             1048576             128  thrpt    5      0.004 ±      0.001    B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A             1048576             128  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A             1048576            1024  thrpt    5     16.582 ±      0.013  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A             1048576            1024  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A             1048576            1024  thrpt    5      0.003 ±      0.001    B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A             1048576            1024  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A             1048576         1048576  thrpt    5     18.746 ±      0.037  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A             1048576         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A             1048576         1048576  thrpt    5      0.002 ±      0.001    B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A             1048576         1048576  thrpt    5        ≈ 0               counts
ScannerBenchmarks.scan                                                                   N/A                 N/A             128  thrpt    5   4632.890 ±      4.770  ops/ms
ScannerBenchmarks.scan:·gc.alloc.rate                                                    N/A                 N/A             128  thrpt    5   1835.425 ±      1.930  MB/sec
ScannerBenchmarks.scan:·gc.alloc.rate.norm                                               N/A                 N/A             128  thrpt    5    436.232 ±      0.002    B/op
ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space                                           N/A                 N/A             128  thrpt    5   1837.800 ±    118.850  MB/sec
ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space.norm                                      N/A                 N/A             128  thrpt    5    436.796 ±     28.232    B/op
ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space                                       N/A                 N/A             128  thrpt    5      0.004 ±      0.003  MB/sec
ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space.norm                                  N/A                 N/A             128  thrpt    5      0.001 ±      0.001    B/op
ScannerBenchmarks.scan:·gc.count                                                         N/A                 N/A             128  thrpt    5    163.000               counts
ScannerBenchmarks.scan:·gc.time                                                          N/A                 N/A             128  thrpt    5    111.000                   ms
ScannerBenchmarks.scan                                                                   N/A                 N/A            1024  thrpt    5   4614.411 ±     10.784  ops/ms
ScannerBenchmarks.scan:·gc.alloc.rate                                                    N/A                 N/A            1024  thrpt    5   1814.360 ±      4.322  MB/sec
ScannerBenchmarks.scan:·gc.alloc.rate.norm                                               N/A                 N/A            1024  thrpt    5    432.954 ±      0.001    B/op
ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space                                           N/A                 N/A            1024  thrpt    5   1815.240 ±     97.081  MB/sec
ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space.norm                                      N/A                 N/A            1024  thrpt    5    433.165 ±     23.435    B/op
ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space                                       N/A                 N/A            1024  thrpt    5      0.003 ±      0.002  MB/sec
ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space.norm                                  N/A                 N/A            1024  thrpt    5      0.001 ±      0.001    B/op
ScannerBenchmarks.scan:·gc.count                                                         N/A                 N/A            1024  thrpt    5    161.000               counts
ScannerBenchmarks.scan:·gc.time                                                          N/A                 N/A            1024  thrpt    5     92.000                   ms
ScannerBenchmarks.scan                                                                   N/A                 N/A         1048576  thrpt    5   5102.744 ±     15.480  ops/ms
ScannerBenchmarks.scan:·gc.alloc.rate                                                    N/A                 N/A         1048576  thrpt    5   2004.487 ±      6.133  MB/sec
ScannerBenchmarks.scan:·gc.alloc.rate.norm                                               N/A                 N/A         1048576  thrpt    5    432.544 ±      0.002    B/op
ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space                                           N/A                 N/A         1048576  thrpt    5   1995.655 ±    118.888  MB/sec
ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space.norm                                      N/A                 N/A         1048576  thrpt    5    430.637 ±     25.073    B/op
ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space                                       N/A                 N/A         1048576  thrpt    5      0.003 ±      0.004  MB/sec
ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space.norm                                  N/A                 N/A         1048576  thrpt    5      0.001 ±      0.001    B/op
ScannerBenchmarks.scan:·gc.count                                                         N/A                 N/A         1048576  thrpt    5    177.000               counts
ScannerBenchmarks.scan:·gc.time                                                          N/A                 N/A         1048576  thrpt    5    107.000                   ms

Benchmark result is saved to jmh-result.csv

# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 128, transferSize = 128)

# Run progress: 0.00% complete, ETA 01:40:00
# Fork: 1 of 1
# Warmup Iteration   1: 5507.927 ops/ms
# Warmup Iteration   2: 5629.275 ops/ms
# Warmup Iteration   3: 5513.480 ops/ms
Iteration   1: 5519.642 ops/ms
                 ·gc.alloc.rate:                   1363.526 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1409.356 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     281.154 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         19.000 ms

Iteration   2: 5512.382 ops/ms
                 ·gc.alloc.rate:                   1361.741 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1352.996 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     270.264 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         18.000 ms

Iteration   3: 5522.013 ops/ms
                 ·gc.alloc.rate:                   1364.099 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1352.970 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     269.792 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         16.000 ms

Iteration   4: 5506.655 ops/ms
                 ·gc.alloc.rate:                   1360.311 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1352.975 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     270.544 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         15.000 ms

Iteration   5: 5522.426 ops/ms
                 ·gc.alloc.rate:                   1364.164 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          1352.929 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     269.770 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         13.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  5516.624 ±(99.9%) 26.483 ops/ms [Average]
  (min, avg, max) = (5506.655, 5516.624, 5522.426), stdev = 6.878
  CI (99.9%): [5490.140, 5543.107] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1362.768 ±(99.9%) 6.497 MB/sec [Average]
  (min, avg, max) = (1360.311, 1362.768, 1364.164), stdev = 1.687
  CI (99.9%): [1356.272, 1369.265] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  272.011 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (272.010, 272.011, 272.011), stdev = 0.001
  CI (99.9%): [272.009, 272.012] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1364.245 ±(99.9%) 97.103 MB/sec [Average]
  (min, avg, max) = (1352.929, 1364.245, 1409.356), stdev = 25.217
  CI (99.9%): [1267.142, 1461.349] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  272.305 ±(99.9%) 19.090 B/op [Average]
  (min, avg, max) = (269.770, 272.305, 281.154), stdev = 4.958
  CI (99.9%): [253.214, 291.395] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 10⁻³, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  121.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (24.000, 24.200, 25.000), stdev = 0.447
  CI (99.9%): [121.000, 121.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  81.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (13.000, 16.200, 19.000), stdev = 2.387
  CI (99.9%): [81.000, 81.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 128, transferSize = 1024)

# Run progress: 1.33% complete, ETA 01:43:55
# Fork: 1 of 1
# Warmup Iteration   1: 6572.989 ops/ms
# Warmup Iteration   2: 6770.468 ops/ms
# Warmup Iteration   3: 6758.650 ops/ms
Iteration   1: 6747.060 ops/ms
                 ·gc.alloc.rate:                   2009.901 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1973.104 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     322.008 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         21.000 ms

Iteration   2: 6757.621 ops/ms
                 ·gc.alloc.rate:                   2013.048 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          2029.491 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     330.692 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         21.000 ms

Iteration   3: 6755.363 ops/ms
                 ·gc.alloc.rate:                   2012.338 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          2029.441 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     330.800 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 6756.674 ops/ms
                 ·gc.alloc.rate:                   2012.753 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          2029.466 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     330.736 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         21.000 ms

Iteration   5: 6753.124 ops/ms
                 ·gc.alloc.rate:                   2011.686 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1973.085 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     321.718 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         30.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  6753.969 ±(99.9%) 16.228 ops/ms [Average]
  (min, avg, max) = (6747.060, 6753.969, 6757.621), stdev = 4.214
  CI (99.9%): [6737.741, 6770.197] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  2011.945 ±(99.9%) 4.821 MB/sec [Average]
  (min, avg, max) = (2009.901, 2011.945, 2013.048), stdev = 1.252
  CI (99.9%): [2007.124, 2016.766] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  328.013 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (328.012, 328.013, 328.013), stdev = 0.001
  CI (99.9%): [328.011, 328.014] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  2006.918 ±(99.9%) 118.892 MB/sec [Average]
  (min, avg, max) = (1973.085, 2006.918, 2029.491), stdev = 30.876
  CI (99.9%): [1888.025, 2125.810] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  327.191 ±(99.9%) 18.733 B/op [Average]
  (min, avg, max) = (321.718, 327.191, 330.800), stdev = 4.865
  CI (99.9%): [308.457, 345.924] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.001, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  178.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (35.000, 35.600, 36.000), stdev = 0.548
  CI (99.9%): [178.000, 178.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  113.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (20.000, 22.600, 30.000), stdev = 4.159
  CI (99.9%): [113.000, 113.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 128, transferSize = 1048576)

# Run progress: 2.67% complete, ETA 01:42:31
# Fork: 1 of 1
# Warmup Iteration   1: 6395.161 ops/ms
# Warmup Iteration   2: 6510.734 ops/ms
# Warmup Iteration   3: 6527.952 ops/ms
Iteration   1: 6521.681 ops/ms
                 ·gc.alloc.rate:                   1942.787 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1973.148 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     333.139 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         19.000 ms

Iteration   2: 6524.238 ops/ms
                 ·gc.alloc.rate:                   1943.503 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1916.723 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     323.493 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         19.000 ms

Iteration   3: 6527.241 ops/ms
                 ·gc.alloc.rate:                   1944.398 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1973.087 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     332.852 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 6525.237 ops/ms
                 ·gc.alloc.rate:                   1943.790 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1916.708 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     323.442 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         17.000 ms

Iteration   5: 6527.239 ops/ms
                 ·gc.alloc.rate:                   1944.384 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1973.075 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     332.853 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         20.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  6525.127 ±(99.9%) 8.950 ops/ms [Average]
  (min, avg, max) = (6521.681, 6525.127, 6527.241), stdev = 2.324
  CI (99.9%): [6516.177, 6534.077] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1943.772 ±(99.9%) 2.589 MB/sec [Average]
  (min, avg, max) = (1942.787, 1943.772, 1944.398), stdev = 0.672
  CI (99.9%): [1941.183, 1946.361] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  328.013 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (328.012, 328.013, 328.013), stdev = 0.001
  CI (99.9%): [328.011, 328.014] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1950.548 ±(99.9%) 118.928 MB/sec [Average]
  (min, avg, max) = (1916.708, 1950.548, 1973.148), stdev = 30.885
  CI (99.9%): [1831.620, 2069.476] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  329.156 ±(99.9%) 20.001 B/op [Average]
  (min, avg, max) = (323.442, 329.156, 333.139), stdev = 5.194
  CI (99.9%): [309.155, 349.157] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.004 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 0, 0.001] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  173.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (34.000, 34.600, 35.000), stdev = 0.548
  CI (99.9%): [173.000, 173.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  95.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (17.000, 19.000, 20.000), stdev = 1.225
  CI (99.9%): [95.000, 95.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1024, transferSize = 128)

# Run progress: 4.00% complete, ETA 01:41:06
# Fork: 1 of 1
# Warmup Iteration   1: 869.163 ops/ms
# Warmup Iteration   2: 875.898 ops/ms
# Warmup Iteration   3: 872.195 ops/ms
Iteration   1: 872.891 ops/ms
                 ·gc.alloc.rate:                   1636.273 MB/sec
                 ·gc.alloc.rate.norm:              2064.086 B/op
                 ·gc.churn.G1_Eden_Space:          1691.234 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2133.416 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         17.000 ms

Iteration   2: 871.978 ops/ms
                 ·gc.alloc.rate:                   1634.535 MB/sec
                 ·gc.alloc.rate.norm:              2064.082 B/op
                 ·gc.churn.G1_Eden_Space:          1634.839 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2064.465 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         19.000 ms

Iteration   3: 872.369 ops/ms
                 ·gc.alloc.rate:                   1635.285 MB/sec
                 ·gc.alloc.rate.norm:              2064.080 B/op
                 ·gc.churn.G1_Eden_Space:          1634.850 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2063.531 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         24.000 ms

Iteration   4: 872.949 ops/ms
                 ·gc.alloc.rate:                   1636.381 MB/sec
                 ·gc.alloc.rate.norm:              2064.079 B/op
                 ·gc.churn.G1_Eden_Space:          1634.864 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2062.165 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.006 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         22.000 ms

Iteration   5: 872.464 ops/ms
                 ·gc.alloc.rate:                   1635.464 MB/sec
                 ·gc.alloc.rate.norm:              2064.078 B/op
                 ·gc.churn.G1_Eden_Space:          1634.849 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2063.302 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         16.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  872.530 ±(99.9%) 1.541 ops/ms [Average]
  (min, avg, max) = (871.978, 872.530, 872.949), stdev = 0.400
  CI (99.9%): [870.989, 874.071] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1635.588 ±(99.9%) 2.929 MB/sec [Average]
  (min, avg, max) = (1634.535, 1635.588, 1636.381), stdev = 0.761
  CI (99.9%): [1632.659, 1638.517] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2064.081 ±(99.9%) 0.012 B/op [Average]
  (min, avg, max) = (2064.078, 2064.081, 2064.086), stdev = 0.003
  CI (99.9%): [2064.069, 2064.093] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1646.127 ±(99.9%) 97.096 MB/sec [Average]
  (min, avg, max) = (1634.839, 1646.127, 1691.234), stdev = 25.216
  CI (99.9%): [1549.031, 1743.223] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2077.376 ±(99.9%) 120.673 B/op [Average]
  (min, avg, max) = (2062.165, 2077.376, 2133.416), stdev = 31.338
  CI (99.9%): [1956.703, 2198.048] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.004 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.004 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (0.002, 0.004, 0.006), stdev = 0.001
  CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  146.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (29.000, 29.200, 30.000), stdev = 0.447
  CI (99.9%): [146.000, 146.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  98.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (16.000, 19.600, 24.000), stdev = 3.362
  CI (99.9%): [98.000, 98.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1024, transferSize = 1024)

# Run progress: 5.33% complete, ETA 01:39:41
# Fork: 1 of 1
# Warmup Iteration   1: 1340.097 ops/ms
# Warmup Iteration   2: 1363.985 ops/ms
# Warmup Iteration   3: 1365.413 ops/ms
Iteration   1: 1364.167 ops/ms
                 ·gc.alloc.rate:                   2557.197 MB/sec
                 ·gc.alloc.rate.norm:              2064.080 B/op
                 ·gc.churn.G1_Eden_Space:          2536.843 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2047.650 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         24.000 ms

Iteration   2: 1364.819 ops/ms
                 ·gc.alloc.rate:                   2558.443 MB/sec
                 ·gc.alloc.rate.norm:              2064.079 B/op
                 ·gc.churn.G1_Eden_Space:          2593.264 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2092.171 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         28.000 ms

Iteration   3: 1366.049 ops/ms
                 ·gc.alloc.rate:                   2560.694 MB/sec
                 ·gc.alloc.rate.norm:              2064.077 B/op
                 ·gc.churn.G1_Eden_Space:          2536.823 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2044.835 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         23.000 ms

Iteration   4: 1361.212 ops/ms
                 ·gc.alloc.rate:                   2551.614 MB/sec
                 ·gc.alloc.rate.norm:              2064.077 B/op
                 ·gc.churn.G1_Eden_Space:          2536.817 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2052.108 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         24.000 ms

Iteration   5: 1364.354 ops/ms
                 ·gc.alloc.rate:                   2557.507 MB/sec
                 ·gc.alloc.rate.norm:              2064.079 B/op
                 ·gc.churn.G1_Eden_Space:          2593.194 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2092.880 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         26.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1364.120 ±(99.9%) 6.868 ops/ms [Average]
  (min, avg, max) = (1361.212, 1364.120, 1366.049), stdev = 1.784
  CI (99.9%): [1357.252, 1370.988] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  2557.091 ±(99.9%) 12.915 MB/sec [Average]
  (min, avg, max) = (2551.614, 2557.091, 2560.694), stdev = 3.354
  CI (99.9%): [2544.176, 2570.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2064.078 ±(99.9%) 0.004 B/op [Average]
  (min, avg, max) = (2064.077, 2064.078, 2064.080), stdev = 0.001
  CI (99.9%): [2064.074, 2064.082] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  2559.388 ±(99.9%) 118.955 MB/sec [Average]
  (min, avg, max) = (2536.817, 2559.388, 2593.264), stdev = 30.892
  CI (99.9%): [2440.433, 2678.343] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2065.929 ±(99.9%) 94.028 B/op [Average]
  (min, avg, max) = (2044.835, 2065.929, 2092.880), stdev = 24.419
  CI (99.9%): [1971.901, 2159.957] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.006 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.006), stdev = 0.001
  CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.003 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  227.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (45.000, 45.400, 46.000), stdev = 0.548
  CI (99.9%): [227.000, 227.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  125.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (23.000, 25.000, 28.000), stdev = 2.000
  CI (99.9%): [125.000, 125.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 6.67% complete, ETA 01:38:17
# Fork: 1 of 1
# Warmup Iteration   1: 1457.444 ops/ms
# Warmup Iteration   2: 1482.427 ops/ms
# Warmup Iteration   3: 1485.048 ops/ms
Iteration   1: 1488.918 ops/ms
                 ·gc.alloc.rate:                   2791.028 MB/sec
                 ·gc.alloc.rate.norm:              2064.079 B/op
                 ·gc.churn.G1_Eden_Space:          2762.332 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2042.857 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         25.000 ms

Iteration   2: 1484.364 ops/ms
                 ·gc.alloc.rate:                   2782.539 MB/sec
                 ·gc.alloc.rate.norm:              2064.079 B/op
                 ·gc.churn.G1_Eden_Space:          2818.772 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2090.956 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         32.000 ms

Iteration   3: 1487.789 ops/ms
                 ·gc.alloc.rate:                   2788.892 MB/sec
                 ·gc.alloc.rate.norm:              2064.077 B/op
                 ·gc.churn.G1_Eden_Space:          2762.317 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2044.409 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         30.000 ms

Iteration   4: 1488.021 ops/ms
                 ·gc.alloc.rate:                   2789.279 MB/sec
                 ·gc.alloc.rate.norm:              2064.079 B/op
                 ·gc.churn.G1_Eden_Space:          2818.645 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2085.809 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         27.000 ms

Iteration   5: 1488.818 ops/ms
                 ·gc.alloc.rate:                   2790.776 MB/sec
                 ·gc.alloc.rate.norm:              2064.076 B/op
                 ·gc.churn.G1_Eden_Space:          2762.267 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2042.991 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         25.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1487.582 ±(99.9%) 7.179 ops/ms [Average]
  (min, avg, max) = (1484.364, 1487.582, 1488.918), stdev = 1.864
  CI (99.9%): [1480.403, 1494.761] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  2788.503 ±(99.9%) 13.320 MB/sec [Average]
  (min, avg, max) = (2782.539, 2788.503, 2791.028), stdev = 3.459
  CI (99.9%): [2775.183, 2801.823] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2064.078 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (2064.076, 2064.078, 2064.079), stdev = 0.001
  CI (99.9%): [2064.073, 2064.083] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  2784.867 ±(99.9%) 118.958 MB/sec [Average]
  (min, avg, max) = (2762.267, 2784.867, 2818.772), stdev = 30.893
  CI (99.9%): [2665.908, 2903.825] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2061.404 ±(99.9%) 95.120 B/op [Average]
  (min, avg, max) = (2042.857, 2061.404, 2090.956), stdev = 24.702
  CI (99.9%): [1966.285, 2156.524] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.002 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  247.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (49.000, 49.400, 50.000), stdev = 0.548
  CI (99.9%): [247.000, 247.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  139.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (25.000, 27.800, 32.000), stdev = 3.114
  CI (99.9%): [139.000, 139.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1048576, transferSize = 128)

# Run progress: 8.00% complete, ETA 01:36:53
# Fork: 1 of 1
# Warmup Iteration   1: 1.001 ops/ms
# Warmup Iteration   2: 1.011 ops/ms
# Warmup Iteration   3: 1.009 ops/ms
Iteration   1: 1.009 ops/ms
                 ·gc.alloc.rate:               21.595 MB/sec
                 ·gc.alloc.rate.norm:          23570.677 B/op
                 ·gc.churn.G1_Eden_Space:      56.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 61528.099 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 1.007 ops/ms
                 ·gc.alloc.rate:      21.561 MB/sec
                 ·gc.alloc.rate.norm: 23568.041 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.007 ops/ms
                 ·gc.alloc.rate:      21.556 MB/sec
                 ·gc.alloc.rate.norm: 23568.041 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.012 ops/ms
                 ·gc.alloc.rate:                   21.655 MB/sec
                 ·gc.alloc.rate.norm:              23570.675 B/op
                 ·gc.churn.G1_Eden_Space:          56.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     61357.813 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 3.017 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         1.000 ms

Iteration   5: 1.012 ops/ms
                 ·gc.alloc.rate:      21.666 MB/sec
                 ·gc.alloc.rate.norm: 23568.043 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1.009 ±(99.9%) 0.009 ops/ms [Average]
  (min, avg, max) = (1.007, 1.009, 1.012), stdev = 0.002
  CI (99.9%): [1.000, 1.019] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  21.607 ±(99.9%) 0.198 MB/sec [Average]
  (min, avg, max) = (21.556, 21.607, 21.666), stdev = 0.051
  CI (99.9%): [21.409, 21.804] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23569.095 ±(99.9%) 5.556 B/op [Average]
  (min, avg, max) = (23568.041, 23569.095, 23570.677), stdev = 1.443
  CI (99.9%): [23563.539, 23574.652] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  22.548 ±(99.9%) 118.890 MB/sec [Average]
  (min, avg, max) = (≈ 0, 22.548, 56.370), stdev = 30.875
  CI (99.9%): [≈ 0, 141.438] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  24577.182 ±(99.9%) 129588.596 B/op [Average]
  (min, avg, max) = (≈ 0, 24577.182, 61528.099), stdev = 33653.747
  CI (99.9%): [≈ 0, 154165.778] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.005 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.603 ±(99.9%) 5.196 B/op [Average]
  (min, avg, max) = (≈ 0, 0.603, 3.017), stdev = 1.349
  CI (99.9%): [≈ 0, 5.800] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  3.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.600, 2.000), stdev = 0.894
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 9.33% complete, ETA 01:35:29
# Fork: 1 of 1
# Warmup Iteration   1: 1.156 ops/ms
# Warmup Iteration   2: 1.153 ops/ms
# Warmup Iteration   3: 1.150 ops/ms
Iteration   1: 1.150 ops/ms
                 ·gc.alloc.rate:      17.123 MB/sec
                 ·gc.alloc.rate.norm: 16400.038 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.158 ops/ms
                 ·gc.alloc.rate:                   17.245 MB/sec
                 ·gc.alloc.rate.norm:              16402.338 B/op
                 ·gc.churn.G1_Eden_Space:          56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     53615.218 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1.920 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   3: 1.162 ops/ms
                 ·gc.alloc.rate:      17.303 MB/sec
                 ·gc.alloc.rate.norm: 16400.038 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.162 ops/ms
                 ·gc.alloc.rate:      17.304 MB/sec
                 ·gc.alloc.rate.norm: 16400.038 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.159 ops/ms
                 ·gc.alloc.rate:               17.260 MB/sec
                 ·gc.alloc.rate.norm:          16402.331 B/op
                 ·gc.churn.G1_Eden_Space:      56.369 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 53568.950 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1.158 ±(99.9%) 0.019 ops/ms [Average]
  (min, avg, max) = (1.150, 1.158, 1.162), stdev = 0.005
  CI (99.9%): [1.139, 1.177] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  17.247 ±(99.9%) 0.285 MB/sec [Average]
  (min, avg, max) = (17.123, 17.247, 17.304), stdev = 0.074
  CI (99.9%): [16.962, 17.532] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  16400.956 ±(99.9%) 4.843 B/op [Average]
  (min, avg, max) = (16400.038, 16400.956, 16402.338), stdev = 1.258
  CI (99.9%): [16396.114, 16405.799] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  22.548 ±(99.9%) 118.889 MB/sec [Average]
  (min, avg, max) = (≈ 0, 22.548, 56.371), stdev = 30.875
  CI (99.9%): [≈ 0, 141.437] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  21436.834 ±(99.9%) 113030.253 B/op [Average]
  (min, avg, max) = (≈ 0, 21436.834, 53615.218), stdev = 29353.598
  CI (99.9%): [≈ 0, 134467.087] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻³ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.384 ±(99.9%) 3.307 B/op [Average]
  (min, avg, max) = (≈ 0, 0.384, 1.920), stdev = 0.859
  CI (99.9%): [≈ 0, 3.691] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  3.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.600, 2.000), stdev = 0.894
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 10.67% complete, ETA 01:34:04
# Fork: 1 of 1
# Warmup Iteration   1: 2.029 ops/ms
# Warmup Iteration   2: 2.038 ops/ms
# Warmup Iteration   3: 2.057 ops/ms
Iteration   1: 2.058 ops/ms
                 ·gc.alloc.rate:      44.042 MB/sec
                 ·gc.alloc.rate.norm: 23568.021 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.055 ops/ms
                 ·gc.alloc.rate:                   43.986 MB/sec
                 ·gc.alloc.rate.norm:              23569.320 B/op
                 ·gc.churn.G1_Eden_Space:          56.374 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     30207.153 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.204 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   3: 2.055 ops/ms
                 ·gc.alloc.rate:               43.993 MB/sec
                 ·gc.alloc.rate.norm:          23569.312 B/op
                 ·gc.churn.G1_Eden_Space:      56.372 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 30201.274 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   4: 2.053 ops/ms
                 ·gc.alloc.rate:                   43.951 MB/sec
                 ·gc.alloc.rate.norm:              23569.318 B/op
                 ·gc.churn.G1_Eden_Space:          56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     30229.218 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1.932 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   5: 2.052 ops/ms
                 ·gc.alloc.rate:      43.916 MB/sec
                 ·gc.alloc.rate.norm: 23568.021 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  2.055 ±(99.9%) 0.009 ops/ms [Average]
  (min, avg, max) = (2.052, 2.055, 2.058), stdev = 0.002
  CI (99.9%): [2.046, 2.063] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  43.978 ±(99.9%) 0.182 MB/sec [Average]
  (min, avg, max) = (43.916, 43.978, 44.042), stdev = 0.047
  CI (99.9%): [43.795, 44.160] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23568.799 ±(99.9%) 2.732 B/op [Average]
  (min, avg, max) = (23568.021, 23568.799, 23569.320), stdev = 0.710
  CI (99.9%): [23566.066, 23571.531] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  33.823 ±(99.9%) 118.893 MB/sec [Average]
  (min, avg, max) = (≈ 0, 33.823, 56.374), stdev = 30.876
  CI (99.9%): [≈ 0, 152.717] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  18127.529 ±(99.9%) 63720.831 B/op [Average]
  (min, avg, max) = (≈ 0, 18127.529, 30229.218), stdev = 16548.098
  CI (99.9%): [≈ 0, 81848.360] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.006 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
  CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.427 ±(99.9%) 3.256 B/op [Average]
  (min, avg, max) = (≈ 0, 0.427, 1.932), stdev = 0.846
  CI (99.9%): [≈ 0, 3.683] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  3.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 128, transferSize = 128)

# Run progress: 12.00% complete, ETA 01:32:40
# Fork: 1 of 1
# Warmup Iteration   1: 6058.047 ops/ms
# Warmup Iteration   2: 6271.816 ops/ms
# Warmup Iteration   3: 6294.214 ops/ms
Iteration   1: 6295.043 ops/ms
                 ·gc.alloc.rate:                   1555.053 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1578.444 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     276.103 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        28.000 counts
                 ·gc.time:                         23.000 ms

Iteration   2: 6288.427 ops/ms
                 ·gc.alloc.rate:                   1553.426 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1522.097 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     266.525 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        27.000 counts
                 ·gc.time:                         19.000 ms

Iteration   3: 6300.774 ops/ms
                 ·gc.alloc.rate:                   1556.488 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1578.472 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     275.853 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        28.000 counts
                 ·gc.time:                         17.000 ms

Iteration   4: 6294.430 ops/ms
                 ·gc.alloc.rate:                   1554.877 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          1522.059 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     266.269 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        27.000 counts
                 ·gc.time:                         22.000 ms

Iteration   5: 6302.396 ops/ms
                 ·gc.alloc.rate:                   1556.859 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          1578.455 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     275.784 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        28.000 counts
                 ·gc.time:                         19.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  6296.214 ±(99.9%) 21.458 ops/ms [Average]
  (min, avg, max) = (6288.427, 6296.214, 6302.396), stdev = 5.573
  CI (99.9%): [6274.756, 6317.672] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1555.341 ±(99.9%) 5.302 MB/sec [Average]
  (min, avg, max) = (1553.426, 1555.341, 1556.859), stdev = 1.377
  CI (99.9%): [1550.039, 1560.642] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  272.011 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (272.010, 272.011, 272.011), stdev = 0.001
  CI (99.9%): [272.009, 272.012] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1555.905 ±(99.9%) 118.907 MB/sec [Average]
  (min, avg, max) = (1522.059, 1555.905, 1578.472), stdev = 30.880
  CI (99.9%): [1436.998, 1674.813] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  272.107 ±(99.9%) 20.078 B/op [Average]
  (min, avg, max) = (266.269, 272.107, 276.103), stdev = 5.214
  CI (99.9%): [252.028, 292.185] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  138.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (27.000, 27.600, 28.000), stdev = 0.548
  CI (99.9%): [138.000, 138.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  100.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (17.000, 20.000, 23.000), stdev = 2.449
  CI (99.9%): [100.000, 100.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 128, transferSize = 1024)

# Run progress: 13.33% complete, ETA 01:31:16
# Fork: 1 of 1
# Warmup Iteration   1: 6638.061 ops/ms
# Warmup Iteration   2: 7268.616 ops/ms
# Warmup Iteration   3: 7295.339 ops/ms
Iteration   1: 7319.205 ops/ms
                 ·gc.alloc.rate:                   1808.076 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1803.964 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.392 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         18.000 ms

Iteration   2: 7310.958 ops/ms
                 ·gc.alloc.rate:                   1806.065 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1804.011 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.701 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         24.000 ms

Iteration   3: 7314.793 ops/ms
                 ·gc.alloc.rate:                   1807.011 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1860.391 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     280.046 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         23.000 ms

Iteration   4: 7320.082 ops/ms
                 ·gc.alloc.rate:                   1808.241 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          1803.918 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.360 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         17.000 ms

Iteration   5: 7312.301 ops/ms
                 ·gc.alloc.rate:                   1806.350 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          1803.950 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.649 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         22.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  7315.468 ±(99.9%) 15.651 ops/ms [Average]
  (min, avg, max) = (7310.958, 7315.468, 7320.082), stdev = 4.065
  CI (99.9%): [7299.817, 7331.119] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1807.148 ±(99.9%) 3.795 MB/sec [Average]
  (min, avg, max) = (1806.065, 1807.148, 1808.241), stdev = 0.986
  CI (99.9%): [1803.353, 1810.943] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  272.011 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (272.010, 272.011, 272.011), stdev = 0.001
  CI (99.9%): [272.009, 272.012] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1815.247 ±(99.9%) 97.176 MB/sec [Average]
  (min, avg, max) = (1803.918, 1815.247, 1860.391), stdev = 25.236
  CI (99.9%): [1718.071, 1912.422] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  273.230 ±(99.9%) 14.684 B/op [Average]
  (min, avg, max) = (271.360, 273.230, 280.046), stdev = 3.813
  CI (99.9%): [258.546, 287.914] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  161.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (32.000, 32.200, 33.000), stdev = 0.447
  CI (99.9%): [161.000, 161.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  104.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (17.000, 20.800, 24.000), stdev = 3.114
  CI (99.9%): [104.000, 104.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 128, transferSize = 1048576)

# Run progress: 14.67% complete, ETA 01:29:51
# Fork: 1 of 1
# Warmup Iteration   1: 6839.069 ops/ms
# Warmup Iteration   2: 6982.748 ops/ms
# Warmup Iteration   3: 7022.555 ops/ms
Iteration   1: 7022.955 ops/ms
                 ·gc.alloc.rate:                   1734.884 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1747.577 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     274.001 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         17.000 ms

Iteration   2: 7017.540 ops/ms
                 ·gc.alloc.rate:                   1733.558 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          1691.237 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     265.370 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         20.000 ms

Iteration   3: 7015.206 ops/ms
                 ·gc.alloc.rate:                   1732.960 MB/sec
                 ·gc.alloc.rate.norm:              272.011 B/op
                 ·gc.churn.G1_Eden_Space:          1747.575 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     274.305 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         17.000 ms

Iteration   4: 7019.923 ops/ms
                 ·gc.alloc.rate:                   1734.136 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          1747.595 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     274.121 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         17.000 ms

Iteration   5: 7014.800 ops/ms
                 ·gc.alloc.rate:                   1732.872 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          1747.591 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     274.321 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         19.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  7018.084 ±(99.9%) 13.125 ops/ms [Average]
  (min, avg, max) = (7014.800, 7018.084, 7022.955), stdev = 3.408
  CI (99.9%): [7004.960, 7031.209] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1733.682 ±(99.9%) 3.247 MB/sec [Average]
  (min, avg, max) = (1732.872, 1733.682, 1734.884), stdev = 0.843
  CI (99.9%): [1730.435, 1736.929] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  272.011 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (272.010, 272.011, 272.011), stdev = 0.001
  CI (99.9%): [272.009, 272.012] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1736.315 ±(99.9%) 97.033 MB/sec [Average]
  (min, avg, max) = (1691.237, 1736.315, 1747.595), stdev = 25.199
  CI (99.9%): [1639.281, 1833.348] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  272.424 ±(99.9%) 15.192 B/op [Average]
  (min, avg, max) = (265.370, 272.424, 274.321), stdev = 3.945
  CI (99.9%): [257.231, 287.616] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.001, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  154.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (30.000, 30.800, 31.000), stdev = 0.447
  CI (99.9%): [154.000, 154.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  90.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (17.000, 18.000, 20.000), stdev = 1.414
  CI (99.9%): [90.000, 90.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1024, transferSize = 128)

# Run progress: 16.00% complete, ETA 01:28:27
# Fork: 1 of 1
# Warmup Iteration   1: 854.945 ops/ms
# Warmup Iteration   2: 869.900 ops/ms
# Warmup Iteration   3: 868.241 ops/ms
Iteration   1: 868.614 ops/ms
                 ·gc.alloc.rate:                   1672.427 MB/sec
                 ·gc.alloc.rate.norm:              2120.086 B/op
                 ·gc.churn.G1_Eden_Space:          1691.223 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2143.913 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         17.000 ms

Iteration   2: 868.554 ops/ms
                 ·gc.alloc.rate:                   1672.305 MB/sec
                 ·gc.alloc.rate.norm:              2120.082 B/op
                 ·gc.churn.G1_Eden_Space:          1634.855 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2072.603 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         17.000 ms

Iteration   3: 867.880 ops/ms
                 ·gc.alloc.rate:                   1670.997 MB/sec
                 ·gc.alloc.rate.norm:              2120.084 B/op
                 ·gc.churn.G1_Eden_Space:          1691.208 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2145.727 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         16.000 ms

Iteration   4: 869.115 ops/ms
                 ·gc.alloc.rate:                   1673.373 MB/sec
                 ·gc.alloc.rate.norm:              2120.081 B/op
                 ·gc.churn.G1_Eden_Space:          1691.212 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2142.683 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         17.000 ms

Iteration   5: 869.064 ops/ms
                 ·gc.alloc.rate:                   1673.242 MB/sec
                 ·gc.alloc.rate.norm:              2120.078 B/op
                 ·gc.churn.G1_Eden_Space:          1634.801 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2071.373 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         16.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  868.645 ±(99.9%) 1.917 ops/ms [Average]
  (min, avg, max) = (867.880, 868.645, 869.115), stdev = 0.498
  CI (99.9%): [866.729, 870.562] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1672.469 ±(99.9%) 3.658 MB/sec [Average]
  (min, avg, max) = (1670.997, 1672.469, 1673.373), stdev = 0.950
  CI (99.9%): [1668.810, 1676.127] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2120.082 ±(99.9%) 0.011 B/op [Average]
  (min, avg, max) = (2120.078, 2120.082, 2120.086), stdev = 0.003
  CI (99.9%): [2120.071, 2120.094] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1668.660 ±(99.9%) 118.924 MB/sec [Average]
  (min, avg, max) = (1634.801, 1668.660, 1691.223), stdev = 30.884
  CI (99.9%): [1549.736, 1787.584] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2115.260 ±(99.9%) 152.173 B/op [Average]
  (min, avg, max) = (2071.373, 2115.260, 2145.727), stdev = 39.519
  CI (99.9%): [1963.087, 2267.432] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 10⁻³, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.004 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (0.002, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [≈ 10⁻³, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  148.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (29.000, 29.600, 30.000), stdev = 0.548
  CI (99.9%): [148.000, 148.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  83.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (16.000, 16.600, 17.000), stdev = 0.548
  CI (99.9%): [83.000, 83.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1024, transferSize = 1024)

# Run progress: 17.33% complete, ETA 01:27:03
# Fork: 1 of 1
# Warmup Iteration   1: 1551.412 ops/ms
# Warmup Iteration   2: 1577.576 ops/ms
# Warmup Iteration   3: 1581.032 ops/ms
Iteration   1: 1582.487 ops/ms
                 ·gc.alloc.rate:                   2966.404 MB/sec
                 ·gc.alloc.rate.norm:              2064.080 B/op
                 ·gc.churn.G1_Eden_Space:          2987.793 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2078.963 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         31.000 ms

Iteration   2: 1581.612 ops/ms
                 ·gc.alloc.rate:                   2964.820 MB/sec
                 ·gc.alloc.rate.norm:              2064.077 B/op
                 ·gc.churn.G1_Eden_Space:          2931.505 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2040.883 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         29.000 ms

Iteration   3: 1579.668 ops/ms
                 ·gc.alloc.rate:                   2961.145 MB/sec
                 ·gc.alloc.rate.norm:              2064.079 B/op
                 ·gc.churn.G1_Eden_Space:          2987.823 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2082.675 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         34.000 ms

Iteration   4: 1582.581 ops/ms
                 ·gc.alloc.rate:                   2966.577 MB/sec
                 ·gc.alloc.rate.norm:              2064.078 B/op
                 ·gc.churn.G1_Eden_Space:          2987.798 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2078.843 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         28.000 ms

Iteration   5: 1583.964 ops/ms
                 ·gc.alloc.rate:                   2969.163 MB/sec
                 ·gc.alloc.rate.norm:              2064.076 B/op
                 ·gc.churn.G1_Eden_Space:          2931.429 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2037.844 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         25.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1582.063 ±(99.9%) 6.088 ops/ms [Average]
  (min, avg, max) = (1579.668, 1582.063, 1583.964), stdev = 1.581
  CI (99.9%): [1575.974, 1588.151] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  2965.622 ±(99.9%) 11.350 MB/sec [Average]
  (min, avg, max) = (2961.145, 2965.622, 2969.163), stdev = 2.948
  CI (99.9%): [2954.272, 2976.972] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2064.078 ±(99.9%) 0.006 B/op [Average]
  (min, avg, max) = (2064.076, 2064.078, 2064.080), stdev = 0.002
  CI (99.9%): [2064.072, 2064.084] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  2965.270 ±(99.9%) 118.821 MB/sec [Average]
  (min, avg, max) = (2931.429, 2965.270, 2987.823), stdev = 30.857
  CI (99.9%): [2846.449, 3084.090] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2063.842 ±(99.9%) 86.346 B/op [Average]
  (min, avg, max) = (2037.844, 2063.842, 2082.675), stdev = 22.424
  CI (99.9%): [1977.495, 2150.188] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.005 MB/sec [Average]
  (min, avg, max) = (0.002, 0.004, 0.006), stdev = 0.001
  CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.002 ±(99.9%) 0.004 B/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  263.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (52.000, 52.600, 53.000), stdev = 0.548
  CI (99.9%): [263.000, 263.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  147.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (25.000, 29.400, 34.000), stdev = 3.362
  CI (99.9%): [147.000, 147.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 18.67% complete, ETA 01:25:39
# Fork: 1 of 1
# Warmup Iteration   1: 1560.930 ops/ms
# Warmup Iteration   2: 1590.904 ops/ms
# Warmup Iteration   3: 1592.571 ops/ms
Iteration   1: 1592.918 ops/ms
                 ·gc.alloc.rate:                   3066.996 MB/sec
                 ·gc.alloc.rate.norm:              2120.082 B/op
                 ·gc.churn.G1_Eden_Space:          3100.561 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2143.284 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         29.000 ms

Iteration   2: 1591.096 ops/ms
                 ·gc.alloc.rate:                   3063.501 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          3044.232 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2106.745 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         36.000 ms

Iteration   3: 1588.633 ops/ms
                 ·gc.alloc.rate:                   3058.730 MB/sec
                 ·gc.alloc.rate.norm:              2120.081 B/op
                 ·gc.churn.G1_Eden_Space:          3100.573 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2149.084 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         31.000 ms

Iteration   4: 1587.809 ops/ms
                 ·gc.alloc.rate:                   3057.103 MB/sec
                 ·gc.alloc.rate.norm:              2120.079 B/op
                 ·gc.churn.G1_Eden_Space:          3044.147 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2111.094 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         29.000 ms

Iteration   5: 1590.356 ops/ms
                 ·gc.alloc.rate:                   3062.072 MB/sec
                 ·gc.alloc.rate.norm:              2120.078 B/op
                 ·gc.churn.G1_Eden_Space:          3044.250 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2107.739 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         27.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1590.162 ±(99.9%) 7.792 ops/ms [Average]
  (min, avg, max) = (1587.809, 1590.162, 1592.918), stdev = 2.024
  CI (99.9%): [1582.370, 1597.954] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  3061.680 ±(99.9%) 15.085 MB/sec [Average]
  (min, avg, max) = (3057.103, 3061.680, 3066.996), stdev = 3.917
  CI (99.9%): [3046.596, 3076.765] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2120.080 ±(99.9%) 0.006 B/op [Average]
  (min, avg, max) = (2120.078, 2120.080, 2120.082), stdev = 0.002
  CI (99.9%): [2120.074, 2120.086] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  3066.753 ±(99.9%) 118.862 MB/sec [Average]
  (min, avg, max) = (3044.147, 3066.753, 3100.573), stdev = 30.868
  CI (99.9%): [2947.890, 3185.615] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2123.589 ±(99.9%) 80.056 B/op [Average]
  (min, avg, max) = (2106.745, 2123.589, 2149.084), stdev = 20.790
  CI (99.9%): [2043.533, 2203.645] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.006 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.006), stdev = 0.002
  CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.003 ±(99.9%) 0.004 B/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  272.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (54.000, 54.400, 55.000), stdev = 0.548
  CI (99.9%): [272.000, 272.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  152.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (27.000, 30.400, 36.000), stdev = 3.435
  CI (99.9%): [152.000, 152.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1048576, transferSize = 128)

# Run progress: 20.00% complete, ETA 01:24:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.981 ops/ms
# Warmup Iteration   2: 0.987 ops/ms
# Warmup Iteration   3: 0.986 ops/ms
Iteration   1: 0.992 ops/ms
                 ·gc.alloc.rate:               21.242 MB/sec
                 ·gc.alloc.rate.norm:          23570.721 B/op
                 ·gc.churn.G1_Eden_Space:      56.372 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 62551.087 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 1.003 ops/ms
                 ·gc.alloc.rate:      21.458 MB/sec
                 ·gc.alloc.rate.norm: 23568.044 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.002 ops/ms
                 ·gc.alloc.rate:      21.449 MB/sec
                 ·gc.alloc.rate.norm: 23568.044 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 0.988 ops/ms
                 ·gc.alloc.rate:               21.150 MB/sec
                 ·gc.alloc.rate.norm:          23570.733 B/op
                 ·gc.churn.G1_Eden_Space:      56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 62823.296 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   5: 0.988 ops/ms
                 ·gc.alloc.rate:      21.141 MB/sec
                 ·gc.alloc.rate.norm: 23568.045 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  0.995 ±(99.9%) 0.028 ops/ms [Average]
  (min, avg, max) = (0.988, 0.995, 1.003), stdev = 0.007
  CI (99.9%): [0.966, 1.023] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  21.288 ±(99.9%) 0.602 MB/sec [Average]
  (min, avg, max) = (21.141, 21.288, 21.458), stdev = 0.156
  CI (99.9%): [20.686, 21.890] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23569.117 ±(99.9%) 5.659 B/op [Average]
  (min, avg, max) = (23568.044, 23569.117, 23570.733), stdev = 1.470
  CI (99.9%): [23563.458, 23574.777] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  22.549 ±(99.9%) 118.892 MB/sec [Average]
  (min, avg, max) = (≈ 0, 22.549, 56.372), stdev = 30.876
  CI (99.9%): [≈ 0, 141.440] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  25074.877 ±(99.9%) 132213.107 B/op [Average]
  (min, avg, max) = (≈ 0, 25074.877, 62823.296), stdev = 34335.324
  CI (99.9%): [≈ 0, 157287.984] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  4.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 1.095
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 21.33% complete, ETA 01:22:50
# Fork: 1 of 1
# Warmup Iteration   1: 1.455 ops/ms
# Warmup Iteration   2: 1.455 ops/ms
# Warmup Iteration   3: 1.460 ops/ms
Iteration   1: 1.466 ops/ms
                 ·gc.alloc.rate:      31.385 MB/sec
                 ·gc.alloc.rate.norm: 23568.030 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.470 ops/ms
                 ·gc.alloc.rate:               31.476 MB/sec
                 ·gc.alloc.rate.norm:          23569.837 B/op
                 ·gc.churn.G1_Eden_Space:      56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 42214.008 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   3: 1.471 ops/ms
                 ·gc.alloc.rate:                   31.490 MB/sec
                 ·gc.alloc.rate.norm:              23569.839 B/op
                 ·gc.churn.G1_Eden_Space:          56.369 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     42191.055 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4.702 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   4: 1.469 ops/ms
                 ·gc.alloc.rate:      31.445 MB/sec
                 ·gc.alloc.rate.norm: 23568.037 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.467 ops/ms
                 ·gc.alloc.rate:               31.397 MB/sec
                 ·gc.alloc.rate.norm:          23569.841 B/op
                 ·gc.churn.G1_Eden_Space:      56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 42317.608 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1.469 ±(99.9%) 0.008 ops/ms [Average]
  (min, avg, max) = (1.466, 1.469, 1.471), stdev = 0.002
  CI (99.9%): [1.461, 1.477] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  31.439 ±(99.9%) 0.179 MB/sec [Average]
  (min, avg, max) = (31.385, 31.439, 31.490), stdev = 0.047
  CI (99.9%): [31.260, 31.618] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23569.117 ±(99.9%) 3.808 B/op [Average]
  (min, avg, max) = (23568.030, 23569.117, 23569.841), stdev = 0.989
  CI (99.9%): [23565.309, 23572.925] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  33.823 ±(99.9%) 118.892 MB/sec [Average]
  (min, avg, max) = (≈ 0, 33.823, 56.373), stdev = 30.876
  CI (99.9%): [≈ 0, 152.715] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  25344.534 ±(99.9%) 89089.798 B/op [Average]
  (min, avg, max) = (≈ 0, 25344.534, 42317.608), stdev = 23136.338
  CI (99.9%): [≈ 0, 114434.332] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.011 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.006), stdev = 0.003
  CI (99.9%): [≈ 0, 0.012] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.940 ±(99.9%) 8.098 B/op [Average]
  (min, avg, max) = (≈ 0, 0.940, 4.702), stdev = 2.103
  CI (99.9%): [≈ 0, 9.038] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  3.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 22.67% complete, ETA 01:21:26
# Fork: 1 of 1
# Warmup Iteration   1: 2.220 ops/ms
# Warmup Iteration   2: 2.190 ops/ms
# Warmup Iteration   3: 2.208 ops/ms
Iteration   1: 2.216 ops/ms
                 ·gc.alloc.rate:               33.005 MB/sec
                 ·gc.alloc.rate.norm:          16401.217 B/op
                 ·gc.churn.G1_Eden_Space:      56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 28012.500 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 2.214 ops/ms
                 ·gc.alloc.rate:      32.970 MB/sec
                 ·gc.alloc.rate.norm: 16400.025 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.214 ops/ms
                 ·gc.alloc.rate:               32.974 MB/sec
                 ·gc.alloc.rate.norm:          16401.220 B/op
                 ·gc.churn.G1_Eden_Space:      56.374 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 28040.338 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   4: 2.220 ops/ms
                 ·gc.alloc.rate:      33.071 MB/sec
                 ·gc.alloc.rate.norm: 16400.020 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.219 ops/ms
                 ·gc.alloc.rate:                   33.056 MB/sec
                 ·gc.alloc.rate.norm:              16401.219 B/op
                 ·gc.churn.G1_Eden_Space:          56.374 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     27970.846 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.223 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  2.217 ±(99.9%) 0.012 ops/ms [Average]
  (min, avg, max) = (2.214, 2.217, 2.220), stdev = 0.003
  CI (99.9%): [2.205, 2.229] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  33.015 ±(99.9%) 0.178 MB/sec [Average]
  (min, avg, max) = (32.970, 33.015, 33.071), stdev = 0.046
  CI (99.9%): [32.837, 33.193] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  16400.740 ±(99.9%) 2.524 B/op [Average]
  (min, avg, max) = (16400.020, 16400.740, 16401.220), stdev = 0.655
  CI (99.9%): [16398.216, 16403.264] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  33.824 ±(99.9%) 118.895 MB/sec [Average]
  (min, avg, max) = (≈ 0, 33.824, 56.374), stdev = 30.877
  CI (99.9%): [≈ 0, 152.719] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  16804.737 ±(99.9%) 59071.094 B/op [Average]
  (min, avg, max) = (≈ 0, 16804.737, 28040.338), stdev = 15340.576
  CI (99.9%): [≈ 0, 75875.831] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.045 ±(99.9%) 0.385 B/op [Average]
  (min, avg, max) = (≈ 0, 0.045, 0.223), stdev = 0.100
  CI (99.9%): [≈ 0, 0.430] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  3.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 128, transferSize = 128)

# Run progress: 24.00% complete, ETA 01:20:02
# Fork: 1 of 1
# Warmup Iteration   1: 5738.503 ops/ms
# Warmup Iteration   2: 5830.628 ops/ms
# Warmup Iteration   3: 5828.290 ops/ms
Iteration   1: 5835.431 ops/ms
                 ·gc.alloc.rate:                   1738.336 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1747.605 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.762 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         16.000 ms

Iteration   2: 5836.006 ops/ms
                 ·gc.alloc.rate:                   1738.481 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1747.596 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.733 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         19.000 ms

Iteration   3: 5837.177 ops/ms
                 ·gc.alloc.rate:                   1738.797 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1747.560 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.666 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         19.000 ms

Iteration   4: 5838.814 ops/ms
                 ·gc.alloc.rate:                   1739.340 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1747.622 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.574 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         17.000 ms

Iteration   5: 5836.608 ops/ms
                 ·gc.alloc.rate:                   1738.638 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1747.560 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.696 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         20.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  5836.807 ±(99.9%) 4.998 ops/ms [Average]
  (min, avg, max) = (5835.431, 5836.807, 5838.814), stdev = 1.298
  CI (99.9%): [5831.809, 5841.805] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1738.718 ±(99.9%) 1.493 MB/sec [Average]
  (min, avg, max) = (1738.336, 1738.718, 1739.340), stdev = 0.388
  CI (99.9%): [1737.226, 1740.211] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  328.013 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (328.012, 328.013, 328.013), stdev = 0.001
  CI (99.9%): [328.011, 328.014] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1747.589 ±(99.9%) 0.107 MB/sec [Average]
  (min, avg, max) = (1747.560, 1747.589, 1747.622), stdev = 0.028
  CI (99.9%): [1747.482, 1747.696] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  329.686 ±(99.9%) 0.279 B/op [Average]
  (min, avg, max) = (329.574, 329.686, 329.762), stdev = 0.072
  CI (99.9%): [329.408, 329.965] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  155.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (31.000, 31.000, 31.000), stdev = 0.001
  CI (99.9%): [155.000, 155.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  91.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (16.000, 18.200, 20.000), stdev = 1.643
  CI (99.9%): [91.000, 91.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 128, transferSize = 1024)

# Run progress: 25.33% complete, ETA 01:18:37
# Fork: 1 of 1
# Warmup Iteration   1: 6392.217 ops/ms
# Warmup Iteration   2: 6370.504 ops/ms
# Warmup Iteration   3: 6405.648 ops/ms
Iteration   1: 6410.372 ops/ms
                 ·gc.alloc.rate:                   1909.601 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1916.726 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.237 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         19.000 ms

Iteration   2: 6410.527 ops/ms
                 ·gc.alloc.rate:                   1909.665 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1860.382 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     319.547 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         23.000 ms

Iteration   3: 6401.914 ops/ms
                 ·gc.alloc.rate:                   1907.074 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1916.717 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.671 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         17.000 ms

Iteration   4: 6406.754 ops/ms
                 ·gc.alloc.rate:                   1908.502 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1916.704 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.422 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         18.000 ms

Iteration   5: 6402.950 ops/ms
                 ·gc.alloc.rate:                   1907.365 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1916.701 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.618 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         22.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  6406.503 ±(99.9%) 15.511 ops/ms [Average]
  (min, avg, max) = (6401.914, 6406.503, 6410.527), stdev = 4.028
  CI (99.9%): [6390.992, 6422.015] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1908.441 ±(99.9%) 4.665 MB/sec [Average]
  (min, avg, max) = (1907.074, 1908.441, 1909.665), stdev = 1.212
  CI (99.9%): [1903.776, 1913.107] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  328.013 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (328.012, 328.013, 328.013), stdev = 0.001
  CI (99.9%): [328.011, 328.014] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1905.446 ±(99.9%) 97.004 MB/sec [Average]
  (min, avg, max) = (1860.382, 1905.446, 1916.726), stdev = 25.192
  CI (99.9%): [1808.442, 2002.450] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  327.499 ±(99.9%) 17.130 B/op [Average]
  (min, avg, max) = (319.547, 327.499, 329.671), stdev = 4.449
  CI (99.9%): [310.370, 344.629] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 10⁻³, 0.001] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  169.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (33.000, 33.800, 34.000), stdev = 0.447
  CI (99.9%): [169.000, 169.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  99.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (17.000, 19.800, 23.000), stdev = 2.588
  CI (99.9%): [99.000, 99.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 128, transferSize = 1048576)

# Run progress: 26.67% complete, ETA 01:17:13
# Fork: 1 of 1
# Warmup Iteration   1: 6144.726 ops/ms
# Warmup Iteration   2: 6246.028 ops/ms
# Warmup Iteration   3: 6238.709 ops/ms
Iteration   1: 6218.623 ops/ms
                 ·gc.alloc.rate:                   1852.473 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1860.333 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.405 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         18.000 ms

Iteration   2: 6240.360 ops/ms
                 ·gc.alloc.rate:                   1858.936 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1860.340 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.261 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         23.000 ms

Iteration   3: 6243.018 ops/ms
                 ·gc.alloc.rate:                   1859.746 MB/sec
                 ·gc.alloc.rate.norm:              328.013 B/op
                 ·gc.churn.G1_Eden_Space:          1860.355 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.120 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         18.000 ms

Iteration   4: 6236.717 ops/ms
                 ·gc.alloc.rate:                   1857.872 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1860.363 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.452 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         18.000 ms

Iteration   5: 6237.539 ops/ms
                 ·gc.alloc.rate:                   1858.069 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          1860.305 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.407 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         20.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  6235.251 ±(99.9%) 37.049 ops/ms [Average]
  (min, avg, max) = (6218.623, 6235.251, 6243.018), stdev = 9.621
  CI (99.9%): [6198.202, 6272.300] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  1857.419 ±(99.9%) 11.027 MB/sec [Average]
  (min, avg, max) = (1852.473, 1857.419, 1859.746), stdev = 2.864
  CI (99.9%): [1846.392, 1868.446] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  328.013 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (328.012, 328.013, 328.013), stdev = 0.001
  CI (99.9%): [328.011, 328.014] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  1860.339 ±(99.9%) 0.087 MB/sec [Average]
  (min, avg, max) = (1860.305, 1860.339, 1860.363), stdev = 0.023
  CI (99.9%): [1860.252, 1860.426] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  328.529 ±(99.9%) 1.951 B/op [Average]
  (min, avg, max) = (328.120, 328.529, 329.405), stdev = 0.507
  CI (99.9%): [326.578, 330.480] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.001, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  165.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (33.000, 33.000, 33.000), stdev = 0.001
  CI (99.9%): [165.000, 165.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  97.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (18.000, 19.400, 23.000), stdev = 2.191
  CI (99.9%): [97.000, 97.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1024, transferSize = 128)

# Run progress: 28.00% complete, ETA 01:15:49
# Fork: 1 of 1
# Warmup Iteration   1: 1100.454 ops/ms
# Warmup Iteration   2: 1117.608 ops/ms
# Warmup Iteration   3: 1120.593 ops/ms
Iteration   1: 1119.547 ops/ms
                 ·gc.alloc.rate:                   2155.586 MB/sec
                 ·gc.alloc.rate.norm:              2120.085 B/op
                 ·gc.churn.G1_Eden_Space:          2198.601 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2162.391 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        39.000 counts
                 ·gc.time:                         21.000 ms

Iteration   2: 1121.362 ops/ms
                 ·gc.alloc.rate:                   2159.107 MB/sec
                 ·gc.alloc.rate.norm:              2120.081 B/op
                 ·gc.churn.G1_Eden_Space:          2142.276 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2103.555 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         23.000 ms

Iteration   3: 1120.898 ops/ms
                 ·gc.alloc.rate:                   2158.127 MB/sec
                 ·gc.alloc.rate.norm:              2120.079 B/op
                 ·gc.churn.G1_Eden_Space:          2142.172 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2104.406 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         22.000 ms

Iteration   4: 1120.816 ops/ms
                 ·gc.alloc.rate:                   2157.994 MB/sec
                 ·gc.alloc.rate.norm:              2120.082 B/op
                 ·gc.churn.G1_Eden_Space:          2198.588 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2159.963 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        39.000 counts
                 ·gc.time:                         21.000 ms

Iteration   5: 1118.901 ops/ms
                 ·gc.alloc.rate:                   2154.308 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          2142.205 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2108.169 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         19.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1120.305 ±(99.9%) 3.981 ops/ms [Average]
  (min, avg, max) = (1118.901, 1120.305, 1121.362), stdev = 1.034
  CI (99.9%): [1116.324, 1124.286] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  2157.024 ±(99.9%) 7.687 MB/sec [Average]
  (min, avg, max) = (2154.308, 2157.024, 2159.107), stdev = 1.996
  CI (99.9%): [2149.337, 2164.711] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2120.081 ±(99.9%) 0.009 B/op [Average]
  (min, avg, max) = (2120.079, 2120.081, 2120.085), stdev = 0.002
  CI (99.9%): [2120.072, 2120.091] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  2164.769 ±(99.9%) 118.903 MB/sec [Average]
  (min, avg, max) = (2142.172, 2164.769, 2198.601), stdev = 30.879
  CI (99.9%): [2045.866, 2283.672] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2127.697 ±(99.9%) 117.924 B/op [Average]
  (min, avg, max) = (2103.555, 2127.697, 2162.391), stdev = 30.624
  CI (99.9%): [2009.773, 2245.621] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.003 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  192.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (38.000, 38.400, 39.000), stdev = 0.548
  CI (99.9%): [192.000, 192.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  106.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (19.000, 21.200, 23.000), stdev = 1.483
  CI (99.9%): [106.000, 106.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1024, transferSize = 1024)

# Run progress: 29.33% complete, ETA 01:14:25
# Fork: 1 of 1
# Warmup Iteration   1: 1465.461 ops/ms
# Warmup Iteration   2: 1484.544 ops/ms
# Warmup Iteration   3: 1492.656 ops/ms
Iteration   1: 1492.711 ops/ms
                 ·gc.alloc.rate:                   2874.063 MB/sec
                 ·gc.alloc.rate.norm:              2120.082 B/op
                 ·gc.churn.G1_Eden_Space:          2875.087 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2120.837 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         27.000 ms

Iteration   2: 1491.964 ops/ms
                 ·gc.alloc.rate:                   2872.671 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          2875.149 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2121.909 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         28.000 ms

Iteration   3: 1493.973 ops/ms
                 ·gc.alloc.rate:                   2876.478 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          2875.065 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2119.038 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 1486.184 ops/ms
                 ·gc.alloc.rate:                   2861.455 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          2875.044 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2130.148 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         33.000 ms

Iteration   5: 1486.422 ops/ms
                 ·gc.alloc.rate:                   2861.928 MB/sec
                 ·gc.alloc.rate.norm:              2120.079 B/op
                 ·gc.churn.G1_Eden_Space:          2875.057 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2129.805 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         28.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1490.251 ±(99.9%) 14.154 ops/ms [Average]
  (min, avg, max) = (1486.184, 1490.251, 1493.973), stdev = 3.676
  CI (99.9%): [1476.096, 1504.405] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  2869.319 ±(99.9%) 27.327 MB/sec [Average]
  (min, avg, max) = (2861.455, 2869.319, 2876.478), stdev = 7.097
  CI (99.9%): [2841.992, 2896.646] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2120.080 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (2120.079, 2120.080, 2120.082), stdev = 0.001
  CI (99.9%): [2120.077, 2120.084] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  2875.080 ±(99.9%) 0.160 MB/sec [Average]
  (min, avg, max) = (2875.044, 2875.080, 2875.149), stdev = 0.042
  CI (99.9%): [2874.920, 2875.241] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2124.347 ±(99.9%) 20.182 B/op [Average]
  (min, avg, max) = (2119.038, 2124.347, 2130.148), stdev = 5.241
  CI (99.9%): [2104.165, 2144.530] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.007 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.006), stdev = 0.002
  CI (99.9%): [≈ 0, 0.011] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.003 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  255.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (51.000, 51.000, 51.000), stdev = 0.001
  CI (99.9%): [255.000, 255.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  145.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (27.000, 29.000, 33.000), stdev = 2.345
  CI (99.9%): [145.000, 145.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 30.67% complete, ETA 01:13:00
# Fork: 1 of 1
# Warmup Iteration   1: 1394.004 ops/ms
# Warmup Iteration   2: 1420.818 ops/ms
# Warmup Iteration   3: 1421.265 ops/ms
Iteration   1: 1420.973 ops/ms
                 ·gc.alloc.rate:                   2735.931 MB/sec
                 ·gc.alloc.rate.norm:              2120.083 B/op
                 ·gc.churn.G1_Eden_Space:          2762.313 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2140.526 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         29.000 ms

Iteration   2: 1420.084 ops/ms
                 ·gc.alloc.rate:                   2734.234 MB/sec
                 ·gc.alloc.rate.norm:              2120.079 B/op
                 ·gc.churn.G1_Eden_Space:          2705.986 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2098.176 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         37.000 ms

Iteration   3: 1420.984 ops/ms
                 ·gc.alloc.rate:                   2735.960 MB/sec
                 ·gc.alloc.rate.norm:              2120.081 B/op
                 ·gc.churn.G1_Eden_Space:          2762.333 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2140.517 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         26.000 ms

Iteration   4: 1418.926 ops/ms
                 ·gc.alloc.rate:                   2731.891 MB/sec
                 ·gc.alloc.rate.norm:              2120.079 B/op
                 ·gc.churn.G1_Eden_Space:          2705.855 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2099.874 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         28.000 ms

Iteration   5: 1420.656 ops/ms
                 ·gc.alloc.rate:                   2735.264 MB/sec
                 ·gc.alloc.rate.norm:              2120.080 B/op
                 ·gc.churn.G1_Eden_Space:          2762.270 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2141.012 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         26.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1420.325 ±(99.9%) 3.323 ops/ms [Average]
  (min, avg, max) = (1418.926, 1420.325, 1420.984), stdev = 0.863
  CI (99.9%): [1417.002, 1423.648] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  2734.656 ±(99.9%) 6.534 MB/sec [Average]
  (min, avg, max) = (2731.891, 2734.656, 2735.960), stdev = 1.697
  CI (99.9%): [2728.122, 2741.190] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2120.080 ±(99.9%) 0.006 B/op [Average]
  (min, avg, max) = (2120.079, 2120.080, 2120.083), stdev = 0.001
  CI (99.9%): [2120.075, 2120.086] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  2739.751 ±(99.9%) 118.921 MB/sec [Average]
  (min, avg, max) = (2705.855, 2739.751, 2762.333), stdev = 30.883
  CI (99.9%): [2620.830, 2858.673] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2124.021 ±(99.9%) 87.899 B/op [Average]
  (min, avg, max) = (2098.176, 2124.021, 2141.012), stdev = 22.827
  CI (99.9%): [2036.122, 2211.920] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.002 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  243.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (48.000, 48.600, 49.000), stdev = 0.548
  CI (99.9%): [243.000, 243.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  146.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (26.000, 29.200, 37.000), stdev = 4.550
  CI (99.9%): [146.000, 146.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1048576, transferSize = 128)

# Run progress: 32.00% complete, ETA 01:11:36
# Fork: 1 of 1
# Warmup Iteration   1: 1.379 ops/ms
# Warmup Iteration   2: 1.384 ops/ms
# Warmup Iteration   3: 1.386 ops/ms
Iteration   1: 1.389 ops/ms
                 ·gc.alloc.rate:      29.735 MB/sec
                 ·gc.alloc.rate.norm: 23568.032 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.391 ops/ms
                 ·gc.alloc.rate:                   29.782 MB/sec
                 ·gc.alloc.rate.norm:              23569.945 B/op
                 ·gc.churn.G1_Eden_Space:          56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     44613.842 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 3.140 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   3: 1.394 ops/ms
                 ·gc.alloc.rate:      29.837 MB/sec
                 ·gc.alloc.rate.norm: 23568.032 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.391 ops/ms
                 ·gc.alloc.rate:                   29.774 MB/sec
                 ·gc.alloc.rate.norm:              23569.946 B/op
                 ·gc.churn.G1_Eden_Space:          56.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     44623.463 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2.008 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   5: 1.391 ops/ms
                 ·gc.alloc.rate:      29.770 MB/sec
                 ·gc.alloc.rate.norm: 23568.039 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1.391 ±(99.9%) 0.007 ops/ms [Average]
  (min, avg, max) = (1.389, 1.391, 1.394), stdev = 0.002
  CI (99.9%): [1.385, 1.398] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  29.780 ±(99.9%) 0.142 MB/sec [Average]
  (min, avg, max) = (29.735, 29.780, 29.837), stdev = 0.037
  CI (99.9%): [29.638, 29.922] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23568.799 ±(99.9%) 4.031 B/op [Average]
  (min, avg, max) = (23568.032, 23568.799, 23569.946), stdev = 1.047
  CI (99.9%): [23564.768, 23572.829] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  22.549 ±(99.9%) 118.892 MB/sec [Average]
  (min, avg, max) = (≈ 0, 22.549, 56.373), stdev = 30.876
  CI (99.9%): [≈ 0, 141.441] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  17847.461 ±(99.9%) 94104.511 B/op [Average]
  (min, avg, max) = (≈ 0, 17847.461, 44623.463), stdev = 24438.643
  CI (99.9%): [≈ 0, 111951.971] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.007 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
  CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  1.030 ±(99.9%) 5.643 B/op [Average]
  (min, avg, max) = (≈ 0, 1.030, 3.140), stdev = 1.466
  CI (99.9%): [≈ 0, 6.673] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  4.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 1.095
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 33.33% complete, ETA 01:10:12
# Fork: 1 of 1
# Warmup Iteration   1: 1.964 ops/ms
# Warmup Iteration   2: 1.967 ops/ms
# Warmup Iteration   3: 1.982 ops/ms
Iteration   1: 1.985 ops/ms
                 ·gc.alloc.rate:                   42.480 MB/sec
                 ·gc.alloc.rate.norm:              23569.364 B/op
                 ·gc.churn.G1_Eden_Space:          56.372 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     31277.120 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1.533 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   2: 1.985 ops/ms
                 ·gc.alloc.rate:               42.488 MB/sec
                 ·gc.alloc.rate.norm:          23569.361 B/op
                 ·gc.churn.G1_Eden_Space:      56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 31270.817 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   3: 1.985 ops/ms
                 ·gc.alloc.rate:                   42.482 MB/sec
                 ·gc.alloc.rate.norm:              23569.369 B/op
                 ·gc.churn.G1_Eden_Space:          56.372 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     31275.544 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.470 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   4: 1.987 ops/ms
                 ·gc.alloc.rate:      42.535 MB/sec
                 ·gc.alloc.rate.norm: 23568.022 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.985 ops/ms
                 ·gc.alloc.rate:               42.480 MB/sec
                 ·gc.alloc.rate.norm:          23569.361 B/op
                 ·gc.churn.G1_Eden_Space:      56.372 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 31277.120 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1.985 ±(99.9%) 0.004 ops/ms [Average]
  (min, avg, max) = (1.985, 1.985, 1.987), stdev = 0.001
  CI (99.9%): [1.981, 1.990] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  42.493 ±(99.9%) 0.091 MB/sec [Average]
  (min, avg, max) = (42.480, 42.493, 42.535), stdev = 0.024
  CI (99.9%): [42.402, 42.584] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23569.095 ±(99.9%) 2.310 B/op [Average]
  (min, avg, max) = (23568.022, 23569.095, 23569.369), stdev = 0.600
  CI (99.9%): [23566.785, 23571.405] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  45.097 ±(99.9%) 97.075 MB/sec [Average]
  (min, avg, max) = (≈ 0, 45.097, 56.372), stdev = 25.210
  CI (99.9%): [≈ 0, 142.173] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  25020.120 ±(99.9%) 53857.696 B/op [Average]
  (min, avg, max) = (≈ 0, 25020.120, 31277.120), stdev = 13986.673
  CI (99.9%): [≈ 0, 78877.816] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.005 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.401 ±(99.9%) 2.561 B/op [Average]
  (min, avg, max) = (≈ 0, 0.401, 1.533), stdev = 0.665
  CI (99.9%): [≈ 0, 2.962] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  4.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  7.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
  CI (99.9%): [7.000, 7.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 34.67% complete, ETA 01:08:48
# Fork: 1 of 1
# Warmup Iteration   1: 1.892 ops/ms
# Warmup Iteration   2: 1.888 ops/ms
# Warmup Iteration   3: 1.906 ops/ms
Iteration   1: 1.910 ops/ms
                 ·gc.alloc.rate:               40.881 MB/sec
                 ·gc.alloc.rate.norm:          23569.416 B/op
                 ·gc.churn.G1_Eden_Space:      56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 32500.366 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 1.910 ops/ms
                 ·gc.alloc.rate:               40.880 MB/sec
                 ·gc.alloc.rate.norm:          23569.414 B/op
                 ·gc.churn.G1_Eden_Space:      56.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 32500.366 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   3: 1.908 ops/ms
                 ·gc.alloc.rate:                   40.848 MB/sec
                 ·gc.alloc.rate.norm:              23569.422 B/op
                 ·gc.churn.G1_Eden_Space:          56.374 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     32527.614 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.470 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   4: 1.902 ops/ms
                 ·gc.alloc.rate:      40.714 MB/sec
                 ·gc.alloc.rate.norm: 23568.023 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.907 ops/ms
                 ·gc.alloc.rate:                   40.826 MB/sec
                 ·gc.alloc.rate.norm:              23569.419 B/op
                 ·gc.churn.G1_Eden_Space:          56.369 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     32542.962 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.698 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer":
  1.908 ±(99.9%) 0.012 ops/ms [Average]
  (min, avg, max) = (1.902, 1.908, 1.910), stdev = 0.003
  CI (99.9%): [1.895, 1.920] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  40.830 ±(99.9%) 0.264 MB/sec [Average]
  (min, avg, max) = (40.714, 40.830, 40.881), stdev = 0.068
  CI (99.9%): [40.566, 41.093] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  23569.139 ±(99.9%) 2.401 B/op [Average]
  (min, avg, max) = (23568.023, 23569.139, 23569.422), stdev = 0.624
  CI (99.9%): [23566.737, 23571.540] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  45.097 ±(99.9%) 97.074 MB/sec [Average]
  (min, avg, max) = (≈ 0, 45.097, 56.374), stdev = 25.210
  CI (99.9%): [≈ 0, 142.171] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  26014.262 ±(99.9%) 55997.704 B/op [Average]
  (min, avg, max) = (≈ 0, 26014.262, 32542.962), stdev = 14542.426
  CI (99.9%): [≈ 0, 82011.965] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻³ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.233 ±(99.9%) 1.270 B/op [Average]
  (min, avg, max) = (≈ 0, 0.233, 0.698), stdev = 0.330
  CI (99.9%): [≈ 0, 1.503] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.count":
  4.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readDirectBuffer:·gc.time":
  7.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
  CI (99.9%): [7.000, 7.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 128, transferSize = 128)

# Run progress: 36.00% complete, ETA 01:07:23
# Fork: 1 of 1
# Warmup Iteration   1: 9336.464 ops/ms
# Warmup Iteration   2: 8926.436 ops/ms
# Warmup Iteration   3: 9075.773 ops/ms
Iteration   1: 9073.954 ops/ms
                 ·gc.alloc.rate:                   461.497 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          450.992 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     54.728 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         6.000 ms

Iteration   2: 9072.425 ops/ms
                 ·gc.alloc.rate:                   461.409 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          450.985 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     54.737 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         6.000 ms

Iteration   3: 9076.228 ops/ms
                 ·gc.alloc.rate:                   461.606 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          507.360 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     61.554 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         6.000 ms

Iteration   4: 9076.316 ops/ms
                 ·gc.alloc.rate:                   461.607 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          450.984 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     54.714 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         5.000 ms

Iteration   5: 9072.322 ops/ms
                 ·gc.alloc.rate:                   461.404 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          450.986 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     54.738 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         4.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  9074.249 ±(99.9%) 7.535 ops/ms [Average]
  (min, avg, max) = (9072.322, 9074.249, 9076.316), stdev = 1.957
  CI (99.9%): [9066.714, 9081.784] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  461.505 ±(99.9%) 0.385 MB/sec [Average]
  (min, avg, max) = (461.404, 461.505, 461.607), stdev = 0.100
  CI (99.9%): [461.119, 461.890] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.002 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (56.002, 56.002, 56.003), stdev = 0.001
  CI (99.9%): [56.002, 56.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  462.262 ±(99.9%) 97.078 MB/sec [Average]
  (min, avg, max) = (450.984, 462.262, 507.360), stdev = 25.211
  CI (99.9%): [365.184, 559.339] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  56.094 ±(99.9%) 11.752 B/op [Average]
  (min, avg, max) = (54.714, 56.094, 61.554), stdev = 3.052
  CI (99.9%): [44.342, 67.846] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  41.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
  CI (99.9%): [41.000, 41.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  27.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (4.000, 5.400, 6.000), stdev = 0.894
  CI (99.9%): [27.000, 27.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 128, transferSize = 1024)

# Run progress: 37.33% complete, ETA 01:05:59
# Fork: 1 of 1
# Warmup Iteration   1: 10061.107 ops/ms
# Warmup Iteration   2: 10542.597 ops/ms
# Warmup Iteration   3: 10518.979 ops/ms
Iteration   1: 10539.380 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 10519.611 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 10512.195 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 10512.886 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 10508.403 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  10518.495 ±(99.9%) 47.568 ops/ms [Average]
  (min, avg, max) = (10508.403, 10518.495, 10539.380), stdev = 12.353
  CI (99.9%): [10470.927, 10566.063] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 128, transferSize = 1048576)

# Run progress: 38.67% complete, ETA 01:04:35
# Fork: 1 of 1
# Warmup Iteration   1: 10750.232 ops/ms
# Warmup Iteration   2: 11172.368 ops/ms
# Warmup Iteration   3: 11276.316 ops/ms
Iteration   1: 11266.952 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 11287.053 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 11286.032 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 11275.457 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 11288.408 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  11280.780 ±(99.9%) 35.744 ops/ms [Average]
  (min, avg, max) = (11266.952, 11280.780, 11288.408), stdev = 9.283
  CI (99.9%): [11245.036, 11316.524] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1024, transferSize = 128)

# Run progress: 40.00% complete, ETA 01:03:11
# Fork: 1 of 1
# Warmup Iteration   1: 1013.219 ops/ms
# Warmup Iteration   2: 1022.571 ops/ms
# Warmup Iteration   3: 1023.210 ops/ms
Iteration   1: 1023.363 ops/ms
                 ·gc.alloc.rate:               52.047 MB/sec
                 ·gc.alloc.rate.norm:          56.003 B/op
                 ·gc.churn.G1_Eden_Space:      56.374 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 60.658 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   2: 1019.710 ops/ms
                 ·gc.alloc.rate:                   51.861 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     60.875 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   3: 1022.734 ops/ms
                 ·gc.alloc.rate:               52.016 MB/sec
                 ·gc.alloc.rate.norm:          56.003 B/op
                 ·gc.churn.G1_Eden_Space:      56.374 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 60.695 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   4: 1027.242 ops/ms
                 ·gc.alloc.rate:                   52.245 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          56.374 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     60.429 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         1.000 ms

Iteration   5: 1007.652 ops/ms
                 ·gc.alloc.rate:                   51.248 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     61.603 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1020.140 ±(99.9%) 28.795 ops/ms [Average]
  (min, avg, max) = (1007.652, 1020.140, 1027.242), stdev = 7.478
  CI (99.9%): [991.345, 1048.936] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  51.883 ±(99.9%) 1.465 MB/sec [Average]
  (min, avg, max) = (51.248, 51.883, 52.245), stdev = 0.381
  CI (99.9%): [50.418, 53.349] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.003 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (56.003, 56.003, 56.003), stdev = 0.001
  CI (99.9%): [56.003, 56.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  56.373 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (56.373, 56.373, 56.374), stdev = 0.001
  CI (99.9%): [56.371, 56.376] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  60.852 ±(99.9%) 1.729 B/op [Average]
  (min, avg, max) = (60.429, 60.852, 61.603), stdev = 0.449
  CI (99.9%): [59.123, 62.581] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.004 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.004 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  5.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  8.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
  CI (99.9%): [8.000, 8.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1024, transferSize = 1024)

# Run progress: 41.33% complete, ETA 01:01:46
# Fork: 1 of 1
# Warmup Iteration   1: 1779.979 ops/ms
# Warmup Iteration   2: 1815.313 ops/ms
# Warmup Iteration   3: 1825.973 ops/ms
Iteration   1: 1829.967 ops/ms
                 ·gc.alloc.rate:                   93.072 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          112.749 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     67.842 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   2: 1828.784 ops/ms
                 ·gc.alloc.rate:                   93.013 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          112.750 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     67.887 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   3: 1814.589 ops/ms
                 ·gc.alloc.rate:               92.287 MB/sec
                 ·gc.alloc.rate.norm:          56.001 B/op
                 ·gc.churn.G1_Eden_Space:      56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 34.209 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   4: 1820.435 ops/ms
                 ·gc.alloc.rate:                   92.586 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          112.746 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     68.197 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   5: 1813.953 ops/ms
                 ·gc.alloc.rate:                   92.257 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          112.747 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     68.441 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1821.546 ±(99.9%) 29.236 ops/ms [Average]
  (min, avg, max) = (1813.953, 1821.546, 1829.967), stdev = 7.593
  CI (99.9%): [1792.309, 1850.782] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  92.643 ±(99.9%) 1.492 MB/sec [Average]
  (min, avg, max) = (92.257, 92.643, 93.072), stdev = 0.387
  CI (99.9%): [91.151, 94.135] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.003 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (56.001, 56.003, 56.003), stdev = 0.001
  CI (99.9%): [56.000, 56.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  101.473 ±(99.9%) 97.080 MB/sec [Average]
  (min, avg, max) = (56.373, 101.473, 112.750), stdev = 25.211
  CI (99.9%): [4.393, 198.553] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  61.315 ±(99.9%) 58.356 B/op [Average]
  (min, avg, max) = (34.209, 61.315, 68.441), stdev = 15.155
  CI (99.9%): [2.959, 119.672] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.007 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.003, 0.005), stdev = 0.002
  CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.002 ±(99.9%) 0.004 B/op [Average]
  (min, avg, max) = (≈ 0, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  9.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
  CI (99.9%): [9.000, 9.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  14.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
  CI (99.9%): [14.000, 14.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 42.67% complete, ETA 01:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 2261.230 ops/ms
# Warmup Iteration   2: 2281.336 ops/ms
# Warmup Iteration   3: 2286.356 ops/ms
Iteration   1: 2286.804 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2286.603 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2287.672 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2286.250 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2287.088 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  2286.883 ±(99.9%) 2.066 ops/ms [Average]
  (min, avg, max) = (2286.250, 2286.883, 2287.672), stdev = 0.536
  CI (99.9%): [2284.818, 2288.949] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1048576, transferSize = 128)

# Run progress: 44.00% complete, ETA 00:58:58
# Fork: 1 of 1
# Warmup Iteration   1: 1.052 ops/ms
# Warmup Iteration   2: 1.055 ops/ms
# Warmup Iteration   3: 1.054 ops/ms
Iteration   1: 1.054 ops/ms
                 ·gc.alloc.rate:      0.054 MB/sec
                 ·gc.alloc.rate.norm: 56.042 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.055 ops/ms
                 ·gc.alloc.rate:      0.054 MB/sec
                 ·gc.alloc.rate.norm: 56.042 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.055 ops/ms
                 ·gc.alloc.rate:      0.054 MB/sec
                 ·gc.alloc.rate.norm: 56.042 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.055 ops/ms
                 ·gc.alloc.rate:      0.054 MB/sec
                 ·gc.alloc.rate.norm: 56.039 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.054 ops/ms
                 ·gc.alloc.rate:      0.054 MB/sec
                 ·gc.alloc.rate.norm: 56.042 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1.055 ±(99.9%) 0.001 ops/ms [Average]
  (min, avg, max) = (1.054, 1.055, 1.055), stdev = 0.001
  CI (99.9%): [1.053, 1.056] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.054 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.054, 0.054, 0.054), stdev = 0.001
  CI (99.9%): [0.054, 0.054] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.041 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (56.039, 56.041, 56.042), stdev = 0.001
  CI (99.9%): [56.036, 56.046] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 45.33% complete, ETA 00:57:34
# Fork: 1 of 1
# Warmup Iteration   1: 1.669 ops/ms
# Warmup Iteration   2: 1.680 ops/ms
# Warmup Iteration   3: 1.680 ops/ms
Iteration   1: 1.680 ops/ms
                 ·gc.alloc.rate:      0.085 MB/sec
                 ·gc.alloc.rate.norm: 56.026 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.680 ops/ms
                 ·gc.alloc.rate:      0.085 MB/sec
                 ·gc.alloc.rate.norm: 56.028 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.680 ops/ms
                 ·gc.alloc.rate:      0.085 MB/sec
                 ·gc.alloc.rate.norm: 56.024 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.677 ops/ms
                 ·gc.alloc.rate:      0.085 MB/sec
                 ·gc.alloc.rate.norm: 56.032 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.678 ops/ms
                 ·gc.alloc.rate:      0.085 MB/sec
                 ·gc.alloc.rate.norm: 56.026 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1.679 ±(99.9%) 0.005 ops/ms [Average]
  (min, avg, max) = (1.677, 1.679, 1.680), stdev = 0.001
  CI (99.9%): [1.674, 1.684] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.085 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.085, 0.085, 0.085), stdev = 0.001
  CI (99.9%): [0.085, 0.086] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.027 ±(99.9%) 0.012 B/op [Average]
  (min, avg, max) = (56.024, 56.027, 56.032), stdev = 0.003
  CI (99.9%): [56.016, 56.039] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = US-ASCII, targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 46.67% complete, ETA 00:56:09
# Fork: 1 of 1
# Warmup Iteration   1: 1.552 ops/ms
# Warmup Iteration   2: 1.557 ops/ms
# Warmup Iteration   3: 1.556 ops/ms
Iteration   1: 1.555 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.026 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.558 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.028 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.557 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.028 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.557 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.033 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.557 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.028 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1.557 ±(99.9%) 0.003 ops/ms [Average]
  (min, avg, max) = (1.555, 1.557, 1.558), stdev = 0.001
  CI (99.9%): [1.553, 1.560] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.079 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.079, 0.079, 0.079), stdev = 0.001
  CI (99.9%): [0.079, 0.079] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.029 ±(99.9%) 0.009 B/op [Average]
  (min, avg, max) = (56.026, 56.029, 56.033), stdev = 0.002
  CI (99.9%): [56.019, 56.038] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 128, transferSize = 128)

# Run progress: 48.00% complete, ETA 00:54:45
# Fork: 1 of 1
# Warmup Iteration   1: 9678.082 ops/ms
# Warmup Iteration   2: 9938.750 ops/ms
# Warmup Iteration   3: 10173.852 ops/ms
Iteration   1: 10170.504 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 10176.719 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 10174.177 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 10157.012 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 10175.324 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  10170.747 ±(99.9%) 30.870 ops/ms [Average]
  (min, avg, max) = (10157.012, 10170.747, 10176.719), stdev = 8.017
  CI (99.9%): [10139.877, 10201.618] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 128, transferSize = 1024)

# Run progress: 49.33% complete, ETA 00:53:21
# Fork: 1 of 1
# Warmup Iteration   1: 11306.156 ops/ms
# Warmup Iteration   2: 12973.106 ops/ms
# Warmup Iteration   3: 13169.667 ops/ms
Iteration   1: 13166.663 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 13163.498 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 13161.728 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 13165.895 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 13173.992 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  13166.355 ±(99.9%) 18.081 ops/ms [Average]
  (min, avg, max) = (13161.728, 13166.355, 13173.992), stdev = 4.696
  CI (99.9%): [13148.274, 13184.437] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 128, transferSize = 1048576)

# Run progress: 50.67% complete, ETA 00:51:57
# Fork: 1 of 1
# Warmup Iteration   1: 12507.449 ops/ms
# Warmup Iteration   2: 12542.009 ops/ms
# Warmup Iteration   3: 13179.246 ops/ms
Iteration   1: 13187.197 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 13185.451 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 13188.963 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 13191.959 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 13185.647 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  13187.843 ±(99.9%) 10.397 ops/ms [Average]
  (min, avg, max) = (13185.451, 13187.843, 13191.959), stdev = 2.700
  CI (99.9%): [13177.447, 13198.240] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1024, transferSize = 128)

# Run progress: 52.00% complete, ETA 00:50:32
# Fork: 1 of 1
# Warmup Iteration   1: 960.090 ops/ms
# Warmup Iteration   2: 962.480 ops/ms
# Warmup Iteration   3: 961.543 ops/ms
Iteration   1: 961.294 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 961.438 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 960.780 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 961.299 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 960.884 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  961.139 ±(99.9%) 1.110 ops/ms [Average]
  (min, avg, max) = (960.780, 961.139, 961.438), stdev = 0.288
  CI (99.9%): [960.029, 962.249] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1024, transferSize = 1024)

# Run progress: 53.33% complete, ETA 00:49:08
# Fork: 1 of 1
# Warmup Iteration   1: 2441.262 ops/ms
# Warmup Iteration   2: 2475.311 ops/ms
# Warmup Iteration   3: 2492.062 ops/ms
Iteration   1: 2472.214 ops/ms
                 ·gc.alloc.rate:                   125.733 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          112.746 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     50.217 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   2: 2489.580 ops/ms
                 ·gc.alloc.rate:                   126.621 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          169.123 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     74.801 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         5.000 ms

Iteration   3: 2486.458 ops/ms
                 ·gc.alloc.rate:                   126.457 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          112.746 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     49.930 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   4: 2478.601 ops/ms
                 ·gc.alloc.rate:                   126.062 MB/sec
                 ·gc.alloc.rate.norm:              56.004 B/op
                 ·gc.churn.G1_Eden_Space:          112.747 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     50.088 B/op
                 ·gc.churn.G1_Survivor_Space:      0.151 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.067 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   5: 2469.180 ops/ms
                 ·gc.alloc.rate:                   125.577 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          112.744 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     50.279 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         1.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  2479.206 ±(99.9%) 33.898 ops/ms [Average]
  (min, avg, max) = (2469.180, 2479.206, 2489.580), stdev = 8.803
  CI (99.9%): [2445.308, 2513.104] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  126.090 ±(99.9%) 1.730 MB/sec [Average]
  (min, avg, max) = (125.577, 126.090, 126.621), stdev = 0.449
  CI (99.9%): [124.360, 127.820] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.003 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (56.002, 56.003, 56.004), stdev = 0.001
  CI (99.9%): [56.000, 56.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  124.021 ±(99.9%) 97.085 MB/sec [Average]
  (min, avg, max) = (112.744, 124.021, 169.123), stdev = 25.213
  CI (99.9%): [26.936, 221.106] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  55.063 ±(99.9%) 42.491 B/op [Average]
  (min, avg, max) = (49.930, 55.063, 74.801), stdev = 11.035
  CI (99.9%): [12.572, 97.554] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.032 ±(99.9%) 0.257 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.032, 0.151), stdev = 0.067
  CI (99.9%): [≈ 0, 0.289] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.014 ±(99.9%) 0.114 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.014, 0.067), stdev = 0.030
  CI (99.9%): [≈ 0, 0.128] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  11.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
  CI (99.9%): [11.000, 11.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  15.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1.000, 3.000, 5.000), stdev = 1.414
  CI (99.9%): [15.000, 15.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 54.67% complete, ETA 00:47:44
# Fork: 1 of 1
# Warmup Iteration   1: 2531.940 ops/ms
# Warmup Iteration   2: 2619.478 ops/ms
# Warmup Iteration   3: 2615.453 ops/ms
Iteration   1: 2615.531 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2615.733 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2615.838 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2612.617 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2614.403 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  2614.825 ±(99.9%) 5.237 ops/ms [Average]
  (min, avg, max) = (2612.617, 2614.825, 2615.838), stdev = 1.360
  CI (99.9%): [2609.587, 2620.062] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1048576, transferSize = 128)

# Run progress: 56.00% complete, ETA 00:46:20
# Fork: 1 of 1
# Warmup Iteration   1: 1.193 ops/ms
# Warmup Iteration   2: 1.197 ops/ms
# Warmup Iteration   3: 1.197 ops/ms
Iteration   1: 1.197 ops/ms
                 ·gc.alloc.rate:      0.061 MB/sec
                 ·gc.alloc.rate.norm: 56.034 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.197 ops/ms
                 ·gc.alloc.rate:      0.061 MB/sec
                 ·gc.alloc.rate.norm: 56.037 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.197 ops/ms
                 ·gc.alloc.rate:      0.061 MB/sec
                 ·gc.alloc.rate.norm: 56.034 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.197 ops/ms
                 ·gc.alloc.rate:      0.061 MB/sec
                 ·gc.alloc.rate.norm: 56.034 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.198 ops/ms
                 ·gc.alloc.rate:      0.061 MB/sec
                 ·gc.alloc.rate.norm: 56.037 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1.197 ±(99.9%) 0.001 ops/ms [Average]
  (min, avg, max) = (1.197, 1.197, 1.198), stdev = 0.001
  CI (99.9%): [1.196, 1.199] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.061 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.061, 0.061, 0.061), stdev = 0.001
  CI (99.9%): [0.061, 0.061] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.035 ±(99.9%) 0.006 B/op [Average]
  (min, avg, max) = (56.034, 56.035, 56.037), stdev = 0.001
  CI (99.9%): [56.030, 56.041] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 57.33% complete, ETA 00:44:55
# Fork: 1 of 1
# Warmup Iteration   1: 1.492 ops/ms
# Warmup Iteration   2: 1.497 ops/ms
# Warmup Iteration   3: 1.495 ops/ms
Iteration   1: 1.497 ops/ms
                 ·gc.alloc.rate:      0.076 MB/sec
                 ·gc.alloc.rate.norm: 56.027 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.498 ops/ms
                 ·gc.alloc.rate:      0.076 MB/sec
                 ·gc.alloc.rate.norm: 56.029 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.496 ops/ms
                 ·gc.alloc.rate:      0.076 MB/sec
                 ·gc.alloc.rate.norm: 56.027 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.496 ops/ms
                 ·gc.alloc.rate:      0.076 MB/sec
                 ·gc.alloc.rate.norm: 56.034 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.496 ops/ms
                 ·gc.alloc.rate:      0.076 MB/sec
                 ·gc.alloc.rate.norm: 56.029 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1.497 ±(99.9%) 0.004 ops/ms [Average]
  (min, avg, max) = (1.496, 1.497, 1.498), stdev = 0.001
  CI (99.9%): [1.493, 1.500] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.076 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.076, 0.076, 0.076), stdev = 0.001
  CI (99.9%): [0.076, 0.076] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.030 ±(99.9%) 0.011 B/op [Average]
  (min, avg, max) = (56.027, 56.030, 56.034), stdev = 0.003
  CI (99.9%): [56.019, 56.040] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = ISO-8859-1, targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 58.67% complete, ETA 00:43:31
# Fork: 1 of 1
# Warmup Iteration   1: 1.546 ops/ms
# Warmup Iteration   2: 1.551 ops/ms
# Warmup Iteration   3: 1.551 ops/ms
Iteration   1: 1.552 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.028 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.553 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.030 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.552 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.030 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.552 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.035 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.552 ops/ms
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: 56.028 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1.552 ±(99.9%) 0.002 ops/ms [Average]
  (min, avg, max) = (1.552, 1.552, 1.553), stdev = 0.001
  CI (99.9%): [1.550, 1.554] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.079 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.079, 0.079, 0.079), stdev = 0.001
  CI (99.9%): [0.079, 0.079] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.031 ±(99.9%) 0.011 B/op [Average]
  (min, avg, max) = (56.028, 56.031, 56.035), stdev = 0.003
  CI (99.9%): [56.020, 56.041] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 128, transferSize = 128)

# Run progress: 60.00% complete, ETA 00:42:07
# Fork: 1 of 1
# Warmup Iteration   1: 9439.507 ops/ms
# Warmup Iteration   2: 9494.220 ops/ms
# Warmup Iteration   3: 9666.086 ops/ms
Iteration   1: 9655.858 ops/ms
                 ·gc.alloc.rate:                   491.109 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.381 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     57.858 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         7.000 ms

Iteration   2: 9664.455 ops/ms
                 ·gc.alloc.rate:                   491.525 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.364 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     57.807 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         6.000 ms

Iteration   3: 9654.297 ops/ms
                 ·gc.alloc.rate:                   491.013 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          450.997 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     51.438 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         6.000 ms

Iteration   4: 9660.962 ops/ms
                 ·gc.alloc.rate:                   491.348 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.359 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     57.827 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         5.000 ms

Iteration   5: 9659.707 ops/ms
                 ·gc.alloc.rate:                   491.278 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.356 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     57.835 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         5.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  9659.056 ±(99.9%) 15.652 ops/ms [Average]
  (min, avg, max) = (9654.297, 9659.056, 9664.455), stdev = 4.065
  CI (99.9%): [9643.404, 9674.707] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  491.255 ±(99.9%) 0.774 MB/sec [Average]
  (min, avg, max) = (491.013, 491.255, 491.525), stdev = 0.201
  CI (99.9%): [490.480, 492.029] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.002 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (56.002, 56.002, 56.002), stdev = 0.001
  CI (99.9%): [56.002, 56.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  496.091 ±(99.9%) 97.069 MB/sec [Average]
  (min, avg, max) = (450.997, 496.091, 507.381), stdev = 25.208
  CI (99.9%): [399.023, 593.160] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  56.553 ±(99.9%) 11.011 B/op [Average]
  (min, avg, max) = (51.438, 56.553, 57.858), stdev = 2.859
  CI (99.9%): [45.543, 67.564] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  44.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (8.000, 8.800, 9.000), stdev = 0.447
  CI (99.9%): [44.000, 44.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  29.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
  CI (99.9%): [29.000, 29.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 128, transferSize = 1024)

# Run progress: 61.33% complete, ETA 00:40:43
# Fork: 1 of 1
# Warmup Iteration   1: 11030.664 ops/ms
# Warmup Iteration   2: 11217.800 ops/ms
# Warmup Iteration   3: 11310.171 ops/ms
Iteration   1: 11312.282 ops/ms
                 ·gc.alloc.rate:                   575.323 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          563.723 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     54.873 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         6.000 ms

Iteration   2: 11316.429 ops/ms
                 ·gc.alloc.rate:                   575.536 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          563.732 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     54.854 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         6.000 ms

Iteration   3: 11311.981 ops/ms
                 ·gc.alloc.rate:                   575.301 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          563.720 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     54.875 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         8.000 ms

Iteration   4: 11306.240 ops/ms
                 ·gc.alloc.rate:                   575.019 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          620.104 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     60.394 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         9.000 ms

Iteration   5: 11296.324 ops/ms
                 ·gc.alloc.rate:                   574.517 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          563.737 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     54.951 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         8.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  11308.651 ±(99.9%) 29.983 ops/ms [Average]
  (min, avg, max) = (11296.324, 11308.651, 11316.429), stdev = 7.786
  CI (99.9%): [11278.668, 11338.634] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  575.139 ±(99.9%) 1.515 MB/sec [Average]
  (min, avg, max) = (574.517, 575.139, 575.536), stdev = 0.393
  CI (99.9%): [573.624, 576.654] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.002 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (56.002, 56.002, 56.003), stdev = 0.001
  CI (99.9%): [56.002, 56.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  575.003 ±(99.9%) 97.084 MB/sec [Average]
  (min, avg, max) = (563.720, 575.003, 620.104), stdev = 25.212
  CI (99.9%): [477.920, 672.087] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  55.989 ±(99.9%) 9.481 B/op [Average]
  (min, avg, max) = (54.854, 55.989, 60.394), stdev = 2.462
  CI (99.9%): [46.508, 65.471] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  51.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (10.000, 10.200, 11.000), stdev = 0.447
  CI (99.9%): [51.000, 51.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  37.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (6.000, 7.400, 9.000), stdev = 1.342
  CI (99.9%): [37.000, 37.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 128, transferSize = 1048576)

# Run progress: 62.67% complete, ETA 00:39:18
# Fork: 1 of 1
# Warmup Iteration   1: 10401.521 ops/ms
# Warmup Iteration   2: 10573.052 ops/ms
# Warmup Iteration   3: 10637.573 ops/ms
Iteration   1: 10633.730 ops/ms
                 ·gc.alloc.rate:                   540.799 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          563.707 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     58.375 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         6.000 ms

Iteration   2: 10633.854 ops/ms
                 ·gc.alloc.rate:                   540.831 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.369 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     52.537 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         7.000 ms

Iteration   3: 10633.191 ops/ms
                 ·gc.alloc.rate:                   540.780 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          563.718 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     58.378 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         7.000 ms

Iteration   4: 10644.696 ops/ms
                 ·gc.alloc.rate:                   541.382 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          507.369 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     52.484 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         8.000 ms

Iteration   5: 10646.437 ops/ms
                 ·gc.alloc.rate:                   541.466 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          563.731 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     58.305 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         6.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  10638.382 ±(99.9%) 25.386 ops/ms [Average]
  (min, avg, max) = (10633.191, 10638.382, 10646.437), stdev = 6.593
  CI (99.9%): [10612.996, 10663.768] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  541.052 ±(99.9%) 1.316 MB/sec [Average]
  (min, avg, max) = (540.780, 541.052, 541.466), stdev = 0.342
  CI (99.9%): [539.735, 542.368] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.002 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (56.002, 56.002, 56.002), stdev = 0.001
  CI (99.9%): [56.002, 56.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  541.179 ±(99.9%) 118.846 MB/sec [Average]
  (min, avg, max) = (507.369, 541.179, 563.731), stdev = 30.864
  CI (99.9%): [422.333, 660.025] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  56.016 ±(99.9%) 12.322 B/op [Average]
  (min, avg, max) = (52.484, 56.016, 58.378), stdev = 3.200
  CI (99.9%): [43.694, 68.338] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  48.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
  CI (99.9%): [48.000, 48.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  34.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (6.000, 6.800, 8.000), stdev = 0.837
  CI (99.9%): [34.000, 34.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1024, transferSize = 128)

# Run progress: 64.00% complete, ETA 00:37:54
# Fork: 1 of 1
# Warmup Iteration   1: 1537.647 ops/ms
# Warmup Iteration   2: 1567.366 ops/ms
# Warmup Iteration   3: 1559.123 ops/ms
Iteration   1: 1561.196 ops/ms
                 ·gc.alloc.rate:               79.401 MB/sec
                 ·gc.alloc.rate.norm:          56.002 B/op
                 ·gc.churn.G1_Eden_Space:      56.375 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 39.761 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   2: 1531.169 ops/ms
                 ·gc.alloc.rate:                   77.874 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          56.375 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     40.541 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   3: 1561.442 ops/ms
                 ·gc.alloc.rate:                   79.415 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          112.747 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     79.509 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   4: 1568.872 ops/ms
                 ·gc.alloc.rate:                   79.790 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          56.373 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     39.566 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   5: 1556.846 ops/ms
                 ·gc.alloc.rate:                   79.181 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          112.747 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     79.744 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1555.905 ±(99.9%) 55.786 ops/ms [Average]
  (min, avg, max) = (1531.169, 1555.905, 1568.872), stdev = 14.488
  CI (99.9%): [1500.118, 1611.691] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  79.132 ±(99.9%) 2.835 MB/sec [Average]
  (min, avg, max) = (77.874, 79.132, 79.790), stdev = 0.736
  CI (99.9%): [76.297, 81.968] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.002 ±(99.9%) 0.004 B/op [Average]
  (min, avg, max) = (56.002, 56.002, 56.003), stdev = 0.001
  CI (99.9%): [55.999, 56.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  78.923 ±(99.9%) 118.895 MB/sec [Average]
  (min, avg, max) = (56.373, 78.923, 112.747), stdev = 30.877
  CI (99.9%): [≈ 0, 197.818] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  55.824 ±(99.9%) 83.681 B/op [Average]
  (min, avg, max) = (39.566, 55.824, 79.744), stdev = 21.732
  CI (99.9%): [≈ 0, 139.505] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.010 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.002, 0.007), stdev = 0.003
  CI (99.9%): [≈ 0, 0.012] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.007 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.005), stdev = 0.002
  CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  7.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
  CI (99.9%): [7.000, 7.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  11.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
  CI (99.9%): [11.000, 11.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1024, transferSize = 1024)

# Run progress: 65.33% complete, ETA 00:36:30
# Fork: 1 of 1
# Warmup Iteration   1: 2320.532 ops/ms
# Warmup Iteration   2: 2371.104 ops/ms
# Warmup Iteration   3: 2375.259 ops/ms
Iteration   1: 2365.795 ops/ms
                 ·gc.alloc.rate:                   120.325 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          112.750 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     52.477 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   2: 2381.083 ops/ms
                 ·gc.alloc.rate:                   121.102 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          112.750 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     52.140 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   3: 2382.659 ops/ms
                 ·gc.alloc.rate:               121.179 MB/sec
                 ·gc.alloc.rate.norm:          56.002 B/op
                 ·gc.churn.G1_Eden_Space:      112.746 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 52.105 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     4.000 ms

Iteration   4: 2372.538 ops/ms
                 ·gc.alloc.rate:                   120.667 MB/sec
                 ·gc.alloc.rate.norm:              56.004 B/op
                 ·gc.churn.G1_Eden_Space:          112.745 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     52.327 B/op
                 ·gc.churn.G1_Survivor_Space:      0.137 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.064 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   5: 2379.269 ops/ms
                 ·gc.alloc.rate:                   120.999 MB/sec
                 ·gc.alloc.rate.norm:              56.003 B/op
                 ·gc.churn.G1_Eden_Space:          169.105 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     78.269 B/op
                 ·gc.churn.G1_Survivor_Space:      0.023 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.011 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         3.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  2376.269 ±(99.9%) 26.998 ops/ms [Average]
  (min, avg, max) = (2365.795, 2376.269, 2382.659), stdev = 7.011
  CI (99.9%): [2349.271, 2403.267] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  120.854 ±(99.9%) 1.366 MB/sec [Average]
  (min, avg, max) = (120.325, 120.854, 121.179), stdev = 0.355
  CI (99.9%): [119.488, 122.221] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.003 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (56.002, 56.003, 56.004), stdev = 0.001
  CI (99.9%): [56.000, 56.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  124.020 ±(99.9%) 97.050 MB/sec [Average]
  (min, avg, max) = (112.745, 124.020, 169.105), stdev = 25.204
  CI (99.9%): [26.969, 221.070] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  57.464 ±(99.9%) 44.789 B/op [Average]
  (min, avg, max) = (52.105, 57.464, 78.269), stdev = 11.631
  CI (99.9%): [12.675, 102.252] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.034 ±(99.9%) 0.225 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.034, 0.137), stdev = 0.058
  CI (99.9%): [≈ 0, 0.259] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.016 ±(99.9%) 0.104 B/op [Average]
  (min, avg, max) = (≈ 0, 0.016, 0.064), stdev = 0.027
  CI (99.9%): [≈ 0, 0.120] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  11.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
  CI (99.9%): [11.000, 11.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  16.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
  CI (99.9%): [16.000, 16.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 66.67% complete, ETA 00:35:06
# Fork: 1 of 1
# Warmup Iteration   1: 2139.853 ops/ms
# Warmup Iteration   2: 2180.250 ops/ms
# Warmup Iteration   3: 2183.002 ops/ms
Iteration   1: 2181.696 ops/ms
                 ·gc.alloc.rate:                   110.960 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          112.748 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     56.905 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         4.000 ms

Iteration   2: 2180.041 ops/ms
                 ·gc.alloc.rate:                   110.876 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          112.749 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     56.948 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   3: 2184.957 ops/ms
                 ·gc.alloc.rate:                   111.122 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          112.744 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     56.820 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   4: 2180.646 ops/ms
                 ·gc.alloc.rate:                   110.907 MB/sec
                 ·gc.alloc.rate.norm:              56.002 B/op
                 ·gc.churn.G1_Eden_Space:          112.749 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     56.933 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   5: 2181.979 ops/ms
                 ·gc.alloc.rate:                   110.977 MB/sec
                 ·gc.alloc.rate.norm:              56.004 B/op
                 ·gc.churn.G1_Eden_Space:          112.747 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     56.897 B/op
                 ·gc.churn.G1_Survivor_Space:      0.145 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.073 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  2181.864 ±(99.9%) 7.310 ops/ms [Average]
  (min, avg, max) = (2180.041, 2181.864, 2184.957), stdev = 1.898
  CI (99.9%): [2174.553, 2189.174] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  110.969 ±(99.9%) 0.366 MB/sec [Average]
  (min, avg, max) = (110.876, 110.969, 111.122), stdev = 0.095
  CI (99.9%): [110.603, 111.334] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.003 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (56.002, 56.003, 56.004), stdev = 0.001
  CI (99.9%): [56.000, 56.005] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space":
  112.747 ±(99.9%) 0.008 MB/sec [Average]
  (min, avg, max) = (112.744, 112.747, 112.749), stdev = 0.002
  CI (99.9%): [112.739, 112.756] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm":
  56.901 ±(99.9%) 0.191 B/op [Average]
  (min, avg, max) = (56.820, 56.901, 56.948), stdev = 0.050
  CI (99.9%): [56.709, 57.092] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space":
  0.031 ±(99.9%) 0.245 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.031, 0.145), stdev = 0.064
  CI (99.9%): [≈ 0, 0.276] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.016 ±(99.9%) 0.124 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.016, 0.073), stdev = 0.032
  CI (99.9%): [≈ 0, 0.139] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  10.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
  CI (99.9%): [10.000, 10.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.time":
  16.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
  CI (99.9%): [16.000, 16.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1048576, transferSize = 128)

# Run progress: 68.00% complete, ETA 00:33:41
# Fork: 1 of 1
# Warmup Iteration   1: 1.614 ops/ms
# Warmup Iteration   2: 1.619 ops/ms
# Warmup Iteration   3: 1.620 ops/ms
Iteration   1: 1.618 ops/ms
                 ·gc.alloc.rate:      0.082 MB/sec
                 ·gc.alloc.rate.norm: 56.027 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.621 ops/ms
                 ·gc.alloc.rate:      0.082 MB/sec
                 ·gc.alloc.rate.norm: 56.025 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.622 ops/ms
                 ·gc.alloc.rate:      0.083 MB/sec
                 ·gc.alloc.rate.norm: 56.025 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.616 ops/ms
                 ·gc.alloc.rate:      0.082 MB/sec
                 ·gc.alloc.rate.norm: 56.036 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.620 ops/ms
                 ·gc.alloc.rate:      0.082 MB/sec
                 ·gc.alloc.rate.norm: 56.027 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  1.620 ±(99.9%) 0.009 ops/ms [Average]
  (min, avg, max) = (1.616, 1.620, 1.622), stdev = 0.002
  CI (99.9%): [1.611, 1.629] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.082 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.082, 0.082, 0.083), stdev = 0.001
  CI (99.9%): [0.082, 0.083] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.028 ±(99.9%) 0.017 B/op [Average]
  (min, avg, max) = (56.025, 56.028, 56.036), stdev = 0.004
  CI (99.9%): [56.011, 56.045] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 69.33% complete, ETA 00:32:17
# Fork: 1 of 1
# Warmup Iteration   1: 2.382 ops/ms
# Warmup Iteration   2: 2.390 ops/ms
# Warmup Iteration   3: 2.386 ops/ms
Iteration   1: 2.380 ops/ms
                 ·gc.alloc.rate:      0.121 MB/sec
                 ·gc.alloc.rate.norm: 56.018 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.383 ops/ms
                 ·gc.alloc.rate:      0.121 MB/sec
                 ·gc.alloc.rate.norm: 56.021 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.382 ops/ms
                 ·gc.alloc.rate:      0.121 MB/sec
                 ·gc.alloc.rate.norm: 56.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.381 ops/ms
                 ·gc.alloc.rate:      0.121 MB/sec
                 ·gc.alloc.rate.norm: 56.018 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.382 ops/ms
                 ·gc.alloc.rate:      0.121 MB/sec
                 ·gc.alloc.rate.norm: 56.018 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  2.382 ±(99.9%) 0.004 ops/ms [Average]
  (min, avg, max) = (2.380, 2.382, 2.383), stdev = 0.001
  CI (99.9%): [2.378, 2.385] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.121 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.121, 0.121, 0.121), stdev = 0.001
  CI (99.9%): [0.121, 0.121] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.019 ±(99.9%) 0.006 B/op [Average]
  (min, avg, max) = (56.017, 56.019, 56.021), stdev = 0.002
  CI (99.9%): [56.013, 56.025] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer
# Parameters: (charsetName = UTF-8, targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 70.67% complete, ETA 00:30:53
# Fork: 1 of 1
# Warmup Iteration   1: 2.036 ops/ms
# Warmup Iteration   2: 2.040 ops/ms
# Warmup Iteration   3: 2.040 ops/ms
Iteration   1: 2.040 ops/ms
                 ·gc.alloc.rate:      0.104 MB/sec
                 ·gc.alloc.rate.norm: 56.020 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.041 ops/ms
                 ·gc.alloc.rate:      0.104 MB/sec
                 ·gc.alloc.rate.norm: 56.027 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.041 ops/ms
                 ·gc.alloc.rate:      0.104 MB/sec
                 ·gc.alloc.rate.norm: 56.020 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.041 ops/ms
                 ·gc.alloc.rate:      0.104 MB/sec
                 ·gc.alloc.rate.norm: 56.022 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.040 ops/ms
                 ·gc.alloc.rate:      0.104 MB/sec
                 ·gc.alloc.rate.norm: 56.022 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer":
  2.040 ±(99.9%) 0.002 ops/ms [Average]
  (min, avg, max) = (2.040, 2.040, 2.041), stdev = 0.001
  CI (99.9%): [2.038, 2.042] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  0.104 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.104, 0.104, 0.104), stdev = 0.001
  CI (99.9%): [0.104, 0.104] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  56.022 ±(99.9%) 0.011 B/op [Average]
  (min, avg, max) = (56.020, 56.022, 56.027), stdev = 0.003
  CI (99.9%): [56.011, 56.033] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.InputStreamReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 128, transferSize = 128)

# Run progress: 72.00% complete, ETA 00:29:29
# Fork: 1 of 1
# Warmup Iteration   1: 13001.929 ops/ms
# Warmup Iteration   2: 13178.646 ops/ms
# Warmup Iteration   3: 12963.924 ops/ms
Iteration   1: 12976.645 ops/ms
                 ·gc.alloc.rate:                   3205.719 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3213.426 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     272.664 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        57.000 counts
                 ·gc.time:                         32.000 ms

Iteration   2: 12973.369 ops/ms
                 ·gc.alloc.rate:                   3204.843 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3213.362 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     272.733 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        57.000 counts
                 ·gc.time:                         32.000 ms

Iteration   3: 13021.534 ops/ms
                 ·gc.alloc.rate:                   3216.718 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3213.306 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.722 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        57.000 counts
                 ·gc.time:                         32.000 ms

Iteration   4: 13037.726 ops/ms
                 ·gc.alloc.rate:                   3220.710 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3213.302 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.384 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        57.000 counts
                 ·gc.time:                         30.000 ms

Iteration   5: 13051.286 ops/ms
                 ·gc.alloc.rate:                   3224.010 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3213.262 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.103 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        57.000 counts
                 ·gc.time:                         31.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  13012.112 ±(99.9%) 136.663 ops/ms [Average]
  (min, avg, max) = (12973.369, 13012.112, 13051.286), stdev = 35.491
  CI (99.9%): [12875.450, 13148.775] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  3214.400 ±(99.9%) 33.582 MB/sec [Average]
  (min, avg, max) = (3204.843, 3214.400, 3224.010), stdev = 8.721
  CI (99.9%): [3180.818, 3247.983] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  272.010 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (272.010, 272.010, 272.010), stdev = 0.001
  CI (99.9%): [272.010, 272.011] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  3213.332 ±(99.9%) 0.244 MB/sec [Average]
  (min, avg, max) = (3213.262, 3213.332, 3213.426), stdev = 0.063
  CI (99.9%): [3213.088, 3213.576] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  271.921 ±(99.9%) 2.861 B/op [Average]
  (min, avg, max) = (271.103, 271.921, 272.733), stdev = 0.743
  CI (99.9%): [269.060, 274.783] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.001, 0.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  285.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (57.000, 57.000, 57.000), stdev = 0.001
  CI (99.9%): [285.000, 285.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  157.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (30.000, 31.400, 32.000), stdev = 0.894
  CI (99.9%): [157.000, 157.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 128, transferSize = 1024)

# Run progress: 73.33% complete, ETA 00:28:04
# Fork: 1 of 1
# Warmup Iteration   1: 13006.688 ops/ms
# Warmup Iteration   2: 13229.060 ops/ms
# Warmup Iteration   3: 13048.650 ops/ms
Iteration   1: 12762.096 ops/ms
                 ·gc.alloc.rate:                   3152.671 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3156.961 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     272.381 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        56.000 counts
                 ·gc.time:                         29.000 ms

Iteration   2: 13067.461 ops/ms
                 ·gc.alloc.rate:                   3228.116 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3213.382 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     270.769 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        57.000 counts
                 ·gc.time:                         39.000 ms

Iteration   3: 13075.849 ops/ms
                 ·gc.alloc.rate:                   3230.094 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3213.268 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     270.593 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        57.000 counts
                 ·gc.time:                         31.000 ms

Iteration   4: 13086.535 ops/ms
                 ·gc.alloc.rate:                   3232.755 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3213.302 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     270.373 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        57.000 counts
                 ·gc.time:                         31.000 ms

Iteration   5: 13072.055 ops/ms
                 ·gc.alloc.rate:                   3229.192 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3269.667 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     275.420 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         33.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  13012.799 ±(99.9%) 540.337 ops/ms [Average]
  (min, avg, max) = (12762.096, 13012.799, 13086.535), stdev = 140.324
  CI (99.9%): [12472.462, 13553.137] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  3214.565 ±(99.9%) 133.397 MB/sec [Average]
  (min, avg, max) = (3152.671, 3214.565, 3232.755), stdev = 34.643
  CI (99.9%): [3081.168, 3347.963] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  272.010 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (272.010, 272.010, 272.010), stdev = 0.001
  CI (99.9%): [272.010, 272.011] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  3213.316 ±(99.9%) 153.439 MB/sec [Average]
  (min, avg, max) = (3156.961, 3213.316, 3269.667), stdev = 39.848
  CI (99.9%): [3059.877, 3366.755] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  271.907 ±(99.9%) 8.154 B/op [Average]
  (min, avg, max) = (270.373, 271.907, 275.420), stdev = 2.118
  CI (99.9%): [263.753, 280.061] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.006 MB/sec [Average]
  (min, avg, max) = (0.002, 0.004, 0.006), stdev = 0.001
  CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  285.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (56.000, 57.000, 58.000), stdev = 0.707
  CI (99.9%): [285.000, 285.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  163.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (29.000, 32.600, 39.000), stdev = 3.847
  CI (99.9%): [163.000, 163.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 128, transferSize = 1048576)

# Run progress: 74.67% complete, ETA 00:26:40
# Fork: 1 of 1
# Warmup Iteration   1: 13002.497 ops/ms
# Warmup Iteration   2: 13170.689 ops/ms
# Warmup Iteration   3: 13262.893 ops/ms
Iteration   1: 13260.030 ops/ms
                 ·gc.alloc.rate:                   3275.723 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3269.802 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.519 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         31.000 ms

Iteration   2: 13266.257 ops/ms
                 ·gc.alloc.rate:                   3277.233 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3326.156 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     276.071 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        59.000 counts
                 ·gc.time:                         32.000 ms

Iteration   3: 13272.429 ops/ms
                 ·gc.alloc.rate:                   3278.724 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3269.726 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.264 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         31.000 ms

Iteration   4: 13257.223 ops/ms
                 ·gc.alloc.rate:                   3274.946 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3269.689 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.573 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         29.000 ms

Iteration   5: 13259.813 ops/ms
                 ·gc.alloc.rate:                   3275.556 MB/sec
                 ·gc.alloc.rate.norm:              272.010 B/op
                 ·gc.churn.G1_Eden_Space:          3269.662 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     271.521 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         36.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  13263.150 ±(99.9%) 23.718 ops/ms [Average]
  (min, avg, max) = (13257.223, 13263.150, 13272.429), stdev = 6.160
  CI (99.9%): [13239.432, 13286.868] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  3276.436 ±(99.9%) 5.895 MB/sec [Average]
  (min, avg, max) = (3274.946, 3276.436, 3278.724), stdev = 1.531
  CI (99.9%): [3270.542, 3282.331] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  272.010 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (272.010, 272.010, 272.010), stdev = 0.001
  CI (99.9%): [272.010, 272.011] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  3281.007 ±(99.9%) 97.187 MB/sec [Average]
  (min, avg, max) = (3269.662, 3281.007, 3326.156), stdev = 25.239
  CI (99.9%): [3183.820, 3378.193] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  272.389 ±(99.9%) 7.938 B/op [Average]
  (min, avg, max) = (271.264, 272.389, 276.071), stdev = 2.062
  CI (99.9%): [264.451, 280.328] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.007 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.007), stdev = 0.002
  CI (99.9%): [≈ 0, 0.011] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  291.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (58.000, 58.200, 59.000), stdev = 0.447
  CI (99.9%): [291.000, 291.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  159.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (29.000, 31.800, 36.000), stdev = 2.588
  CI (99.9%): [159.000, 159.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 1024, transferSize = 128)

# Run progress: 76.00% complete, ETA 00:25:16
# Fork: 1 of 1
# Warmup Iteration   1: 1636.128 ops/ms
# Warmup Iteration   2: 1653.702 ops/ms
# Warmup Iteration   3: 1661.063 ops/ms
Iteration   1: 1659.075 ops/ms
                 ·gc.alloc.rate:                   3109.974 MB/sec
                 ·gc.alloc.rate.norm:              2064.078 B/op
                 ·gc.churn.G1_Eden_Space:          3100.535 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2057.814 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         31.000 ms

Iteration   2: 1659.155 ops/ms
                 ·gc.alloc.rate:                   3110.188 MB/sec
                 ·gc.alloc.rate.norm:              2064.079 B/op
                 ·gc.churn.G1_Eden_Space:          3157.024 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2095.162 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        56.000 counts
                 ·gc.time:                         34.000 ms

Iteration   3: 1657.824 ops/ms
                 ·gc.alloc.rate:                   3107.644 MB/sec
                 ·gc.alloc.rate.norm:              2064.078 B/op
                 ·gc.churn.G1_Eden_Space:          3100.568 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2059.378 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         32.000 ms

Iteration   4: 1657.480 ops/ms
                 ·gc.alloc.rate:                   3107.000 MB/sec
                 ·gc.alloc.rate.norm:              2064.077 B/op
                 ·gc.churn.G1_Eden_Space:          3100.574 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2059.808 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         30.000 ms

Iteration   5: 1657.968 ops/ms
                 ·gc.alloc.rate:                   3107.906 MB/sec
                 ·gc.alloc.rate.norm:              2064.076 B/op
                 ·gc.churn.G1_Eden_Space:          3100.565 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2059.201 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         33.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  1658.300 ±(99.9%) 2.946 ops/ms [Average]
  (min, avg, max) = (1657.480, 1658.300, 1659.155), stdev = 0.765
  CI (99.9%): [1655.355, 1661.246] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  3108.542 ±(99.9%) 5.563 MB/sec [Average]
  (min, avg, max) = (3107.000, 3108.542, 3110.188), stdev = 1.445
  CI (99.9%): [3102.980, 3114.105] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2064.078 ±(99.9%) 0.004 B/op [Average]
  (min, avg, max) = (2064.076, 2064.078, 2064.079), stdev = 0.001
  CI (99.9%): [2064.074, 2064.082] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  3111.853 ±(99.9%) 97.234 MB/sec [Average]
  (min, avg, max) = (3100.535, 3111.853, 3157.024), stdev = 25.251
  CI (99.9%): [3014.619, 3209.087] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2066.273 ±(99.9%) 62.254 B/op [Average]
  (min, avg, max) = (2057.814, 2066.273, 2095.162), stdev = 16.167
  CI (99.9%): [2004.019, 2128.526] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.002 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  276.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (55.000, 55.200, 56.000), stdev = 0.447
  CI (99.9%): [276.000, 276.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  160.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (30.000, 32.000, 34.000), stdev = 1.581
  CI (99.9%): [160.000, 160.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 1024, transferSize = 1024)

# Run progress: 77.33% complete, ETA 00:23:52
# Fork: 1 of 1
# Warmup Iteration   1: 3796.031 ops/ms
# Warmup Iteration   2: 3879.488 ops/ms
# Warmup Iteration   3: 3855.613 ops/ms
Iteration   1: 3858.808 ops/ms
                 ·gc.alloc.rate:                   7233.461 MB/sec
                 ·gc.alloc.rate.norm:              2064.055 B/op
                 ·gc.churn.G1_Eden_Space:          7267.729 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2073.833 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        90.000 counts
                 ·gc.time:                         48.000 ms

Iteration   2: 3878.906 ops/ms
                 ·gc.alloc.rate:                   7271.081 MB/sec
                 ·gc.alloc.rate.norm:              2064.053 B/op
                 ·gc.churn.G1_Eden_Space:          7267.738 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2063.105 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        90.000 counts
                 ·gc.time:                         47.000 ms

Iteration   3: 3883.690 ops/ms
                 ·gc.alloc.rate:                   7280.038 MB/sec
                 ·gc.alloc.rate.norm:              2064.053 B/op
                 ·gc.churn.G1_Eden_Space:          7267.713 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2060.559 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        90.000 counts
                 ·gc.time:                         52.000 ms

Iteration   4: 3880.315 ops/ms
                 ·gc.alloc.rate:                   7273.758 MB/sec
                 ·gc.alloc.rate.norm:              2064.054 B/op
                 ·gc.churn.G1_Eden_Space:          7348.548 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2085.277 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        91.000 counts
                 ·gc.time:                         47.000 ms

Iteration   5: 3876.731 ops/ms
                 ·gc.alloc.rate:                   7266.885 MB/sec
                 ·gc.alloc.rate.norm:              2064.054 B/op
                 ·gc.churn.G1_Eden_Space:          7267.612 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2064.260 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        90.000 counts
                 ·gc.time:                         47.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  3875.690 ±(99.9%) 37.620 ops/ms [Average]
  (min, avg, max) = (3858.808, 3875.690, 3883.690), stdev = 9.770
  CI (99.9%): [3838.069, 3913.310] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  7265.045 ±(99.9%) 70.427 MB/sec [Average]
  (min, avg, max) = (7233.461, 7265.045, 7280.038), stdev = 18.290
  CI (99.9%): [7194.618, 7335.472] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2064.054 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (2064.053, 2064.054, 2064.055), stdev = 0.001
  CI (99.9%): [2064.052, 2064.056] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  7283.868 ±(99.9%) 139.229 MB/sec [Average]
  (min, avg, max) = (7267.612, 7283.868, 7348.548), stdev = 36.157
  CI (99.9%): [7144.639, 7423.097] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2069.407 ±(99.9%) 39.266 B/op [Average]
  (min, avg, max) = (2060.559, 2069.407, 2085.277), stdev = 10.197
  CI (99.9%): [2030.140, 2108.673] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.005 ±(99.9%) 0.007 MB/sec [Average]
  (min, avg, max) = (0.002, 0.005, 0.007), stdev = 0.002
  CI (99.9%): [≈ 0, 0.012] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  451.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (90.000, 90.200, 91.000), stdev = 0.447
  CI (99.9%): [451.000, 451.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  241.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (47.000, 48.200, 52.000), stdev = 2.168
  CI (99.9%): [241.000, 241.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 78.67% complete, ETA 00:22:27
# Fork: 1 of 1
# Warmup Iteration   1: 3694.350 ops/ms
# Warmup Iteration   2: 3799.514 ops/ms
# Warmup Iteration   3: 3786.682 ops/ms
Iteration   1: 3800.555 ops/ms
                 ·gc.alloc.rate:                   7124.223 MB/sec
                 ·gc.alloc.rate.norm:              2064.051 B/op
                 ·gc.churn.G1_Eden_Space:          7183.897 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2081.339 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         43.000 ms

Iteration   2: 3801.797 ops/ms
                 ·gc.alloc.rate:                   7126.536 MB/sec
                 ·gc.alloc.rate.norm:              2064.049 B/op
                 ·gc.churn.G1_Eden_Space:          7096.388 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2055.318 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        81.000 counts
                 ·gc.time:                         47.000 ms

Iteration   3: 3800.240 ops/ms
                 ·gc.alloc.rate:                   7123.492 MB/sec
                 ·gc.alloc.rate.norm:              2064.049 B/op
                 ·gc.churn.G1_Eden_Space:          7096.206 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2056.143 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        81.000 counts
                 ·gc.time:                         44.000 ms

Iteration   4: 3805.596 ops/ms
                 ·gc.alloc.rate:                   7133.464 MB/sec
                 ·gc.alloc.rate.norm:              2064.050 B/op
                 ·gc.churn.G1_Eden_Space:          7183.745 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2078.598 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         46.000 ms

Iteration   5: 3804.949 ops/ms
                 ·gc.alloc.rate:                   7132.213 MB/sec
                 ·gc.alloc.rate.norm:              2064.049 B/op
                 ·gc.churn.G1_Eden_Space:          7096.141 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2053.610 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        81.000 counts
                 ·gc.time:                         45.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  3802.627 ±(99.9%) 9.604 ops/ms [Average]
  (min, avg, max) = (3800.240, 3802.627, 3805.596), stdev = 2.494
  CI (99.9%): [3793.023, 3812.232] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  7127.986 ±(99.9%) 17.681 MB/sec [Average]
  (min, avg, max) = (7123.492, 7127.986, 7133.464), stdev = 4.592
  CI (99.9%): [7110.305, 7145.667] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  2064.050 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (2064.049, 2064.050, 2064.051), stdev = 0.001
  CI (99.9%): [2064.047, 2064.052] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  7131.275 ±(99.9%) 184.705 MB/sec [Average]
  (min, avg, max) = (7096.141, 7131.275, 7183.897), stdev = 47.967
  CI (99.9%): [6946.570, 7315.981] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  2065.002 ±(99.9%) 52.861 B/op [Average]
  (min, avg, max) = (2053.610, 2065.002, 2081.339), stdev = 13.728
  CI (99.9%): [2012.140, 2117.863] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.005 ±(99.9%) 0.011 MB/sec [Average]
  (min, avg, max) = (0.003, 0.005, 0.009), stdev = 0.003
  CI (99.9%): [≈ 0, 0.015] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  407.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (81.000, 81.400, 82.000), stdev = 0.548
  CI (99.9%): [407.000, 407.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  225.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (43.000, 45.000, 47.000), stdev = 1.581
  CI (99.9%): [225.000, 225.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 1048576, transferSize = 128)

# Run progress: 80.00% complete, ETA 00:21:03
# Fork: 1 of 1
# Warmup Iteration   1: 2.249 ops/ms
# Warmup Iteration   2: 2.251 ops/ms
# Warmup Iteration   3: 2.265 ops/ms
Iteration   1: 2.266 ops/ms
                 ·gc.alloc.rate:               33.748 MB/sec
                 ·gc.alloc.rate.norm:          16401.192 B/op
                 ·gc.churn.G1_Eden_Space:      56.371 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 27395.604 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 2.267 ops/ms
                 ·gc.alloc.rate:      33.767 MB/sec
                 ·gc.alloc.rate.norm: 16400.024 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.274 ops/ms
                 ·gc.alloc.rate:                   33.872 MB/sec
                 ·gc.alloc.rate.norm:              16401.190 B/op
                 ·gc.churn.G1_Eden_Space:          56.372 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     27295.620 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2.988 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         1.000 ms

Iteration   4: 2.281 ops/ms
                 ·gc.alloc.rate:      33.980 MB/sec
                 ·gc.alloc.rate.norm: 16400.018 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.281 ops/ms
                 ·gc.alloc.rate:               33.972 MB/sec
                 ·gc.alloc.rate.norm:          16401.184 B/op
                 ·gc.churn.G1_Eden_Space:      56.372 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 27215.441 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  2.274 ±(99.9%) 0.028 ops/ms [Average]
  (min, avg, max) = (2.266, 2.274, 2.281), stdev = 0.007
  CI (99.9%): [2.246, 2.302] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  33.868 ±(99.9%) 0.422 MB/sec [Average]
  (min, avg, max) = (33.748, 33.868, 33.980), stdev = 0.110
  CI (99.9%): [33.446, 34.290] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  16400.722 ±(99.9%) 2.463 B/op [Average]
  (min, avg, max) = (16400.018, 16400.722, 16401.192), stdev = 0.640
  CI (99.9%): [16398.259, 16403.185] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  33.823 ±(99.9%) 118.892 MB/sec [Average]
  (min, avg, max) = (≈ 0, 33.823, 56.372), stdev = 30.876
  CI (99.9%): [≈ 0, 152.715] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  16381.333 ±(99.9%) 57583.218 B/op [Average]
  (min, avg, max) = (≈ 0, 16381.333, 27395.604), stdev = 14954.179
  CI (99.9%): [≈ 0, 73964.551] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.011 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.006), stdev = 0.003
  CI (99.9%): [≈ 0, 0.012] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  0.598 ±(99.9%) 5.145 B/op [Average]
  (min, avg, max) = (≈ 0, 0.598, 2.988), stdev = 1.336
  CI (99.9%): [≈ 0, 5.743] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  3.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 81.33% complete, ETA 00:19:39
# Fork: 1 of 1
# Warmup Iteration   1: 7.053 ops/ms
# Warmup Iteration   2: 7.153 ops/ms
# Warmup Iteration   3: 7.161 ops/ms
Iteration   1: 7.159 ops/ms
                 ·gc.alloc.rate:                   106.625 MB/sec
                 ·gc.alloc.rate.norm:              16400.745 B/op
                 ·gc.churn.G1_Eden_Space:          112.749 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     17342.730 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1.406 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   2: 7.169 ops/ms
                 ·gc.alloc.rate:                   106.777 MB/sec
                 ·gc.alloc.rate.norm:              16400.744 B/op
                 ·gc.churn.G1_Eden_Space:          112.748 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     17317.813 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.514 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   3: 7.149 ops/ms
                 ·gc.alloc.rate:                   106.485 MB/sec
                 ·gc.alloc.rate.norm:              16400.746 B/op
                 ·gc.churn.G1_Eden_Space:          112.746 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     17365.046 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.354 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         4.000 ms

Iteration   4: 7.158 ops/ms
                 ·gc.alloc.rate:               106.619 MB/sec
                 ·gc.alloc.rate.norm:          16400.377 B/op
                 ·gc.churn.G1_Eden_Space:      56.374 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 8671.607 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   5: 7.157 ops/ms
                 ·gc.alloc.rate:                   106.602 MB/sec
                 ·gc.alloc.rate.norm:              16401.228 B/op
                 ·gc.churn.G1_Eden_Space:          112.747 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     17346.607 B/op
                 ·gc.churn.G1_Survivor_Space:      0.338 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 52.037 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  7.158 ±(99.9%) 0.027 ops/ms [Average]
  (min, avg, max) = (7.149, 7.158, 7.169), stdev = 0.007
  CI (99.9%): [7.132, 7.185] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  106.622 ±(99.9%) 0.400 MB/sec [Average]
  (min, avg, max) = (106.485, 106.622, 106.777), stdev = 0.104
  CI (99.9%): [106.221, 107.022] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  16400.768 ±(99.9%) 1.164 B/op [Average]
  (min, avg, max) = (16400.377, 16400.768, 16401.228), stdev = 0.302
  CI (99.9%): [16399.604, 16401.932] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  101.473 ±(99.9%) 97.078 MB/sec [Average]
  (min, avg, max) = (56.374, 101.473, 112.749), stdev = 25.211
  CI (99.9%): [4.395, 198.551] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  15608.760 ±(99.9%) 14932.886 B/op [Average]
  (min, avg, max) = (8671.607, 15608.760, 17365.046), stdev = 3878.023
  CI (99.9%): [675.874, 30541.647] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.071 ±(99.9%) 0.576 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.071, 0.338), stdev = 0.150
  CI (99.9%): [≈ 0, 0.647] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  10.862 ±(99.9%) 88.655 B/op [Average]
  (min, avg, max) = (≈ 0, 10.862, 52.037), stdev = 23.023
  CI (99.9%): [≈ 0, 99.517] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  9.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
  CI (99.9%): [9.000, 9.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  14.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1.000, 2.800, 4.000), stdev = 1.095
  CI (99.9%): [14.000, 14.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer
# Parameters: (targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 82.67% complete, ETA 00:18:15
# Fork: 1 of 1
# Warmup Iteration   1: 9.188 ops/ms
# Warmup Iteration   2: 9.370 ops/ms
# Warmup Iteration   3: 9.397 ops/ms
Iteration   1: 9.386 ops/ms
                 ·gc.alloc.rate:                   139.793 MB/sec
                 ·gc.alloc.rate.norm:              16400.569 B/op
                 ·gc.churn.G1_Eden_Space:          112.749 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     13227.719 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.334 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   2: 9.404 ops/ms
                 ·gc.alloc.rate:                   140.077 MB/sec
                 ·gc.alloc.rate.norm:              16400.847 B/op
                 ·gc.churn.G1_Eden_Space:          169.121 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     19801.493 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.660 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         5.000 ms

Iteration   3: 9.392 ops/ms
                 ·gc.alloc.rate:                   139.898 MB/sec
                 ·gc.alloc.rate.norm:              16400.936 B/op
                 ·gc.churn.G1_Eden_Space:          112.747 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     13217.861 B/op
                 ·gc.churn.G1_Survivor_Space:      0.340 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 39.898 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         3.000 ms

Iteration   4: 9.323 ops/ms
                 ·gc.alloc.rate:                   138.864 MB/sec
                 ·gc.alloc.rate.norm:              16400.855 B/op
                 ·gc.churn.G1_Eden_Space:          169.119 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     19974.162 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.230 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         3.000 ms

Iteration   5: 9.359 ops/ms
                 ·gc.alloc.rate:                   139.394 MB/sec
                 ·gc.alloc.rate.norm:              16400.570 B/op
                 ·gc.churn.G1_Eden_Space:          112.745 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     13265.172 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.674 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         2.000 ms



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer":
  9.373 ±(99.9%) 0.125 ops/ms [Average]
  (min, avg, max) = (9.323, 9.373, 9.404), stdev = 0.032
  CI (99.9%): [9.248, 9.498] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate":
  139.605 ±(99.9%) 1.864 MB/sec [Average]
  (min, avg, max) = (138.864, 139.605, 140.077), stdev = 0.484
  CI (99.9%): [137.741, 141.469] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm":
  16400.755 ±(99.9%) 0.667 B/op [Average]
  (min, avg, max) = (16400.569, 16400.755, 16400.936), stdev = 0.173
  CI (99.9%): [16400.088, 16401.422] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space":
  135.296 ±(99.9%) 118.896 MB/sec [Average]
  (min, avg, max) = (112.745, 135.296, 169.121), stdev = 30.877
  CI (99.9%): [16.400, 254.192] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm":
  15897.281 ±(99.9%) 14029.466 B/op [Average]
  (min, avg, max) = (13217.861, 15897.281, 19974.162), stdev = 3643.408
  CI (99.9%): [1867.815, 29926.747] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space":
  0.071 ±(99.9%) 0.579 MB/sec [Average]
  (min, avg, max) = (0.002, 0.071, 0.340), stdev = 0.150
  CI (99.9%): [≈ 0, 0.650] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm":
  8.359 ±(99.9%) 67.894 B/op [Average]
  (min, avg, max) = (0.230, 8.359, 39.898), stdev = 17.632
  CI (99.9%): [≈ 0, 76.253] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.count":
  12.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
  CI (99.9%): [12.000, 12.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readDirectBuffer:·gc.time":
  16.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.095
  CI (99.9%): [16.000, 16.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 128, transferSize = 128)

# Run progress: 84.00% complete, ETA 00:16:50
# Fork: 1 of 1
# Warmup Iteration   1: 72600.936 ops/ms
# Warmup Iteration   2: 73787.128 ops/ms
# Warmup Iteration   3: 77031.597 ops/ms
Iteration   1: 76855.839 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 76983.556 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 76845.098 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 77020.892 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 77042.012 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  76949.479 ±(99.9%) 357.547 ops/ms [Average]
  (min, avg, max) = (76845.098, 76949.479, 77042.012), stdev = 92.854
  CI (99.9%): [76591.932, 77307.026] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 128, transferSize = 1024)

# Run progress: 85.33% complete, ETA 00:15:26
# Fork: 1 of 1
# Warmup Iteration   1: 69594.315 ops/ms
# Warmup Iteration   2: 67455.923 ops/ms
# Warmup Iteration   3: 76668.871 ops/ms
Iteration   1: 76702.305 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 76732.656 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 76425.713 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 76733.696 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 76695.366 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  76657.947 ±(99.9%) 504.346 ops/ms [Average]
  (min, avg, max) = (76425.713, 76657.947, 76733.696), stdev = 130.977
  CI (99.9%): [76153.601, 77162.293] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 128, transferSize = 1048576)

# Run progress: 86.67% complete, ETA 00:14:02
# Fork: 1 of 1
# Warmup Iteration   1: 72743.054 ops/ms
# Warmup Iteration   2: 73828.699 ops/ms
# Warmup Iteration   3: 77121.443 ops/ms
Iteration   1: 77151.563 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 77133.909 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 77219.737 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 77197.589 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 77124.278 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  77165.415 ±(99.9%) 159.497 ops/ms [Average]
  (min, avg, max) = (77124.278, 77165.415, 77219.737), stdev = 41.421
  CI (99.9%): [77005.918, 77324.912] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 1024, transferSize = 128)

# Run progress: 88.00% complete, ETA 00:12:38
# Fork: 1 of 1
# Warmup Iteration   1: 9099.656 ops/ms
# Warmup Iteration   2: 9125.271 ops/ms
# Warmup Iteration   3: 9272.570 ops/ms
Iteration   1: 9274.460 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 9276.038 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 9274.621 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 9265.477 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 9273.504 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  9272.820 ±(99.9%) 16.187 ops/ms [Average]
  (min, avg, max) = (9265.477, 9272.820, 9276.038), stdev = 4.204
  CI (99.9%): [9256.633, 9289.007] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 1024, transferSize = 1024)

# Run progress: 89.33% complete, ETA 00:11:13
# Fork: 1 of 1
# Warmup Iteration   1: 33502.781 ops/ms
# Warmup Iteration   2: 32511.530 ops/ms
# Warmup Iteration   3: 32078.436 ops/ms
Iteration   1: 31914.159 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 31925.199 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 31941.686 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 31933.830 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 32048.350 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  31952.645 ±(99.9%) 209.745 ops/ms [Average]
  (min, avg, max) = (31914.159, 31952.645, 32048.350), stdev = 54.470
  CI (99.9%): [31742.900, 32162.390] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 1024, transferSize = 1048576)

# Run progress: 90.67% complete, ETA 00:09:49
# Fork: 1 of 1
# Warmup Iteration   1: 35115.588 ops/ms
# Warmup Iteration   2: 35879.187 ops/ms
# Warmup Iteration   3: 36447.372 ops/ms
Iteration   1: 36225.555 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 36439.255 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 36429.896 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 36090.086 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 36423.406 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  36321.640 ±(99.9%) 605.049 ops/ms [Average]
  (min, avg, max) = (36090.086, 36321.640, 36439.255), stdev = 157.129
  CI (99.9%): [35716.590, 36926.689] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 1048576, transferSize = 128)

# Run progress: 92.00% complete, ETA 00:08:25
# Fork: 1 of 1
# Warmup Iteration   1: 9.533 ops/ms
# Warmup Iteration   2: 9.470 ops/ms
# Warmup Iteration   3: 9.538 ops/ms
Iteration   1: 9.535 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 9.537 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 9.538 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 9.540 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 9.538 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  9.538 ±(99.9%) 0.006 ops/ms [Average]
  (min, avg, max) = (9.535, 9.538, 9.540), stdev = 0.002
  CI (99.9%): [9.532, 9.544] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  0.005 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.004, 0.005, 0.005), stdev = 0.001
  CI (99.9%): [0.004, 0.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 1048576, transferSize = 1024)

# Run progress: 93.33% complete, ETA 00:07:01
# Fork: 1 of 1
# Warmup Iteration   1: 16.406 ops/ms
# Warmup Iteration   2: 16.435 ops/ms
# Warmup Iteration   3: 16.453 ops/ms
Iteration   1: 16.473 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 16.484 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 16.472 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 16.477 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 16.484 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  16.478 ±(99.9%) 0.022 ops/ms [Average]
  (min, avg, max) = (16.472, 16.478, 16.484), stdev = 0.006
  CI (99.9%): [16.456, 16.500] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  0.003 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer
# Parameters: (targetBufferSize = 1048576, transferSize = 1048576)

# Run progress: 94.67% complete, ETA 00:05:36
# Fork: 1 of 1
# Warmup Iteration   1: 18.696 ops/ms
# Warmup Iteration   2: 18.729 ops/ms
# Warmup Iteration   3: 18.740 ops/ms
Iteration   1: 18.753 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 18.756 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 18.754 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 18.752 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 18.748 ops/ms
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer":
  18.753 ±(99.9%) 0.012 ops/ms [Average]
  (min, avg, max) = (18.748, 18.753, 18.756), stdev = 0.003
  CI (99.9%): [18.741, 18.765] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm":
  0.002 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ReaderBenchmarks.readHeapBuffer:·gc.count":
  ≈ 0 counts


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan
# Parameters: (transferSize = 128)

# Run progress: 96.00% complete, ETA 00:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 4600.571 ops/ms
# Warmup Iteration   2: 4528.725 ops/ms
# Warmup Iteration   3: 4500.680 ops/ms
Iteration   1: 4498.367 ops/ms
                 ·gc.alloc.rate:                   1782.145 MB/sec
                 ·gc.alloc.rate.norm:              436.233 B/op
                 ·gc.churn.G1_Eden_Space:          1803.987 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     441.579 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         18.000 ms

Iteration   2: 4500.485 ops/ms
                 ·gc.alloc.rate:                   1782.988 MB/sec
                 ·gc.alloc.rate.norm:              436.232 B/op
                 ·gc.churn.G1_Eden_Space:          1747.632 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     427.581 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         17.000 ms

Iteration   3: 4498.447 ops/ms
                 ·gc.alloc.rate:                   1782.152 MB/sec
                 ·gc.alloc.rate.norm:              436.232 B/op
                 ·gc.churn.G1_Eden_Space:          1803.958 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     441.570 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         16.000 ms

Iteration   4: 4499.378 ops/ms
                 ·gc.alloc.rate:                   1782.532 MB/sec
                 ·gc.alloc.rate.norm:              436.232 B/op
                 ·gc.churn.G1_Eden_Space:          1803.976 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     441.480 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         20.000 ms

Iteration   5: 4498.656 ops/ms
                 ·gc.alloc.rate:                   1782.248 MB/sec
                 ·gc.alloc.rate.norm:              436.231 B/op
                 ·gc.churn.G1_Eden_Space:          1747.609 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     427.753 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         27.000 ms



Result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan":
  4499.066 ±(99.9%) 3.417 ops/ms [Average]
  (min, avg, max) = (4498.367, 4499.066, 4500.485), stdev = 0.887
  CI (99.9%): [4495.650, 4502.483] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.alloc.rate":
  1782.413 ±(99.9%) 1.378 MB/sec [Average]
  (min, avg, max) = (1782.145, 1782.413, 1782.988), stdev = 0.358
  CI (99.9%): [1781.035, 1783.791] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.alloc.rate.norm":
  436.232 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (436.231, 436.232, 436.233), stdev = 0.001
  CI (99.9%): [436.230, 436.234] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space":
  1781.432 ±(99.9%) 118.855 MB/sec [Average]
  (min, avg, max) = (1747.609, 1781.432, 1803.987), stdev = 30.866
  CI (99.9%): [1662.577, 1900.287] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space.norm":
  435.993 ±(99.9%) 29.267 B/op [Average]
  (min, avg, max) = (427.581, 435.993, 441.579), stdev = 7.600
  CI (99.9%): [406.726, 465.259] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.005 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.count":
  158.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (31.000, 31.600, 32.000), stdev = 0.548
  CI (99.9%): [158.000, 158.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.time":
  98.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (16.000, 19.600, 27.000), stdev = 4.393
  CI (99.9%): [98.000, 98.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan
# Parameters: (transferSize = 1024)

# Run progress: 97.33% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: 4681.324 ops/ms
# Warmup Iteration   2: 4599.902 ops/ms
# Warmup Iteration   3: 4572.351 ops/ms
Iteration   1: 4563.751 ops/ms
                 ·gc.alloc.rate:                   1794.453 MB/sec
                 ·gc.alloc.rate.norm:              432.955 B/op
                 ·gc.churn.G1_Eden_Space:          1803.965 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     435.250 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         17.000 ms

Iteration   2: 4574.998 ops/ms
                 ·gc.alloc.rate:                   1798.890 MB/sec
                 ·gc.alloc.rate.norm:              432.954 B/op
                 ·gc.churn.G1_Eden_Space:          1804.003 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     434.185 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         23.000 ms

Iteration   3: 4573.741 ops/ms
                 ·gc.alloc.rate:                   1798.346 MB/sec
                 ·gc.alloc.rate.norm:              432.954 B/op
                 ·gc.churn.G1_Eden_Space:          1803.947 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     434.303 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 4572.815 ops/ms
                 ·gc.alloc.rate:                   1797.962 MB/sec
                 ·gc.alloc.rate.norm:              432.954 B/op
                 ·gc.churn.G1_Eden_Space:          1803.922 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     434.389 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         22.000 ms

Iteration   5: 4571.419 ops/ms
                 ·gc.alloc.rate:                   1797.454 MB/sec
                 ·gc.alloc.rate.norm:              432.954 B/op
                 ·gc.churn.G1_Eden_Space:          1803.985 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     434.527 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         22.000 ms



Result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan":
  4571.344 ±(99.9%) 17.104 ops/ms [Average]
  (min, avg, max) = (4563.751, 4571.344, 4574.998), stdev = 4.442
  CI (99.9%): [4554.240, 4588.449] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.alloc.rate":
  1797.421 ±(99.9%) 6.702 MB/sec [Average]
  (min, avg, max) = (1794.453, 1797.421, 1798.890), stdev = 1.741
  CI (99.9%): [1790.719, 1804.123] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.alloc.rate.norm":
  432.954 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (432.954, 432.954, 432.955), stdev = 0.001
  CI (99.9%): [432.953, 432.956] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space":
  1803.964 ±(99.9%) 0.122 MB/sec [Average]
  (min, avg, max) = (1803.922, 1803.964, 1804.003), stdev = 0.032
  CI (99.9%): [1803.843, 1804.086] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space.norm":
  434.531 ±(99.9%) 1.621 B/op [Average]
  (min, avg, max) = (434.185, 434.531, 435.250), stdev = 0.421
  CI (99.9%): [432.909, 436.152] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁵, 0.001] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.count":
  160.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (32.000, 32.000, 32.000), stdev = 0.001
  CI (99.9%): [160.000, 160.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.time":
  104.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (17.000, 20.800, 23.000), stdev = 2.387
  CI (99.9%): [104.000, 104.000] (assumes normal distribution)


# JMH version: 1.27
# VM version: JDK 17-internal, OpenJDK 64-Bit Server VM, 17-internal+0-adhoc.marschall.jdk
# VM invoker: /home/marschall/tmp/JDK-4926314/no-streamdecoder/jdk/bin/java
# VM options: -Djmh.blackhole.mode=COMPILER
# JMH blackhole mode: compiler-assisted blackhole
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan
# Parameters: (transferSize = 1048576)

# Run progress: 98.67% complete, ETA 00:01:24
# Fork: 1 of 1
# Warmup Iteration   1: 5297.044 ops/ms
# Warmup Iteration   2: 5157.835 ops/ms
# Warmup Iteration   3: 5151.708 ops/ms
Iteration   1: 5149.587 ops/ms
                 ·gc.alloc.rate:                   2022.885 MB/sec
                 ·gc.alloc.rate.norm:              432.545 B/op
                 ·gc.churn.G1_Eden_Space:          2029.463 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     433.951 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         22.000 ms

Iteration   2: 5148.703 ops/ms
                 ·gc.alloc.rate:                   2022.541 MB/sec
                 ·gc.alloc.rate.norm:              432.545 B/op
                 ·gc.churn.G1_Eden_Space:          2029.486 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     434.030 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         21.000 ms

Iteration   3: 5149.365 ops/ms
                 ·gc.alloc.rate:                   2022.791 MB/sec
                 ·gc.alloc.rate.norm:              432.544 B/op
                 ·gc.churn.G1_Eden_Space:          2029.463 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     433.971 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 5145.961 ops/ms
                 ·gc.alloc.rate:                   2021.454 MB/sec
                 ·gc.alloc.rate.norm:              432.544 B/op
                 ·gc.churn.G1_Eden_Space:          2029.461 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     434.258 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         18.000 ms

Iteration   5: 5151.472 ops/ms
                 ·gc.alloc.rate:                   2023.581 MB/sec
                 ·gc.alloc.rate.norm:              432.544 B/op
                 ·gc.churn.G1_Eden_Space:          2029.426 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     433.793 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         20.000 ms



Result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan":
  5149.017 ±(99.9%) 7.680 ops/ms [Average]
  (min, avg, max) = (5145.961, 5149.017, 5151.472), stdev = 1.994
  CI (99.9%): [5141.338, 5156.697] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.alloc.rate":
  2022.650 ±(99.9%) 2.974 MB/sec [Average]
  (min, avg, max) = (2021.454, 2022.650, 2023.581), stdev = 0.772
  CI (99.9%): [2019.676, 2025.624] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.alloc.rate.norm":
  432.544 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (432.544, 432.544, 432.545), stdev = 0.001
  CI (99.9%): [432.543, 432.546] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space":
  2029.460 ±(99.9%) 0.082 MB/sec [Average]
  (min, avg, max) = (2029.426, 2029.460, 2029.486), stdev = 0.021
  CI (99.9%): [2029.378, 2029.542] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space.norm":
  434.001 ±(99.9%) 0.647 B/op [Average]
  (min, avg, max) = (433.793, 434.001, 434.258), stdev = 0.168
  CI (99.9%): [433.353, 434.648] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.003, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.001, 0.006] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.count":
  180.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (36.000, 36.000, 36.000), stdev = 0.001
  CI (99.9%): [180.000, 180.000] (assumes normal distribution)

Secondary result "com.github.marschall.readerbenchmarks.ScannerBenchmarks.scan:·gc.time":
  101.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (18.000, 20.200, 22.000), stdev = 1.483
  CI (99.9%): [101.000, 101.000] (assumes normal distribution)


# Run complete. Total time: 01:45:18

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                      (charsetName)  (targetBufferSize)  (transferSize)   Mode  Cnt      Score        Error   Units
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII                 128             128  thrpt    5   5516.624 ±     26.483  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII                 128             128  thrpt    5   1362.768 ±      6.497  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII                 128             128  thrpt    5    272.011 ±      0.002    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII                 128             128  thrpt    5   1364.245 ±     97.103  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII                 128             128  thrpt    5    272.305 ±     19.090    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII                 128             128  thrpt    5      0.003 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII                 128             128  thrpt    5      0.001 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII                 128             128  thrpt    5    121.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII                 128             128  thrpt    5     81.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII                 128            1024  thrpt    5   6753.969 ±     16.228  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII                 128            1024  thrpt    5   2011.945 ±      4.821  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII                 128            1024  thrpt    5    328.013 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII                 128            1024  thrpt    5   2006.918 ±    118.892  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII                 128            1024  thrpt    5    327.191 ±     18.733    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII                 128            1024  thrpt    5      0.003 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII                 128            1024  thrpt    5     ≈ 10⁻³                 B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII                 128            1024  thrpt    5    178.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII                 128            1024  thrpt    5    113.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII                 128         1048576  thrpt    5   6525.127 ±      8.950  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII                 128         1048576  thrpt    5   1943.772 ±      2.589  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII                 128         1048576  thrpt    5    328.013 ±      0.002    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII                 128         1048576  thrpt    5   1950.548 ±    118.928  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII                 128         1048576  thrpt    5    329.156 ±     20.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII                 128         1048576  thrpt    5      0.003 ±      0.004  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII                 128         1048576  thrpt    5      0.001 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII                 128         1048576  thrpt    5    173.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII                 128         1048576  thrpt    5     95.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII                1024             128  thrpt    5    872.530 ±      1.541  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII                1024             128  thrpt    5   1635.588 ±      2.929  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII                1024             128  thrpt    5   2064.081 ±      0.012    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII                1024             128  thrpt    5   1646.127 ±     97.096  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII                1024             128  thrpt    5   2077.376 ±    120.673    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII                1024             128  thrpt    5      0.003 ±      0.004  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII                1024             128  thrpt    5      0.004 ±      0.005    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII                1024             128  thrpt    5    146.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII                1024             128  thrpt    5     98.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII                1024            1024  thrpt    5   1364.120 ±      6.868  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII                1024            1024  thrpt    5   2557.091 ±     12.915  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII                1024            1024  thrpt    5   2064.078 ±      0.004    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII                1024            1024  thrpt    5   2559.388 ±    118.955  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII                1024            1024  thrpt    5   2065.929 ±     94.028    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII                1024            1024  thrpt    5      0.003 ±      0.006  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII                1024            1024  thrpt    5      0.003 ±      0.005    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII                1024            1024  thrpt    5    227.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII                1024            1024  thrpt    5    125.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII                1024         1048576  thrpt    5   1487.582 ±      7.179  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII                1024         1048576  thrpt    5   2788.503 ±     13.320  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII                1024         1048576  thrpt    5   2064.078 ±      0.005    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII                1024         1048576  thrpt    5   2784.867 ±    118.958  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII                1024         1048576  thrpt    5   2061.404 ±     95.120    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII                1024         1048576  thrpt    5      0.003 ±      0.003  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII                1024         1048576  thrpt    5      0.002 ±      0.002    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII                1024         1048576  thrpt    5    247.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII                1024         1048576  thrpt    5    139.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII             1048576             128  thrpt    5      1.009 ±      0.009  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII             1048576             128  thrpt    5     21.607 ±      0.198  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII             1048576             128  thrpt    5  23569.095 ±      5.556    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII             1048576             128  thrpt    5     22.548 ±    118.890  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII             1048576             128  thrpt    5  24577.182 ± 129588.596    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII             1048576             128  thrpt    5      0.001 ±      0.005  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII             1048576             128  thrpt    5      0.603 ±      5.196    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII             1048576             128  thrpt    5      2.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII             1048576             128  thrpt    5      3.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII             1048576            1024  thrpt    5      1.158 ±      0.019  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII             1048576            1024  thrpt    5     17.247 ±      0.285  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII             1048576            1024  thrpt    5  16400.956 ±      4.843    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII             1048576            1024  thrpt    5     22.548 ±    118.889  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII             1048576            1024  thrpt    5  21436.834 ± 113030.253    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII             1048576            1024  thrpt    5     ≈ 10⁻³               MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII             1048576            1024  thrpt    5      0.384 ±      3.307    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII             1048576            1024  thrpt    5      2.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII             1048576            1024  thrpt    5      3.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                        US-ASCII             1048576         1048576  thrpt    5      2.055 ±      0.009  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                         US-ASCII             1048576         1048576  thrpt    5     43.978 ±      0.182  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                    US-ASCII             1048576         1048576  thrpt    5  23568.799 ±      2.732    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                US-ASCII             1048576         1048576  thrpt    5     33.823 ±    118.893  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm           US-ASCII             1048576         1048576  thrpt    5  18127.529 ±  63720.831    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space            US-ASCII             1048576         1048576  thrpt    5      0.001 ±      0.006  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm       US-ASCII             1048576         1048576  thrpt    5      0.427 ±      3.256    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                              US-ASCII             1048576         1048576  thrpt    5      3.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                               US-ASCII             1048576         1048576  thrpt    5      5.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1                 128             128  thrpt    5   6296.214 ±     21.458  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1                 128             128  thrpt    5   1555.341 ±      5.302  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1                 128             128  thrpt    5    272.011 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1                 128             128  thrpt    5   1555.905 ±    118.907  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1                 128             128  thrpt    5    272.107 ±     20.078    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1                 128             128  thrpt    5      0.003 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1                 128             128  thrpt    5     ≈ 10⁻³                 B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1                 128             128  thrpt    5    138.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1                 128             128  thrpt    5    100.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1                 128            1024  thrpt    5   7315.468 ±     15.651  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1                 128            1024  thrpt    5   1807.148 ±      3.795  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1                 128            1024  thrpt    5    272.011 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1                 128            1024  thrpt    5   1815.247 ±     97.176  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1                 128            1024  thrpt    5    273.230 ±     14.684    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1                 128            1024  thrpt    5      0.003 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1                 128            1024  thrpt    5     ≈ 10⁻³                 B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1                 128            1024  thrpt    5    161.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1                 128            1024  thrpt    5    104.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1                 128         1048576  thrpt    5   7018.084 ±     13.125  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1                 128         1048576  thrpt    5   1733.682 ±      3.247  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1                 128         1048576  thrpt    5    272.011 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1                 128         1048576  thrpt    5   1736.315 ±     97.033  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1                 128         1048576  thrpt    5    272.424 ±     15.192    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1                 128         1048576  thrpt    5      0.003 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1                 128         1048576  thrpt    5     ≈ 10⁻³                 B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1                 128         1048576  thrpt    5    154.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1                 128         1048576  thrpt    5     90.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1                1024             128  thrpt    5    868.645 ±      1.917  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1                1024             128  thrpt    5   1672.469 ±      3.658  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1                1024             128  thrpt    5   2120.082 ±      0.011    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1                1024             128  thrpt    5   1668.660 ±    118.924  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1                1024             128  thrpt    5   2115.260 ±    152.173    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1                1024             128  thrpt    5      0.003 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1                1024             128  thrpt    5      0.004 ±      0.003    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1                1024             128  thrpt    5    148.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1                1024             128  thrpt    5     83.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1                1024            1024  thrpt    5   1582.063 ±      6.088  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1                1024            1024  thrpt    5   2965.622 ±     11.350  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1                1024            1024  thrpt    5   2064.078 ±      0.006    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1                1024            1024  thrpt    5   2965.270 ±    118.821  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1                1024            1024  thrpt    5   2063.842 ±     86.346    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1                1024            1024  thrpt    5      0.004 ±      0.005  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1                1024            1024  thrpt    5      0.002 ±      0.004    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1                1024            1024  thrpt    5    263.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1                1024            1024  thrpt    5    147.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1                1024         1048576  thrpt    5   1590.162 ±      7.792  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1                1024         1048576  thrpt    5   3061.680 ±     15.085  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1                1024         1048576  thrpt    5   2120.080 ±      0.006    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1                1024         1048576  thrpt    5   3066.753 ±    118.862  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1                1024         1048576  thrpt    5   2123.589 ±     80.056    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1                1024         1048576  thrpt    5      0.004 ±      0.006  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1                1024         1048576  thrpt    5      0.003 ±      0.004    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1                1024         1048576  thrpt    5    272.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1                1024         1048576  thrpt    5    152.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1             1048576             128  thrpt    5      0.995 ±      0.028  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1             1048576             128  thrpt    5     21.288 ±      0.602  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1             1048576             128  thrpt    5  23569.117 ±      5.659    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1             1048576             128  thrpt    5     22.549 ±    118.892  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1             1048576             128  thrpt    5  25074.877 ± 132213.107    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1             1048576             128  thrpt    5      2.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1             1048576             128  thrpt    5      4.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1             1048576            1024  thrpt    5      1.469 ±      0.008  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1             1048576            1024  thrpt    5     31.439 ±      0.179  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1             1048576            1024  thrpt    5  23569.117 ±      3.808    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1             1048576            1024  thrpt    5     33.823 ±    118.892  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1             1048576            1024  thrpt    5  25344.534 ±  89089.798    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1             1048576            1024  thrpt    5      0.001 ±      0.011  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1             1048576            1024  thrpt    5      0.940 ±      8.098    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1             1048576            1024  thrpt    5      3.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1             1048576            1024  thrpt    5      5.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                      ISO-8859-1             1048576         1048576  thrpt    5      2.217 ±      0.012  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                       ISO-8859-1             1048576         1048576  thrpt    5     33.015 ±      0.178  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                  ISO-8859-1             1048576         1048576  thrpt    5  16400.740 ±      2.524    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space              ISO-8859-1             1048576         1048576  thrpt    5     33.824 ±    118.895  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm         ISO-8859-1             1048576         1048576  thrpt    5  16804.737 ±  59071.094    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space          ISO-8859-1             1048576         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm     ISO-8859-1             1048576         1048576  thrpt    5      0.045 ±      0.385    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                            ISO-8859-1             1048576         1048576  thrpt    5      3.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                             ISO-8859-1             1048576         1048576  thrpt    5      5.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8                 128             128  thrpt    5   5836.807 ±      4.998  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8                 128             128  thrpt    5   1738.718 ±      1.493  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8                 128             128  thrpt    5    328.013 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8                 128             128  thrpt    5   1747.589 ±      0.107  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8                 128             128  thrpt    5    329.686 ±      0.279    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8                 128             128  thrpt    5      0.002 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8                 128             128  thrpt    5     ≈ 10⁻³                 B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8                 128             128  thrpt    5    155.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8                 128             128  thrpt    5     91.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8                 128            1024  thrpt    5   6406.503 ±     15.511  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8                 128            1024  thrpt    5   1908.441 ±      4.665  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8                 128            1024  thrpt    5    328.013 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8                 128            1024  thrpt    5   1905.446 ±     97.004  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8                 128            1024  thrpt    5    327.499 ±     17.130    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8                 128            1024  thrpt    5      0.003 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8                 128            1024  thrpt    5      0.001 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8                 128            1024  thrpt    5    169.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8                 128            1024  thrpt    5     99.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8                 128         1048576  thrpt    5   6235.251 ±     37.049  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8                 128         1048576  thrpt    5   1857.419 ±     11.027  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8                 128         1048576  thrpt    5    328.013 ±      0.001    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8                 128         1048576  thrpt    5   1860.339 ±      0.087  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8                 128         1048576  thrpt    5    328.529 ±      1.951    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8                 128         1048576  thrpt    5      0.003 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8                 128         1048576  thrpt    5     ≈ 10⁻³                 B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8                 128         1048576  thrpt    5    165.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8                 128         1048576  thrpt    5     97.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8                1024             128  thrpt    5   1120.305 ±      3.981  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8                1024             128  thrpt    5   2157.024 ±      7.687  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8                1024             128  thrpt    5   2120.081 ±      0.009    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8                1024             128  thrpt    5   2164.769 ±    118.903  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8                1024             128  thrpt    5   2127.697 ±    117.924    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8                1024             128  thrpt    5      0.003 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8                1024             128  thrpt    5      0.003 ±      0.002    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8                1024             128  thrpt    5    192.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8                1024             128  thrpt    5    106.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8                1024            1024  thrpt    5   1490.251 ±     14.154  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8                1024            1024  thrpt    5   2869.319 ±     27.327  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8                1024            1024  thrpt    5   2120.080 ±      0.003    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8                1024            1024  thrpt    5   2875.080 ±      0.160  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8                1024            1024  thrpt    5   2124.347 ±     20.182    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8                1024            1024  thrpt    5      0.004 ±      0.007  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8                1024            1024  thrpt    5      0.003 ±      0.005    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8                1024            1024  thrpt    5    255.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8                1024            1024  thrpt    5    145.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8                1024         1048576  thrpt    5   1420.325 ±      3.323  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8                1024         1048576  thrpt    5   2734.656 ±      6.534  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8                1024         1048576  thrpt    5   2120.080 ±      0.006    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8                1024         1048576  thrpt    5   2739.751 ±    118.921  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8                1024         1048576  thrpt    5   2124.021 ±     87.899    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8                1024         1048576  thrpt    5      0.003 ±      0.003  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8                1024         1048576  thrpt    5      0.002 ±      0.003    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8                1024         1048576  thrpt    5    243.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8                1024         1048576  thrpt    5    146.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8             1048576             128  thrpt    5      1.391 ±      0.007  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8             1048576             128  thrpt    5     29.780 ±      0.142  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8             1048576             128  thrpt    5  23568.799 ±      4.031    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8             1048576             128  thrpt    5     22.549 ±    118.892  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8             1048576             128  thrpt    5  17847.461 ±  94104.511    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8             1048576             128  thrpt    5      0.001 ±      0.007  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8             1048576             128  thrpt    5      1.030 ±      5.643    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8             1048576             128  thrpt    5      2.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8             1048576             128  thrpt    5      4.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8             1048576            1024  thrpt    5      1.985 ±      0.004  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8             1048576            1024  thrpt    5     42.493 ±      0.091  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8             1048576            1024  thrpt    5  23569.095 ±      2.310    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8             1048576            1024  thrpt    5     45.097 ±     97.075  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8             1048576            1024  thrpt    5  25020.120 ±  53857.696    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8             1048576            1024  thrpt    5      0.001 ±      0.005  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8             1048576            1024  thrpt    5      0.401 ±      2.561    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8             1048576            1024  thrpt    5      4.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8             1048576            1024  thrpt    5      7.000                   ms
InputStreamReaderBenchmarks.readDirectBuffer                                           UTF-8             1048576         1048576  thrpt    5      1.908 ±      0.012  ops/ms
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                            UTF-8             1048576         1048576  thrpt    5     40.830 ±      0.264  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                       UTF-8             1048576         1048576  thrpt    5  23569.139 ±      2.401    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                   UTF-8             1048576         1048576  thrpt    5     45.097 ±     97.074  MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm              UTF-8             1048576         1048576  thrpt    5  26014.262 ±  55997.704    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space               UTF-8             1048576         1048576  thrpt    5     ≈ 10⁻³               MB/sec
InputStreamReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm          UTF-8             1048576         1048576  thrpt    5      0.233 ±      1.270    B/op
InputStreamReaderBenchmarks.readDirectBuffer:·gc.count                                 UTF-8             1048576         1048576  thrpt    5      4.000               counts
InputStreamReaderBenchmarks.readDirectBuffer:·gc.time                                  UTF-8             1048576         1048576  thrpt    5      7.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII                 128             128  thrpt    5   9074.249 ±      7.535  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII                 128             128  thrpt    5    461.505 ±      0.385  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII                 128             128  thrpt    5     56.002 ±      0.001    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                  US-ASCII                 128             128  thrpt    5    462.262 ±     97.078  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm             US-ASCII                 128             128  thrpt    5     56.094 ±     11.752    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space              US-ASCII                 128             128  thrpt    5      0.001 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm         US-ASCII                 128             128  thrpt    5     ≈ 10⁻⁴                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII                 128             128  thrpt    5     41.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                 US-ASCII                 128             128  thrpt    5     27.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII                 128            1024  thrpt    5  10518.495 ±     47.568  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII                 128            1024  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII                 128            1024  thrpt    5     ≈ 10⁻⁵                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII                 128            1024  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII                 128         1048576  thrpt    5  11280.780 ±     35.744  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII                 128         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII                 128         1048576  thrpt    5     ≈ 10⁻⁵                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII                 128         1048576  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII                1024             128  thrpt    5   1020.140 ±     28.795  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII                1024             128  thrpt    5     51.883 ±      1.465  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII                1024             128  thrpt    5     56.003 ±      0.001    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                  US-ASCII                1024             128  thrpt    5     56.373 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm             US-ASCII                1024             128  thrpt    5     60.852 ±      1.729    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space              US-ASCII                1024             128  thrpt    5      0.001 ±      0.004  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm         US-ASCII                1024             128  thrpt    5      0.001 ±      0.004    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII                1024             128  thrpt    5      5.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                 US-ASCII                1024             128  thrpt    5      8.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII                1024            1024  thrpt    5   1821.546 ±     29.236  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII                1024            1024  thrpt    5     92.643 ±      1.492  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII                1024            1024  thrpt    5     56.003 ±      0.002    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                  US-ASCII                1024            1024  thrpt    5    101.473 ±     97.080  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm             US-ASCII                1024            1024  thrpt    5     61.315 ±     58.356    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space              US-ASCII                1024            1024  thrpt    5      0.003 ±      0.007  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm         US-ASCII                1024            1024  thrpt    5      0.002 ±      0.004    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII                1024            1024  thrpt    5      9.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                 US-ASCII                1024            1024  thrpt    5     14.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII                1024         1048576  thrpt    5   2286.883 ±      2.066  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII                1024         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII                1024         1048576  thrpt    5     ≈ 10⁻⁵                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII                1024         1048576  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII             1048576             128  thrpt    5      1.055 ±      0.001  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII             1048576             128  thrpt    5      0.054 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII             1048576             128  thrpt    5     56.041 ±      0.005    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII             1048576             128  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII             1048576            1024  thrpt    5      1.679 ±      0.005  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII             1048576            1024  thrpt    5      0.085 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII             1048576            1024  thrpt    5     56.027 ±      0.012    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII             1048576            1024  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                          US-ASCII             1048576         1048576  thrpt    5      1.557 ±      0.003  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                           US-ASCII             1048576         1048576  thrpt    5      0.079 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                      US-ASCII             1048576         1048576  thrpt    5     56.029 ±      0.009    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                US-ASCII             1048576         1048576  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1                 128             128  thrpt    5  10170.747 ±     30.870  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1                 128             128  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1                 128             128  thrpt    5     ≈ 10⁻⁵                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1                 128             128  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1                 128            1024  thrpt    5  13166.355 ±     18.081  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1                 128            1024  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1                 128            1024  thrpt    5     ≈ 10⁻⁵                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1                 128            1024  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1                 128         1048576  thrpt    5  13187.843 ±     10.397  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1                 128         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1                 128         1048576  thrpt    5     ≈ 10⁻⁵                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1                 128         1048576  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1                1024             128  thrpt    5    961.139 ±      1.110  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1                1024             128  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1                1024             128  thrpt    5     ≈ 10⁻⁴                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1                1024             128  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1                1024            1024  thrpt    5   2479.206 ±     33.898  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1                1024            1024  thrpt    5    126.090 ±      1.730  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1                1024            1024  thrpt    5     56.003 ±      0.003    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                ISO-8859-1                1024            1024  thrpt    5    124.021 ±     97.085  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm           ISO-8859-1                1024            1024  thrpt    5     55.063 ±     42.491    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space            ISO-8859-1                1024            1024  thrpt    5      0.032 ±      0.257  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm       ISO-8859-1                1024            1024  thrpt    5      0.014 ±      0.114    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1                1024            1024  thrpt    5     11.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                               ISO-8859-1                1024            1024  thrpt    5     15.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1                1024         1048576  thrpt    5   2614.825 ±      5.237  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1                1024         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1                1024         1048576  thrpt    5     ≈ 10⁻⁵                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1                1024         1048576  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1             1048576             128  thrpt    5      1.197 ±      0.001  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1             1048576             128  thrpt    5      0.061 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1             1048576             128  thrpt    5     56.035 ±      0.006    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1             1048576             128  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1             1048576            1024  thrpt    5      1.497 ±      0.004  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1             1048576            1024  thrpt    5      0.076 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1             1048576            1024  thrpt    5     56.030 ±      0.011    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1             1048576            1024  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                        ISO-8859-1             1048576         1048576  thrpt    5      1.552 ±      0.002  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                         ISO-8859-1             1048576         1048576  thrpt    5      0.079 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                    ISO-8859-1             1048576         1048576  thrpt    5     56.031 ±      0.011    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                              ISO-8859-1             1048576         1048576  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8                 128             128  thrpt    5   9659.056 ±     15.652  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8                 128             128  thrpt    5    491.255 ±      0.774  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8                 128             128  thrpt    5     56.002 ±      0.001    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                     UTF-8                 128             128  thrpt    5    496.091 ±     97.069  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm                UTF-8                 128             128  thrpt    5     56.553 ±     11.011    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space                 UTF-8                 128             128  thrpt    5      0.001 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm            UTF-8                 128             128  thrpt    5     ≈ 10⁻⁴                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8                 128             128  thrpt    5     44.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                    UTF-8                 128             128  thrpt    5     29.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8                 128            1024  thrpt    5  11308.651 ±     29.983  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8                 128            1024  thrpt    5    575.139 ±      1.515  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8                 128            1024  thrpt    5     56.002 ±      0.001    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                     UTF-8                 128            1024  thrpt    5    575.003 ±     97.084  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm                UTF-8                 128            1024  thrpt    5     55.989 ±      9.481    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space                 UTF-8                 128            1024  thrpt    5      0.001 ±      0.002  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm            UTF-8                 128            1024  thrpt    5     ≈ 10⁻⁴                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8                 128            1024  thrpt    5     51.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                    UTF-8                 128            1024  thrpt    5     37.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8                 128         1048576  thrpt    5  10638.382 ±     25.386  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8                 128         1048576  thrpt    5    541.052 ±      1.316  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8                 128         1048576  thrpt    5     56.002 ±      0.001    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                     UTF-8                 128         1048576  thrpt    5    541.179 ±    118.846  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm                UTF-8                 128         1048576  thrpt    5     56.016 ±     12.322    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space                 UTF-8                 128         1048576  thrpt    5      0.001 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm            UTF-8                 128         1048576  thrpt    5     ≈ 10⁻⁴                 B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8                 128         1048576  thrpt    5     48.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                    UTF-8                 128         1048576  thrpt    5     34.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8                1024             128  thrpt    5   1555.905 ±     55.786  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8                1024             128  thrpt    5     79.132 ±      2.835  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8                1024             128  thrpt    5     56.002 ±      0.004    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                     UTF-8                1024             128  thrpt    5     78.923 ±    118.895  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm                UTF-8                1024             128  thrpt    5     55.824 ±     83.681    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space                 UTF-8                1024             128  thrpt    5      0.002 ±      0.010  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm            UTF-8                1024             128  thrpt    5      0.001 ±      0.007    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8                1024             128  thrpt    5      7.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                    UTF-8                1024             128  thrpt    5     11.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8                1024            1024  thrpt    5   2376.269 ±     26.998  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8                1024            1024  thrpt    5    120.854 ±      1.366  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8                1024            1024  thrpt    5     56.003 ±      0.003    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                     UTF-8                1024            1024  thrpt    5    124.020 ±     97.050  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm                UTF-8                1024            1024  thrpt    5     57.464 ±     44.789    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space                 UTF-8                1024            1024  thrpt    5      0.034 ±      0.225  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm            UTF-8                1024            1024  thrpt    5      0.016 ±      0.104    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8                1024            1024  thrpt    5     11.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                    UTF-8                1024            1024  thrpt    5     16.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8                1024         1048576  thrpt    5   2181.864 ±      7.310  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8                1024         1048576  thrpt    5    110.969 ±      0.366  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8                1024         1048576  thrpt    5     56.003 ±      0.003    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space                     UTF-8                1024         1048576  thrpt    5    112.747 ±      0.008  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Eden_Space.norm                UTF-8                1024         1048576  thrpt    5     56.901 ±      0.191    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space                 UTF-8                1024         1048576  thrpt    5      0.031 ±      0.245  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.churn.G1_Survivor_Space.norm            UTF-8                1024         1048576  thrpt    5      0.016 ±      0.124    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8                1024         1048576  thrpt    5     10.000               counts
InputStreamReaderBenchmarks.readHeapBuffer:·gc.time                                    UTF-8                1024         1048576  thrpt    5     16.000                   ms
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8             1048576             128  thrpt    5      1.620 ±      0.009  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8             1048576             128  thrpt    5      0.082 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8             1048576             128  thrpt    5     56.028 ±      0.017    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8             1048576             128  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8             1048576            1024  thrpt    5      2.382 ±      0.004  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8             1048576            1024  thrpt    5      0.121 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8             1048576            1024  thrpt    5     56.019 ±      0.006    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8             1048576            1024  thrpt    5        ≈ 0               counts
InputStreamReaderBenchmarks.readHeapBuffer                                             UTF-8             1048576         1048576  thrpt    5      2.040 ±      0.002  ops/ms
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                              UTF-8             1048576         1048576  thrpt    5      0.104 ±      0.001  MB/sec
InputStreamReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                         UTF-8             1048576         1048576  thrpt    5     56.022 ±      0.011    B/op
InputStreamReaderBenchmarks.readHeapBuffer:·gc.count                                   UTF-8             1048576         1048576  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readDirectBuffer                                                        N/A                 128             128  thrpt    5  13012.112 ±    136.663  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A                 128             128  thrpt    5   3214.400 ±     33.582  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A                 128             128  thrpt    5    272.010 ±      0.001    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A                 128             128  thrpt    5   3213.332 ±      0.244  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A                 128             128  thrpt    5    271.921 ±      2.861    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A                 128             128  thrpt    5      0.004 ±      0.003  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A                 128             128  thrpt    5     ≈ 10⁻⁴                 B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A                 128             128  thrpt    5    285.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A                 128             128  thrpt    5    157.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A                 128            1024  thrpt    5  13012.799 ±    540.337  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A                 128            1024  thrpt    5   3214.565 ±    133.397  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A                 128            1024  thrpt    5    272.010 ±      0.001    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A                 128            1024  thrpt    5   3213.316 ±    153.439  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A                 128            1024  thrpt    5    271.907 ±      8.154    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A                 128            1024  thrpt    5      0.004 ±      0.006  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A                 128            1024  thrpt    5     ≈ 10⁻³                 B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A                 128            1024  thrpt    5    285.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A                 128            1024  thrpt    5    163.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A                 128         1048576  thrpt    5  13263.150 ±     23.718  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A                 128         1048576  thrpt    5   3276.436 ±      5.895  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A                 128         1048576  thrpt    5    272.010 ±      0.001    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A                 128         1048576  thrpt    5   3281.007 ±     97.187  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A                 128         1048576  thrpt    5    272.389 ±      7.938    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A                 128         1048576  thrpt    5      0.004 ±      0.007  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A                 128         1048576  thrpt    5     ≈ 10⁻³                 B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A                 128         1048576  thrpt    5    291.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A                 128         1048576  thrpt    5    159.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A                1024             128  thrpt    5   1658.300 ±      2.946  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A                1024             128  thrpt    5   3108.542 ±      5.563  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A                1024             128  thrpt    5   2064.078 ±      0.004    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A                1024             128  thrpt    5   3111.853 ±     97.234  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A                1024             128  thrpt    5   2066.273 ±     62.254    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A                1024             128  thrpt    5      0.003 ±      0.003  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A                1024             128  thrpt    5      0.002 ±      0.002    B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A                1024             128  thrpt    5    276.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A                1024             128  thrpt    5    160.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A                1024            1024  thrpt    5   3875.690 ±     37.620  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A                1024            1024  thrpt    5   7265.045 ±     70.427  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A                1024            1024  thrpt    5   2064.054 ±      0.002    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A                1024            1024  thrpt    5   7283.868 ±    139.229  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A                1024            1024  thrpt    5   2069.407 ±     39.266    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A                1024            1024  thrpt    5      0.005 ±      0.007  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A                1024            1024  thrpt    5      0.001 ±      0.002    B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A                1024            1024  thrpt    5    451.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A                1024            1024  thrpt    5    241.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A                1024         1048576  thrpt    5   3802.627 ±      9.604  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A                1024         1048576  thrpt    5   7127.986 ±     17.681  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A                1024         1048576  thrpt    5   2064.050 ±      0.002    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A                1024         1048576  thrpt    5   7131.275 ±    184.705  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A                1024         1048576  thrpt    5   2065.002 ±     52.861    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A                1024         1048576  thrpt    5      0.005 ±      0.011  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A                1024         1048576  thrpt    5      0.001 ±      0.003    B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A                1024         1048576  thrpt    5    407.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A                1024         1048576  thrpt    5    225.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A             1048576             128  thrpt    5      2.274 ±      0.028  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A             1048576             128  thrpt    5     33.868 ±      0.422  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A             1048576             128  thrpt    5  16400.722 ±      2.463    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A             1048576             128  thrpt    5     33.823 ±    118.892  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A             1048576             128  thrpt    5  16381.333 ±  57583.218    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A             1048576             128  thrpt    5      0.001 ±      0.011  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A             1048576             128  thrpt    5      0.598 ±      5.145    B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A             1048576             128  thrpt    5      3.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A             1048576             128  thrpt    5      5.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A             1048576            1024  thrpt    5      7.158 ±      0.027  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A             1048576            1024  thrpt    5    106.622 ±      0.400  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A             1048576            1024  thrpt    5  16400.768 ±      1.164    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A             1048576            1024  thrpt    5    101.473 ±     97.078  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A             1048576            1024  thrpt    5  15608.760 ±  14932.886    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A             1048576            1024  thrpt    5      0.071 ±      0.576  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A             1048576            1024  thrpt    5     10.862 ±     88.655    B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A             1048576            1024  thrpt    5      9.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A             1048576            1024  thrpt    5     14.000                   ms
ReaderBenchmarks.readDirectBuffer                                                        N/A             1048576         1048576  thrpt    5      9.373 ±      0.125  ops/ms
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate                                         N/A             1048576         1048576  thrpt    5    139.605 ±      1.864  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.alloc.rate.norm                                    N/A             1048576         1048576  thrpt    5  16400.755 ±      0.667    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space                                N/A             1048576         1048576  thrpt    5    135.296 ±    118.896  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Eden_Space.norm                           N/A             1048576         1048576  thrpt    5  15897.281 ±  14029.466    B/op
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space                            N/A             1048576         1048576  thrpt    5      0.071 ±      0.579  MB/sec
ReaderBenchmarks.readDirectBuffer:·gc.churn.G1_Survivor_Space.norm                       N/A             1048576         1048576  thrpt    5      8.359 ±     67.894    B/op
ReaderBenchmarks.readDirectBuffer:·gc.count                                              N/A             1048576         1048576  thrpt    5     12.000               counts
ReaderBenchmarks.readDirectBuffer:·gc.time                                               N/A             1048576         1048576  thrpt    5     16.000                   ms
ReaderBenchmarks.readHeapBuffer                                                          N/A                 128             128  thrpt    5  76949.479 ±    357.547  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A                 128             128  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A                 128             128  thrpt    5     ≈ 10⁻⁶                 B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A                 128             128  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A                 128            1024  thrpt    5  76657.947 ±    504.346  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A                 128            1024  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A                 128            1024  thrpt    5     ≈ 10⁻⁶                 B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A                 128            1024  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A                 128         1048576  thrpt    5  77165.415 ±    159.497  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A                 128         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A                 128         1048576  thrpt    5     ≈ 10⁻⁶                 B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A                 128         1048576  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A                1024             128  thrpt    5   9272.820 ±     16.187  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A                1024             128  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A                1024             128  thrpt    5     ≈ 10⁻⁵                 B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A                1024             128  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A                1024            1024  thrpt    5  31952.645 ±    209.745  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A                1024            1024  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A                1024            1024  thrpt    5     ≈ 10⁻⁶                 B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A                1024            1024  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A                1024         1048576  thrpt    5  36321.640 ±    605.049  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A                1024         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A                1024         1048576  thrpt    5     ≈ 10⁻⁶                 B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A                1024         1048576  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A             1048576             128  thrpt    5      9.538 ±      0.006  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A             1048576             128  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A             1048576             128  thrpt    5      0.005 ±      0.001    B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A             1048576             128  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A             1048576            1024  thrpt    5     16.478 ±      0.022  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A             1048576            1024  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A             1048576            1024  thrpt    5      0.003 ±      0.001    B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A             1048576            1024  thrpt    5        ≈ 0               counts
ReaderBenchmarks.readHeapBuffer                                                          N/A             1048576         1048576  thrpt    5     18.753 ±      0.012  ops/ms
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate                                           N/A             1048576         1048576  thrpt    5     ≈ 10⁻⁴               MB/sec
ReaderBenchmarks.readHeapBuffer:·gc.alloc.rate.norm                                      N/A             1048576         1048576  thrpt    5      0.002 ±      0.001    B/op
ReaderBenchmarks.readHeapBuffer:·gc.count                                                N/A             1048576         1048576  thrpt    5        ≈ 0               counts
ScannerBenchmarks.scan                                                                   N/A                 N/A             128  thrpt    5   4499.066 ±      3.417  ops/ms
ScannerBenchmarks.scan:·gc.alloc.rate                                                    N/A                 N/A             128  thrpt    5   1782.413 ±      1.378  MB/sec
ScannerBenchmarks.scan:·gc.alloc.rate.norm                                               N/A                 N/A             128  thrpt    5    436.232 ±      0.002    B/op
ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space                                           N/A                 N/A             128  thrpt    5   1781.432 ±    118.855  MB/sec
ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space.norm                                      N/A                 N/A             128  thrpt    5    435.993 ±     29.267    B/op
ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space                                       N/A                 N/A             128  thrpt    5      0.003 ±      0.005  MB/sec
ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space.norm                                  N/A                 N/A             128  thrpt    5      0.001 ±      0.001    B/op
ScannerBenchmarks.scan:·gc.count                                                         N/A                 N/A             128  thrpt    5    158.000               counts
ScannerBenchmarks.scan:·gc.time                                                          N/A                 N/A             128  thrpt    5     98.000                   ms
ScannerBenchmarks.scan                                                                   N/A                 N/A            1024  thrpt    5   4571.344 ±     17.104  ops/ms
ScannerBenchmarks.scan:·gc.alloc.rate                                                    N/A                 N/A            1024  thrpt    5   1797.421 ±      6.702  MB/sec
ScannerBenchmarks.scan:·gc.alloc.rate.norm                                               N/A                 N/A            1024  thrpt    5    432.954 ±      0.002    B/op
ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space                                           N/A                 N/A            1024  thrpt    5   1803.964 ±      0.122  MB/sec
ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space.norm                                      N/A                 N/A            1024  thrpt    5    434.531 ±      1.621    B/op
ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space                                       N/A                 N/A            1024  thrpt    5      0.003 ±      0.003  MB/sec
ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space.norm                                  N/A                 N/A            1024  thrpt    5      0.001 ±      0.001    B/op
ScannerBenchmarks.scan:·gc.count                                                         N/A                 N/A            1024  thrpt    5    160.000               counts
ScannerBenchmarks.scan:·gc.time                                                          N/A                 N/A            1024  thrpt    5    104.000                   ms
ScannerBenchmarks.scan                                                                   N/A                 N/A         1048576  thrpt    5   5149.017 ±      7.680  ops/ms
ScannerBenchmarks.scan:·gc.alloc.rate                                                    N/A                 N/A         1048576  thrpt    5   2022.650 ±      2.974  MB/sec
ScannerBenchmarks.scan:·gc.alloc.rate.norm                                               N/A                 N/A         1048576  thrpt    5    432.544 ±      0.001    B/op
ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space                                           N/A                 N/A         1048576  thrpt    5   2029.460 ±      0.082  MB/sec
ScannerBenchmarks.scan:·gc.churn.G1_Eden_Space.norm                                      N/A                 N/A         1048576  thrpt    5    434.001 ±      0.647    B/op
ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space                                       N/A                 N/A         1048576  thrpt    5      0.003 ±      0.002  MB/sec
ScannerBenchmarks.scan:·gc.churn.G1_Survivor_Space.norm                                  N/A                 N/A         1048576  thrpt    5      0.001 ±      0.001    B/op
ScannerBenchmarks.scan:·gc.count                                                         N/A                 N/A         1048576  thrpt    5    180.000               counts
ScannerBenchmarks.scan:·gc.time                                                          N/A                 N/A         1048576  thrpt    5    101.000                   ms

Benchmark result is saved to jmh-result.csv
